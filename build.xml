<?xml version="1.0" encoding="UTF-8"?>
<project default="jar" name="Build file for GNS">

  <property name="src" value="src"/>
  <property name="testsrc" location="test"/>
  <property name="build" value="build"/>
  <property name="build.classes" value="${build}/classes"/>
  <property name="build.jar" value="${build}/jars"/>
  <property name="lib" value="lib"/>
  <property name="junit" value="${lib}/junit-4.10.jar"/>
  <property name="dist" value="dist"/>
  <property name="conf" value="conf"/>
    
  <!-- Properties -->
  <property file="build.properties" />
  
  <path id="classpath.base">
    <pathelement location="${build}"/>
    <pathelement location="${build.classes}"/>
    <pathelement location="${conf}"/>
    <fileset dir="${lib}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
    <mkdir dir="${build.classes}"/>
  </target>

  <target name="compile" depends="init, buildnumber" description="compile java files">
    <javac srcdir="${src}" destdir="${build.classes}" debug="true" debuglevel="lines,vars,source"
           includeantruntime="false">
      
      <classpath refid="classpath.base"/>
    </javac>
  </target>
  
  <target name="main_jarbuild" depends="compile" description="generate jar files">
    <mkdir dir="${build.jar}"/>
    <jar destfile="${build.jar}/GNS.jar" filesetmanifest="mergewithoutmain">
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Main-Class" value="edu.umass.cs.gns.httpserver.GnsHttpServer"/>
        <attribute name="Class-Path" value="."/>
        <attribute name="Build-Version" value="${version.code}" />
      </manifest>
      <fileset dir="${build.classes}" includes="**/*.class"/>
      <fileset dir="${conf}" includes="**" />
      <zipgroupfileset dir="${lib}" includes="**/*.jar" excludes="${junit}"/>
    </jar>
  </target>
    
  <target name="nio_jarbuild" depends="compile" description="generate jar files">
    <mkdir dir="${build.jar}"/>
    <jar destfile="${build.jar}/nio-1.0.jar" filesetmanifest="mergewithoutmain">
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor"
                     value="University of Massachusetts" />
        <attribute name="Implementation-Title" value="GNS Nio Library" />
        <attribute name="Implementation-Version"
                   value="${VERSION}-${RELEASE}" />
        <attribute name="Build-Version" value="${version.code}" />
      </manifest>
      <fileset dir="${build.classes}" includes="edu/umass/cs/nio/*.class"/>
      <fileset dir="${build.classes}" includes="edu/umass/cs/nio/nioutils/*.class"/>
      <fileset dir="${build.classes}" includes="edu/umass/cs/utils/*.class"/>
      <fileset dir="${build.classes}" includes="org/json/*.class"/>
      <!-- interesting special cases here added because of one use of ReconfigurableClient in NIOInstrumenter -->
      <fileset dir="${build.classes}" includes="edu/umass/cs/reconfiguration/**/*.class"/>
      <fileset dir="${build.classes}" includes="edu/umass/cs/gigapaxos/**/*.class"/>
      <fileset dir="${build.classes}" includes="edu/umass/cs/protocoltask/**/*.class"/>
      
      <fileset dir="${conf}" includes="trustStore/**, keystore/**" />
    </jar>
  </target>

  <target name="clean" description="remove generated files">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="doc" description="generate javadoc">
    <mkdir dir="${build}/doc"/>
    <javadoc packagenames="edu.umass.cs.gns.*" sourcepath="${src}" destdir="${build}/doc">
      <classpath refid="classpath.base"/>
      <link href="http://java.sun.com/javase/6/docs/api/"/>
    </javadoc>
  </target>
    
  <target name="jar" depends="main_jarbuild, nio_jarbuild">
    <mkdir dir="${dist}"/>
    <copy todir="${dist}">
      <fileset dir="${build.jar}" includes="**"/>
    </copy>  
    <mkdir dir="${dist}/conf"/>
    <copy todir="${dist}/conf">
      <fileset dir="${conf}" includes="**" />  
    </copy>
    <copy file="${build.jar}/GNS.jar" tofile="${dist}/gnsserver-${VERSION}-${RELEASE}.jar"/>
  </target>
    

  <target name="all" depends="clean,jar"
          description="build all files"/>
    
  <target name="buildnumber" description="Generates version number and sets it in properties file.">
    <buildnumber file="build.number" />

    <property name="version.code" value="${VERSION}_${RELEASE}_build${build.number}" />

    <echo>Version: ${version.code}</echo>

  </target>
  
</project>
