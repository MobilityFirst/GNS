//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../src/edu/umass/cs/gnsclient/client/util/keystorage/IOSKeyStorage.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/gnsclient/client/util/keystorage/AbstractKeyStorage.h"
#include "edu/umass/cs/gnsclient/client/util/keystorage/IOSKeyStorage.h"

@implementation EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getWithNSString:(NSString *)key
                 withNSString:(NSString *)def {
      NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
      NSString *data = [defaults objectForKey: key];
      if (data != nil)
      {
        return data;
      } else {
        return def;
      }

}

- (void)removeWithNSString:(NSString *)key {
        NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
      [defaults removeObjectForKey: key];
}

- (void)putWithNSString:(NSString *)key
           withNSString:(NSString *)value {
      NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];

                [defaults setObject:value forKey:key];

}

- (IOSObjectArray *)keys {
  NSArray *keysarr = [[[NSUserDefaults standardUserDefaults] dictionaryRepresentation] allKeys];
  return [IOSObjectArray arrayWithNSArray:keysarr type:NSString_class_()];
}

- (void)clear {
    NSDictionary *defaultsDictionary = [[NSUserDefaults standardUserDefaults] dictionaryRepresentation];
  for (NSString *key in [defaultsDictionary allKeys]) {
                      [[NSUserDefaults standardUserDefaults] removeObjectForKey:key];
  }
}

- (NSString *)description {
  return @"";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getWithNSString:withNSString:);
  methods[2].selector = @selector(removeWithNSString:);
  methods[3].selector = @selector(putWithNSString:withNSString:);
  methods[4].selector = @selector(keys);
  methods[5].selector = @selector(clear);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "get", "LNSString;LNSString;", "remove", "LNSString;", "put", "toString" };
  static const J2ObjcClassInfo _EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage = { "IOSKeyStorage", "edu.umass.cs.gnsclient.client.util.keystorage", ptrTable, methods, NULL, 7, 0x1, 7, 0, -1, -1, -1, -1, -1 };
  return &_EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage;
}

@end

void EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage_init(EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage *self) {
  EduUmassCsGnsclientClientUtilKeystorageAbstractKeyStorage_init(self);
}

EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage *new_EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage_init() {
  J2OBJC_NEW_IMPL(EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage, init)
}

EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage *create_EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage_init() {
  J2OBJC_CREATE_IMPL(EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsGnsclientClientUtilKeystorageIOSKeyStorage)
