//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/reconfiguration/reconfigurationutils/SimpleReconfiguratorNodeConfig.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/reconfiguration/interfaces/ModifiableActiveConfig.h"
#include "edu/umass/cs/reconfiguration/interfaces/ModifiableRCConfig.h"
#include "edu/umass/cs/reconfiguration/interfaces/ReconfigurableNodeConfig.h"
#include "edu/umass/cs/reconfiguration/reconfigurationutils/SimpleReconfiguratorNodeConfig.h"
#include "java/lang/RuntimeException.h"
#include "java/net/InetAddress.h"
#include "java/net/InetSocketAddress.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "org/json/JSONArray.h"

@interface EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig () {
 @public
  id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig> nodeConfig_;
  jint version__;
  JavaUtilHashMap *rcMap_;
  JavaUtilHashMap *rcBindMap_;
}

@end

J2OBJC_FIELD_SETTER(EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig, nodeConfig_, id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>)
J2OBJC_FIELD_SETTER(EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig, rcMap_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig, rcBindMap_, JavaUtilHashMap *)

@implementation EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig

- (instancetype)initWithEduUmassCsReconfigurationInterfacesReconfigurableNodeConfig:(id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>)nc {
  EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig_initWithEduUmassCsReconfigurationInterfacesReconfigurableNodeConfig_(self, nc);
  return self;
}

- (id<JavaUtilSet>)getActiveReplicas {
  @synchronized(self) {
    return [((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(self->nodeConfig_)) getActiveReplicas];
  }
}

- (id<JavaUtilSet>)getReconfigurators {
  @synchronized(self) {
    return create_JavaUtilHashSet_initWithJavaUtilCollection_([((JavaUtilHashMap *) nil_chk(self->rcMap_)) keySet]);
  }
}

- (jboolean)nodeExistsWithId:(id)id_ {
  return [((JavaUtilHashMap *) nil_chk(self->rcMap_)) containsKeyWithId:id_] || [((id<JavaUtilSet>) nil_chk([((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(self->nodeConfig_)) getActiveReplicas])) containsWithId:id_];
}

- (JavaNetInetAddress *)getNodeAddressWithId:(id)id_ {
  return [((JavaUtilHashMap *) nil_chk(self->rcMap_)) containsKeyWithId:id_] ? [((JavaNetInetSocketAddress *) nil_chk([self->rcMap_ getWithId:id_])) getAddress] : ([((id<JavaUtilSet>) nil_chk([((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(self->nodeConfig_)) getActiveReplicas])) containsWithId:id_] ? [self->nodeConfig_ getNodeAddressWithId:id_] : nil);
}

- (JavaNetInetAddress *)getBindAddressWithId:(id)id_ {
  return [((JavaUtilHashMap *) nil_chk(self->rcMap_)) containsKeyWithId:id_] ? [((JavaUtilHashMap *) nil_chk(self->rcBindMap_)) getWithId:id_] : ([((id<JavaUtilSet>) nil_chk([((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(self->nodeConfig_)) getActiveReplicas])) containsWithId:id_] ? [self->nodeConfig_ getBindAddressWithId:id_] : nil);
}

- (jint)getNodePortWithId:(id)id_ {
  return [((JavaUtilHashMap *) nil_chk(self->rcMap_)) containsKeyWithId:id_] ? [((JavaNetInetSocketAddress *) nil_chk([self->rcMap_ getWithId:id_])) getPort] : ([((id<JavaUtilSet>) nil_chk([((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(self->nodeConfig_)) getActiveReplicas])) containsWithId:id_] ? [self->nodeConfig_ getNodePortWithId:id_] : -1);
}

- (id<JavaUtilSet>)getNodeIDs {
  return [((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(self->nodeConfig_)) getNodeIDs];
}

- (id)valueOfWithNSString:(NSString *)strValue {
  return [((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(self->nodeConfig_)) valueOfWithNSString:strValue];
}

- (id<JavaUtilSet>)getValuesFromStringSetWithJavaUtilSet:(id<JavaUtilSet>)strNodes {
  return [((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(self->nodeConfig_)) getValuesFromStringSetWithJavaUtilSet:strNodes];
}

- (id<JavaUtilSet>)getValuesFromJSONArrayWithOrgJsonJSONArray:(OrgJsonJSONArray *)array {
  return [((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(self->nodeConfig_)) getValuesFromJSONArrayWithOrgJsonJSONArray:array];
}

- (jlong)getVersion {
  return self->version__;
}

- (JavaNetInetSocketAddress *)addReconfiguratorWithId:(id)id_
                         withJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)sockAddr {
  @synchronized(self) {
    JavaNetInetSocketAddress *prevSockAddr = [((JavaUtilHashMap *) nil_chk(self->rcMap_)) putWithId:id_ withId:sockAddr];
    if ([EduUmassCsReconfigurationInterfacesModifiableRCConfig_class_() isInstance:self->nodeConfig_]) [((id<EduUmassCsReconfigurationInterfacesModifiableRCConfig>) nil_chk(((id<EduUmassCsReconfigurationInterfacesModifiableRCConfig>) cast_check(self->nodeConfig_, EduUmassCsReconfigurationInterfacesModifiableRCConfig_class_())))) addReconfiguratorWithId:id_ withJavaNetInetSocketAddress:sockAddr];
    return prevSockAddr;
  }
}

- (JavaNetInetSocketAddress *)removeReconfiguratorWithId:(id)id_ {
  @synchronized(self) {
    JavaNetInetSocketAddress *removed = [((JavaUtilHashMap *) nil_chk(self->rcMap_)) removeWithId:id_];
    [((JavaUtilHashMap *) nil_chk(self->rcBindMap_)) removeWithId:id_];
    if ([EduUmassCsReconfigurationInterfacesModifiableRCConfig_class_() isInstance:self->nodeConfig_]) [((id<EduUmassCsReconfigurationInterfacesModifiableRCConfig>) nil_chk(((id<EduUmassCsReconfigurationInterfacesModifiableRCConfig>) cast_check(self->nodeConfig_, EduUmassCsReconfigurationInterfacesModifiableRCConfig_class_())))) removeReconfiguratorWithId:id_];
    return removed;
  }
}

- (JavaNetInetSocketAddress *)addActiveReplicaWithId:(id)id_
                        withJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)sockAddr {
  @synchronized(self) {
    JavaNetInetSocketAddress *old = ([((id<JavaUtilSet>) nil_chk([((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(self->nodeConfig_)) getActiveReplicas])) containsWithId:id_] ? create_JavaNetInetSocketAddress_initWithJavaNetInetAddress_withInt_([self->nodeConfig_ getNodeAddressWithId:id_], [self->nodeConfig_ getNodePortWithId:id_]) : nil);
    if ([EduUmassCsReconfigurationInterfacesModifiableActiveConfig_class_() isInstance:self->nodeConfig_]) [((id<EduUmassCsReconfigurationInterfacesModifiableActiveConfig>) cast_check(self->nodeConfig_, EduUmassCsReconfigurationInterfacesModifiableActiveConfig_class_())) addActiveReplicaWithId:id_ withJavaNetInetSocketAddress:sockAddr];
    else @throw create_JavaLangRuntimeException_initWithNSString_(@"Underlying nodeConfig does not implement InterfaceModifiableActiveConfig");
    return old;
  }
}

- (JavaNetInetSocketAddress *)removeActiveReplicaWithId:(id)id_ {
  @synchronized(self) {
    JavaNetInetSocketAddress *old = ([((id<JavaUtilSet>) nil_chk([((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(self->nodeConfig_)) getActiveReplicas])) containsWithId:id_] ? create_JavaNetInetSocketAddress_initWithJavaNetInetAddress_withInt_([self->nodeConfig_ getNodeAddressWithId:id_], [self->nodeConfig_ getNodePortWithId:id_]) : nil);
    if ([EduUmassCsReconfigurationInterfacesModifiableActiveConfig_class_() isInstance:self->nodeConfig_]) [((id<EduUmassCsReconfigurationInterfacesModifiableActiveConfig>) cast_check(self->nodeConfig_, EduUmassCsReconfigurationInterfacesModifiableActiveConfig_class_())) removeActiveReplicaWithId:id_];
    else @throw create_JavaLangRuntimeException_initWithNSString_(@"Underlying nodeConfig does not implement InterfaceModifiableActiveConfig");
    return old;
  }
}

- (void)dealloc {
  RELEASE_(nodeConfig_);
  RELEASE_(rcMap_);
  RELEASE_(rcBindMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x21, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x21, -1, -1, -1, 2, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LJavaNetInetAddress;", 0x1, 6, 4, -1, 7, -1, -1 },
    { NULL, "LJavaNetInetAddress;", 0x1, 8, 4, -1, 7, -1, -1 },
    { NULL, "I", 0x1, 9, 4, -1, 10, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, 11, 12, -1, 13, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 14, 15, -1, 16, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 17, 18, 19, 20, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetInetSocketAddress;", 0x21, 21, 22, -1, 23, -1, -1 },
    { NULL, "LJavaNetInetSocketAddress;", 0x21, 24, 4, -1, 25, -1, -1 },
    { NULL, "LJavaNetInetSocketAddress;", 0x21, 26, 22, -1, 23, -1, -1 },
    { NULL, "LJavaNetInetSocketAddress;", 0x21, 27, 4, -1, 25, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduUmassCsReconfigurationInterfacesReconfigurableNodeConfig:);
  methods[1].selector = @selector(getActiveReplicas);
  methods[2].selector = @selector(getReconfigurators);
  methods[3].selector = @selector(nodeExistsWithId:);
  methods[4].selector = @selector(getNodeAddressWithId:);
  methods[5].selector = @selector(getBindAddressWithId:);
  methods[6].selector = @selector(getNodePortWithId:);
  methods[7].selector = @selector(getNodeIDs);
  methods[8].selector = @selector(valueOfWithNSString:);
  methods[9].selector = @selector(getValuesFromStringSetWithJavaUtilSet:);
  methods[10].selector = @selector(getValuesFromJSONArrayWithOrgJsonJSONArray:);
  methods[11].selector = @selector(getVersion);
  methods[12].selector = @selector(addReconfiguratorWithId:withJavaNetInetSocketAddress:);
  methods[13].selector = @selector(removeReconfiguratorWithId:);
  methods[14].selector = @selector(addActiveReplicaWithId:withJavaNetInetSocketAddress:);
  methods[15].selector = @selector(removeActiveReplicaWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "nodeConfig_", "LEduUmassCsReconfigurationInterfacesReconfigurableNodeConfig;", .constantValue.asLong = 0, 0x12, -1, -1, 28, -1 },
    { "version__", "I", .constantValue.asLong = 0, 0x2, 29, -1, -1, -1 },
    { "rcMap_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, 30, -1 },
    { "rcBindMap_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, 31, -1 },
  };
  static const void *ptrTable[] = { "LEduUmassCsReconfigurationInterfacesReconfigurableNodeConfig;", "(Ledu/umass/cs/reconfiguration/interfaces/ReconfigurableNodeConfig<TNodeIDType;>;)V", "()Ljava/util/Set<TNodeIDType;>;", "nodeExists", "LNSObject;", "(TNodeIDType;)Z", "getNodeAddress", "(TNodeIDType;)Ljava/net/InetAddress;", "getBindAddress", "getNodePort", "(TNodeIDType;)I", "valueOf", "LNSString;", "(Ljava/lang/String;)TNodeIDType;", "getValuesFromStringSet", "LJavaUtilSet;", "(Ljava/util/Set<Ljava/lang/String;>;)Ljava/util/Set<TNodeIDType;>;", "getValuesFromJSONArray", "LOrgJsonJSONArray;", "LOrgJsonJSONException;", "(Lorg/json/JSONArray;)Ljava/util/Set<TNodeIDType;>;", "addReconfigurator", "LNSObject;LJavaNetInetSocketAddress;", "(TNodeIDType;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;", "removeReconfigurator", "(TNodeIDType;)Ljava/net/InetSocketAddress;", "addActiveReplica", "removeActiveReplica", "Ledu/umass/cs/reconfiguration/interfaces/ReconfigurableNodeConfig<TNodeIDType;>;", "version", "Ljava/util/HashMap<TNodeIDType;Ljava/net/InetSocketAddress;>;", "Ljava/util/HashMap<TNodeIDType;Ljava/net/InetAddress;>;", "<NodeIDType:Ljava/lang/Object;>Ljava/lang/Object;Ledu/umass/cs/reconfiguration/interfaces/ModifiableActiveConfig<TNodeIDType;>;Ledu/umass/cs/reconfiguration/interfaces/ModifiableRCConfig<TNodeIDType;>;" };
  static const J2ObjcClassInfo _EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig = { "SimpleReconfiguratorNodeConfig", "edu.umass.cs.reconfiguration.reconfigurationutils", ptrTable, methods, fields, 7, 0x1, 16, 4, -1, -1, -1, 32, -1 };
  return &_EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig;
}

@end

void EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig_initWithEduUmassCsReconfigurationInterfacesReconfigurableNodeConfig_(EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig *self, id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig> nc) {
  NSObject_init(self);
  self->version__ = 0;
  JreStrongAssignAndConsume(&self->rcMap_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->rcBindMap_, new_JavaUtilHashMap_init());
  JreStrongAssign(&self->nodeConfig_, nc);
  for (id __strong node in nil_chk([((id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig>) nil_chk(nc)) getReconfigurators])) {
    [self->rcMap_ putWithId:node withId:create_JavaNetInetSocketAddress_initWithJavaNetInetAddress_withInt_([nc getNodeAddressWithId:node], [nc getNodePortWithId:node])];
    [self->rcBindMap_ putWithId:node withId:[nc getBindAddressWithId:node]];
  }
}

EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig *new_EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig_initWithEduUmassCsReconfigurationInterfacesReconfigurableNodeConfig_(id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig> nc) {
  J2OBJC_NEW_IMPL(EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig, initWithEduUmassCsReconfigurationInterfacesReconfigurableNodeConfig_, nc)
}

EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig *create_EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig_initWithEduUmassCsReconfigurationInterfacesReconfigurableNodeConfig_(id<EduUmassCsReconfigurationInterfacesReconfigurableNodeConfig> nc) {
  J2OBJC_CREATE_IMPL(EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig, initWithEduUmassCsReconfigurationInterfacesReconfigurableNodeConfig_, nc)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsReconfigurationReconfigurationutilsSimpleReconfiguratorNodeConfig)
