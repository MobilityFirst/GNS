//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/reconfiguration/reconfigurationutils/ConsistentHashing.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/gigapaxos/PaxosConfig.h"
#include "edu/umass/cs/reconfiguration/ReconfigurationConfig.h"
#include "edu/umass/cs/reconfiguration/reconfigurationutils/ConsistentHashing.h"
#include "edu/umass/cs/utils/Config.h"
#include "edu/umass/cs/utils/Util.h"
#include "java/io/PrintStream.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/security/MessageDigest.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"
#include "java/util/SortedMap.h"
#include "java/util/TreeMap.h"

@interface EduUmassCsReconfigurationReconfigurationutilsConsistentHashing () {
 @public
  jboolean replicateAll_;
  jint numReplicas_;
  id<JavaUtilSortedMap> servers_;
}

- (id<JavaUtilSet>)getReplicatedServersWithNSString:(NSString *)name
                                            withInt:(jint)k;

- (jint)hash__WithNSString:(NSString *)name;

+ (jint)hashStaticWithNSString:(NSString *)name;

- (id<JavaUtilCollection>)getServers;

@end

J2OBJC_FIELD_SETTER(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing, servers_, id<JavaUtilSortedMap>)

inline jint EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_get_DEFAULT_NUM_REPLICAS();
static jint EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_DEFAULT_NUM_REPLICAS;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing, DEFAULT_NUM_REPLICAS, jint)

inline JavaSecurityMessageDigest *EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_get_md();
inline JavaSecurityMessageDigest *EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_set_md(JavaSecurityMessageDigest *value);
static JavaSecurityMessageDigest *EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_md;
J2OBJC_STATIC_FIELD_OBJ(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing, md, JavaSecurityMessageDigest *)

__attribute__((unused)) static id<JavaUtilSet> EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getReplicatedServersWithNSString_withInt_(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *self, NSString *name, jint k);

__attribute__((unused)) static jint EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hash__WithNSString_(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *self, NSString *name);

__attribute__((unused)) static jint EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hashStaticWithNSString_(NSString *name);

__attribute__((unused)) static id<JavaUtilCollection> EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getServers(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *self);

J2OBJC_INITIALIZED_DEFN(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing)

@implementation EduUmassCsReconfigurationReconfigurationutilsConsistentHashing

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)servers {
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_(self, servers);
  return self;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)servers
                              withInt:(jint)numReplicas {
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_withInt_(self, servers, numReplicas);
  return self;
}

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)servers {
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithJavaUtilSet_(self, servers);
  return self;
}

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)servers
                        withBoolean:(jboolean)replicateAll {
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithJavaUtilSet_withBoolean_(self, servers, replicateAll);
  return self;
}

- (void)refreshWithNSObjectArray:(IOSObjectArray *)servers
                         withInt:(jint)numReplicas {
  JreStrongAssignAndConsume(&self->servers_, new_JavaUtilTreeMap_init());
  {
    IOSObjectArray *a__ = servers;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id server = *b__++;
      [((id<JavaUtilSortedMap>) nil_chk(self->servers_)) putWithId:JavaLangInteger_valueOfWithInt_(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hash__WithNSString_(self, [nil_chk(server) description])) withId:server];
    }
  }
  self->numReplicas_ = (replicateAll_ ? [((id<JavaUtilSortedMap>) nil_chk(self->servers_)) size] : numReplicas);
}

- (void)refreshWithJavaUtilSet:(id<JavaUtilSet>)servers {
  [self refreshWithJavaUtilSet:servers withInt:self->numReplicas_];
}

- (void)refreshWithJavaUtilSet:(id<JavaUtilSet>)servers
                       withInt:(jint)numReplicas {
  JreStrongAssignAndConsume(&self->servers_, new_JavaUtilTreeMap_init());
  for (id __strong server in nil_chk(servers)) [((id<JavaUtilSortedMap>) nil_chk(self->servers_)) putWithId:JavaLangInteger_valueOfWithInt_(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hash__WithNSString_(self, [nil_chk(server) description])) withId:server];
  self->numReplicas_ = (replicateAll_ ? [self->servers_ size] : numReplicas);
}

- (id<JavaUtilSet>)getReplicatedServersWithNSString:(NSString *)name {
  return EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getReplicatedServersWithNSString_withInt_(self, name, self->replicateAll_ ? [((id<JavaUtilSortedMap>) nil_chk(self->servers_)) size] : self->numReplicas_);
}

- (JavaUtilArrayList *)getReplicatedServersArrayWithNSString:(NSString *)name {
  return [self getReplicatedServersArrayWithNSString:name withInt:self->replicateAll_ ? [((id<JavaUtilSortedMap>) nil_chk(self->servers_)) size] : self->numReplicas_];
}

- (JavaUtilArrayList *)getReplicatedServersArrayWithNSString:(NSString *)name
                                                     withInt:(jint)k {
  jint hash_ = EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hash__WithNSString_(self, name);
  id<JavaUtilSortedMap> tailMap = [((id<JavaUtilSortedMap>) nil_chk(self->servers_)) tailMapWithId:JavaLangInteger_valueOfWithInt_(hash_)];
  id<JavaUtilIterator> iterator = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilSortedMap>) nil_chk(tailMap)) keySet])) iterator];
  JavaUtilArrayList *replicas = create_JavaUtilArrayList_init();
  for (jint i = 0; i < k; i++) {
    if (![((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) iterator = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilSortedMap>) nil_chk(self->servers_)) keySet])) iterator];
    [replicas addWithId:[((id<JavaUtilSortedMap>) nil_chk(self->servers_)) getWithId:[((id<JavaUtilIterator>) nil_chk(iterator)) next]]];
  }
  return replicas;
}

- (id)getNodeWithNSString:(NSString *)name {
  jint hash_ = EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hash__WithNSString_(self, name);
  if (![((id<JavaUtilSortedMap>) nil_chk(self->servers_)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(hash_)]) {
    id<JavaUtilSortedMap> tailMap = [((id<JavaUtilSortedMap>) nil_chk(self->servers_)) tailMapWithId:JavaLangInteger_valueOfWithInt_(hash_)];
    hash_ = [[((id<JavaUtilSortedMap>) nil_chk(tailMap)) isEmpty] ? ((JavaLangInteger *) [((id<JavaUtilSortedMap>) nil_chk(self->servers_)) firstKey]) : ((JavaLangInteger *) [tailMap firstKey]) intValue];
  }
  return [((id<JavaUtilSortedMap>) nil_chk(self->servers_)) getWithId:JavaLangInteger_valueOfWithInt_(hash_)];
}

- (id<JavaUtilSet>)getReplicatedServersWithNSString:(NSString *)name
                                            withInt:(jint)k {
  return EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getReplicatedServersWithNSString_withInt_(self, name, k);
}

- (jint)hash__WithNSString:(NSString *)name {
  return EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hash__WithNSString_(self, name);
}

+ (jint)hashStaticWithNSString:(NSString *)name {
  return EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hashStaticWithNSString_(name);
}

- (id<JavaUtilCollection>)getServers {
  return EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getServers(self);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_mainWithNSStringArray_(args);
}

- (void)dealloc {
  RELEASE_(servers_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, 8, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 8, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 11, 12, -1, 13, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, 14, 12, -1, 15, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, 14, 16, -1, 17, -1, -1 },
    { NULL, "LNSObject;", 0x4, 18, 12, -1, 19, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x2, 11, 16, -1, 20, -1, -1 },
    { NULL, "I", 0x22, 21, 12, -1, -1, -1, -1 },
    { NULL, "I", 0x2a, 22, 12, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x2, -1, -1, -1, 23, -1, -1 },
    { NULL, "V", 0x9, 24, 25, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSObjectArray:);
  methods[1].selector = @selector(initWithNSObjectArray:withInt:);
  methods[2].selector = @selector(initWithJavaUtilSet:);
  methods[3].selector = @selector(initWithJavaUtilSet:withBoolean:);
  methods[4].selector = @selector(refreshWithNSObjectArray:withInt:);
  methods[5].selector = @selector(refreshWithJavaUtilSet:);
  methods[6].selector = @selector(refreshWithJavaUtilSet:withInt:);
  methods[7].selector = @selector(getReplicatedServersWithNSString:);
  methods[8].selector = @selector(getReplicatedServersArrayWithNSString:);
  methods[9].selector = @selector(getReplicatedServersArrayWithNSString:withInt:);
  methods[10].selector = @selector(getNodeWithNSString:);
  methods[11].selector = @selector(getReplicatedServersWithNSString:withInt:);
  methods[12].selector = @selector(hash__WithNSString:);
  methods[13].selector = @selector(hashStaticWithNSString:);
  methods[14].selector = @selector(getServers);
  methods[15].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_NUM_REPLICAS", "I", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "md", "LJavaSecurityMessageDigest;", .constantValue.asLong = 0, 0xa, -1, 27, -1, -1 },
    { "replicateAll_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numReplicas_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "servers_", "LJavaUtilSortedMap;", .constantValue.asLong = 0, 0x2, -1, -1, 28, -1 },
  };
  static const void *ptrTable[] = { "[LNSObject;", "([TNodeIDType;)V", "[LNSObject;I", "([TNodeIDType;I)V", "LJavaUtilSet;", "(Ljava/util/Set<TNodeIDType;>;)V", "LJavaUtilSet;Z", "(Ljava/util/Set<TNodeIDType;>;Z)V", "refresh", "LJavaUtilSet;I", "(Ljava/util/Set<TNodeIDType;>;I)V", "getReplicatedServers", "LNSString;", "(Ljava/lang/String;)Ljava/util/Set<TNodeIDType;>;", "getReplicatedServersArray", "(Ljava/lang/String;)Ljava/util/ArrayList<TNodeIDType;>;", "LNSString;I", "(Ljava/lang/String;I)Ljava/util/ArrayList<TNodeIDType;>;", "getNode", "(Ljava/lang/String;)TNodeIDType;", "(Ljava/lang/String;I)Ljava/util/Set<TNodeIDType;>;", "hash", "hashStatic", "()Ljava/util/Collection<TNodeIDType;>;", "main", "[LNSString;", &EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_DEFAULT_NUM_REPLICAS, &EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_md, "Ljava/util/SortedMap<Ljava/lang/Integer;TNodeIDType;>;", "<NodeIDType:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _EduUmassCsReconfigurationReconfigurationutilsConsistentHashing = { "ConsistentHashing", "edu.umass.cs.reconfiguration.reconfigurationutils", ptrTable, methods, fields, 7, 0x1, 16, 5, -1, -1, -1, 29, -1 };
  return &_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing;
}

+ (void)initialize {
  if (self == [EduUmassCsReconfigurationReconfigurationutilsConsistentHashing class]) {
    {
      EduUmassCsGigapaxosPaxosConfig_load__WithIOSClass_(EduUmassCsReconfigurationReconfigurationConfig_RC_class_());
    }
    EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_DEFAULT_NUM_REPLICAS = EduUmassCsUtilsConfig_getGlobalIntWithJavaLangEnum_(JreLoadEnum(EduUmassCsReconfigurationReconfigurationConfig_RC, DEFAULT_NUM_REPLICAS));
    {
      @try {
        JreStrongAssign(&EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_md, JavaSecurityMessageDigest_getInstanceWithNSString_(@"MD5"));
      }
      @catch (JavaSecurityNoSuchAlgorithmException *e) {
        [((JavaSecurityNoSuchAlgorithmException *) nil_chk(e)) printStackTrace];
      }
    }
    J2OBJC_SET_INITIALIZED(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing)
  }
}

@end

void EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *self, IOSObjectArray *servers) {
  NSObject_init(self);
  self->replicateAll_ = false;
  self->numReplicas_ = EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_DEFAULT_NUM_REPLICAS;
  JreStrongAssignAndConsume(&self->servers_, new_JavaUtilTreeMap_init());
  [self refreshWithNSObjectArray:servers withInt:EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_DEFAULT_NUM_REPLICAS];
}

EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *new_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_(IOSObjectArray *servers) {
  J2OBJC_NEW_IMPL(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing, initWithNSObjectArray_, servers)
}

EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *create_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_(IOSObjectArray *servers) {
  J2OBJC_CREATE_IMPL(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing, initWithNSObjectArray_, servers)
}

void EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_withInt_(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *self, IOSObjectArray *servers, jint numReplicas) {
  NSObject_init(self);
  self->replicateAll_ = false;
  self->numReplicas_ = EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_DEFAULT_NUM_REPLICAS;
  JreStrongAssignAndConsume(&self->servers_, new_JavaUtilTreeMap_init());
  [self refreshWithNSObjectArray:servers withInt:numReplicas];
}

EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *new_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_withInt_(IOSObjectArray *servers, jint numReplicas) {
  J2OBJC_NEW_IMPL(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing, initWithNSObjectArray_withInt_, servers, numReplicas)
}

EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *create_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_withInt_(IOSObjectArray *servers, jint numReplicas) {
  J2OBJC_CREATE_IMPL(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing, initWithNSObjectArray_withInt_, servers, numReplicas)
}

void EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithJavaUtilSet_(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *self, id<JavaUtilSet> servers) {
  NSObject_init(self);
  self->replicateAll_ = false;
  self->numReplicas_ = EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_DEFAULT_NUM_REPLICAS;
  JreStrongAssignAndConsume(&self->servers_, new_JavaUtilTreeMap_init());
  [self refreshWithJavaUtilSet:servers withInt:EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_DEFAULT_NUM_REPLICAS];
}

EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *new_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithJavaUtilSet_(id<JavaUtilSet> servers) {
  J2OBJC_NEW_IMPL(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing, initWithJavaUtilSet_, servers)
}

EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *create_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithJavaUtilSet_(id<JavaUtilSet> servers) {
  J2OBJC_CREATE_IMPL(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing, initWithJavaUtilSet_, servers)
}

void EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithJavaUtilSet_withBoolean_(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *self, id<JavaUtilSet> servers, jboolean replicateAll) {
  NSObject_init(self);
  self->replicateAll_ = false;
  self->numReplicas_ = EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_DEFAULT_NUM_REPLICAS;
  JreStrongAssignAndConsume(&self->servers_, new_JavaUtilTreeMap_init());
  self->replicateAll_ = replicateAll;
  [self refreshWithJavaUtilSet:servers withInt:EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_DEFAULT_NUM_REPLICAS];
}

EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *new_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithJavaUtilSet_withBoolean_(id<JavaUtilSet> servers, jboolean replicateAll) {
  J2OBJC_NEW_IMPL(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing, initWithJavaUtilSet_withBoolean_, servers, replicateAll)
}

EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *create_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithJavaUtilSet_withBoolean_(id<JavaUtilSet> servers, jboolean replicateAll) {
  J2OBJC_CREATE_IMPL(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing, initWithJavaUtilSet_withBoolean_, servers, replicateAll)
}

id<JavaUtilSet> EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getReplicatedServersWithNSString_withInt_(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *self, NSString *name, jint k) {
  return create_JavaUtilHashSet_initWithJavaUtilCollection_([self getReplicatedServersArrayWithNSString:name withInt:k]);
}

jint EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hash__WithNSString_(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *self, NSString *name) {
  @synchronized(self) {
    return EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hashStaticWithNSString_(name);
  }
}

jint EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hashStaticWithNSString_(NSString *name) {
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initialize();
  @synchronized(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_class_()) {
    IOSByteArray *digest = [((JavaSecurityMessageDigest *) nil_chk(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_md)) digestWithByteArray:[((NSString *) nil_chk(name)) java_getBytes]];
    jint hash_ = 0;
    for (jint i = 0; i < ((IOSByteArray *) nil_chk(digest))->size_; i++) hash_ = (hash_ ^ (JreLShift32(IOSByteArray_Get(digest, i), (i % 4))));
    [((JavaSecurityMessageDigest *) nil_chk(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_md)) reset];
    return JavaLangMath_absWithInt_(hash_);
  }
}

id<JavaUtilCollection> EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getServers(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *self) {
  return [((id<JavaUtilSortedMap>) nil_chk(self->servers_)) values];
}

void EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_mainWithNSStringArray_(IOSObjectArray *args) {
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initialize();
  EduUmassCsUtilsUtil_assertAssertionsEnabled();
  IOSObjectArray *names = [IOSObjectArray arrayWithObjects:(id[]){ @"World", @"Hello", @"Hello World", @"1", @"10", @"12", @"9", @"34" } count:8 type:NSString_class_()];
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *ch = create_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_(names);
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"ring ordering = ", EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getServers(ch))];
  for (jint i = 0; i < names->size_; i++) {
    NSString *name = JreStrcat("$I", @"fbdsjlfbnlsfs", i);
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$$@", @"Replicated servers for ", name, @" = ", [ch getReplicatedServersArrayWithNSString:name withInt:4])];
    JreAssert((([((NSString *) nil_chk([ch getNodeWithNSString:IOSObjectArray_Get(names, i)])) isEqual:IOSObjectArray_Get(names, i)])), (@"edu/umass/cs/reconfiguration/reconfigurationutils/ConsistentHashing.java:153 condition failed: assert (ch.getNode(names[i]).equals(names[i]));"));
  }
  IOSObjectArray *ids = [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1100), JavaLangInteger_valueOfWithInt_(1101), JavaLangInteger_valueOfWithInt_(1102) } count:3 type:JavaLangInteger_class_()];
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *chi = create_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_(ids);
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"ring ordering = ", EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getServers(chi))];
  IOSObjectArray *ids1 = [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1100), JavaLangInteger_valueOfWithInt_(1101), JavaLangInteger_valueOfWithInt_(1102), JavaLangInteger_valueOfWithInt_(19150) } count:4 type:JavaLangInteger_class_()];
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *chi1 = create_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_(ids1);
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"ring ordering = ", EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getServers(chi1))];
  IOSObjectArray *IDs = [IOSObjectArray arrayWithObjects:(id[]){ @"RC0", @"RC1", @"RC2" } count:3 type:NSString_class_()];
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *CHI = create_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_(IDs);
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"ring ordering = ", EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getServers(CHI))];
  IOSObjectArray *IDs1 = [IOSObjectArray arrayWithObjects:(id[]){ @"RC0", @"RC1", @"RC2", @"RC3", @"RC4", @"RC32007" } count:6 type:NSString_class_()];
  EduUmassCsReconfigurationReconfigurationutilsConsistentHashing *CHI1 = create_EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_initWithNSObjectArray_(IDs1);
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"ring ordering = ", EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_getServers(CHI1))];
  for (jint i = 0; i < 1000; i++) [JreLoadStatic(JavaLangSystem, out) printlnWithInt:EduUmassCsReconfigurationReconfigurationutilsConsistentHashing_hashStaticWithNSString_(JreStrcat("$I", @"random", i))];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsReconfigurationReconfigurationutilsConsistentHashing)
