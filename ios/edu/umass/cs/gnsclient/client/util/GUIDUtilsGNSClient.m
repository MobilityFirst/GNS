//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../src/edu/umass/cs/gnsclient/client/util/GUIDUtilsGNSClient.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/gnsclient/client/GNSClient.h"
#include "edu/umass/cs/gnsclient/client/GNSClientConfig.h"
#include "edu/umass/cs/gnsclient/client/GNSCommand.h"
#include "edu/umass/cs/gnsclient/client/util/GUIDUtilsGNSClient.h"
#include "edu/umass/cs/gnsclient/client/util/GuidEntry.h"
#include "edu/umass/cs/gnsclient/client/util/IOSKeyPairUtils.h"
#include "edu/umass/cs/gnscommon/exceptions/client/ClientException.h"
#include "edu/umass/cs/gnscommon/exceptions/client/DuplicateNameException.h"
#include "edu/umass/cs/gnscommon/packets/CommandPacket.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/security/KeyPair.h"
#include "java/security/PrivateKey.h"
#include "java/security/PublicKey.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "org/json/JSONObject.h"

@interface EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient ()

+ (jboolean)guidExistsWithEduUmassCsGnsclientClientGNSClient:(EduUmassCsGnsclientClientGNSClient *)client
                  withEduUmassCsGnsclientClientUtilGuidEntry:(EduUmassCsGnsclientClientUtilGuidEntry *)guid;

@end

__attribute__((unused)) static jboolean EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_guidExistsWithEduUmassCsGnsclientClientGNSClient_withEduUmassCsGnsclientClientUtilGuidEntry_(EduUmassCsGnsclientClientGNSClient *client, EduUmassCsGnsclientClientUtilGuidEntry *guid);

@implementation EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)guidExistsWithEduUmassCsGnsclientClientGNSClient:(EduUmassCsGnsclientClientGNSClient *)client
                  withEduUmassCsGnsclientClientUtilGuidEntry:(EduUmassCsGnsclientClientUtilGuidEntry *)guid {
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_guidExistsWithEduUmassCsGnsclientClientGNSClient_withEduUmassCsGnsclientClientUtilGuidEntry_(client, guid);
}

+ (EduUmassCsGnsclientClientUtilGuidEntry *)generateAndSaveKeyPairForGuidAliasWithNSString:(NSString *)gnsInstance
                                                                              withNSString:(NSString *)alias {
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_generateAndSaveKeyPairForGuidAliasWithNSString_withNSString_(gnsInstance, alias);
}

+ (EduUmassCsGnsclientClientUtilGuidEntry *)lookupOrCreateAccountGuidWithEduUmassCsGnsclientClientGNSClient:(EduUmassCsGnsclientClientGNSClient *)client
                                                                                               withNSString:(NSString *)name
                                                                                               withNSString:(NSString *)password {
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupOrCreateAccountGuidWithEduUmassCsGnsclientClientGNSClient_withNSString_withNSString_(client, name, password);
}

+ (EduUmassCsGnsclientClientUtilGuidEntry *)lookupOrCreateAccountGuidWithEduUmassCsGnsclientClientGNSClient:(EduUmassCsGnsclientClientGNSClient *)client
                                                                                               withNSString:(NSString *)name
                                                                                               withNSString:(NSString *)password
                                                                                                withBoolean:(jboolean)verbose {
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupOrCreateAccountGuidWithEduUmassCsGnsclientClientGNSClient_withNSString_withNSString_withBoolean_(client, name, password, verbose);
}

+ (EduUmassCsGnsclientClientUtilGuidEntry *)lookupOrCreateGuidWithEduUmassCsGnsclientClientGNSClient:(EduUmassCsGnsclientClientGNSClient *)client
                                                          withEduUmassCsGnsclientClientUtilGuidEntry:(EduUmassCsGnsclientClientUtilGuidEntry *)accountGuid
                                                                                        withNSString:(NSString *)name {
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupOrCreateGuidWithEduUmassCsGnsclientClientGNSClient_withEduUmassCsGnsclientClientUtilGuidEntry_withNSString_(client, accountGuid, name);
}

+ (EduUmassCsGnsclientClientUtilGuidEntry *)lookupOrCreateGuidWithEduUmassCsGnsclientClientGNSClient:(EduUmassCsGnsclientClientGNSClient *)client
                                                          withEduUmassCsGnsclientClientUtilGuidEntry:(EduUmassCsGnsclientClientUtilGuidEntry *)accountGuid
                                                                                        withNSString:(NSString *)name
                                                                                         withBoolean:(jboolean)verbose {
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupOrCreateGuidWithEduUmassCsGnsclientClientGNSClient_withEduUmassCsGnsclientClientUtilGuidEntry_withNSString_withBoolean_(client, accountGuid, name, verbose);
}

+ (EduUmassCsGnsclientClientUtilGuidEntry *)lookupGuidEntryFromDatabaseWithEduUmassCsGnsclientClientGNSClient:(EduUmassCsGnsclientClientGNSClient *)client
                                                                                                 withNSString:(NSString *)name {
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupGuidEntryFromDatabaseWithEduUmassCsGnsclientClientGNSClient_withNSString_(client, name);
}

+ (EduUmassCsGnsclientClientUtilGuidEntry *)createAndSaveGuidEntryWithNSString:(NSString *)alias
                                                                  withNSString:(NSString *)hostport {
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_createAndSaveGuidEntryWithNSString_withNSString_(alias, hostport);
}

+ (EduUmassCsGnsclientClientUtilGuidEntry *)lookupGuidEntryFromDatabaseWithNSString:(NSString *)gnsInstance
                                                                       withNSString:(NSString *)name {
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupGuidEntryFromDatabaseWithNSString_withNSString_(gnsInstance, name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 0, 1, 2, -1, -1, -1 },
    { NULL, "LEduUmassCsGnsclientClientUtilGuidEntry;", 0x8, 3, 4, 5, -1, -1, -1 },
    { NULL, "LEduUmassCsGnsclientClientUtilGuidEntry;", 0x9, 6, 7, 8, -1, -1, -1 },
    { NULL, "LEduUmassCsGnsclientClientUtilGuidEntry;", 0x9, 6, 9, 8, -1, -1, -1 },
    { NULL, "LEduUmassCsGnsclientClientUtilGuidEntry;", 0x9, 10, 11, 12, -1, -1, -1 },
    { NULL, "LEduUmassCsGnsclientClientUtilGuidEntry;", 0x9, 10, 13, 12, -1, -1, -1 },
    { NULL, "LEduUmassCsGnsclientClientUtilGuidEntry;", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "LEduUmassCsGnsclientClientUtilGuidEntry;", 0x9, 16, 4, 5, -1, -1, -1 },
    { NULL, "LEduUmassCsGnsclientClientUtilGuidEntry;", 0x9, 14, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(guidExistsWithEduUmassCsGnsclientClientGNSClient:withEduUmassCsGnsclientClientUtilGuidEntry:);
  methods[2].selector = @selector(generateAndSaveKeyPairForGuidAliasWithNSString:withNSString:);
  methods[3].selector = @selector(lookupOrCreateAccountGuidWithEduUmassCsGnsclientClientGNSClient:withNSString:withNSString:);
  methods[4].selector = @selector(lookupOrCreateAccountGuidWithEduUmassCsGnsclientClientGNSClient:withNSString:withNSString:withBoolean:);
  methods[5].selector = @selector(lookupOrCreateGuidWithEduUmassCsGnsclientClientGNSClient:withEduUmassCsGnsclientClientUtilGuidEntry:withNSString:);
  methods[6].selector = @selector(lookupOrCreateGuidWithEduUmassCsGnsclientClientGNSClient:withEduUmassCsGnsclientClientUtilGuidEntry:withNSString:withBoolean:);
  methods[7].selector = @selector(lookupGuidEntryFromDatabaseWithEduUmassCsGnsclientClientGNSClient:withNSString:);
  methods[8].selector = @selector(createAndSaveGuidEntryWithNSString:withNSString:);
  methods[9].selector = @selector(lookupGuidEntryFromDatabaseWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "guidExists", "LEduUmassCsGnsclientClientGNSClient;LEduUmassCsGnsclientClientUtilGuidEntry;", "LJavaIoIOException;", "generateAndSaveKeyPairForGuidAlias", "LNSString;LNSString;", "LJavaSecurityNoSuchAlgorithmException;LEduUmassCsGnscommonExceptionsClientEncryptionException;", "lookupOrCreateAccountGuid", "LEduUmassCsGnsclientClientGNSClient;LNSString;LNSString;", "LJavaLangException;", "LEduUmassCsGnsclientClientGNSClient;LNSString;LNSString;Z", "lookupOrCreateGuid", "LEduUmassCsGnsclientClientGNSClient;LEduUmassCsGnsclientClientUtilGuidEntry;LNSString;", "LEduUmassCsGnscommonExceptionsClientClientException;LJavaIoIOException;", "LEduUmassCsGnsclientClientGNSClient;LEduUmassCsGnsclientClientUtilGuidEntry;LNSString;Z", "lookupGuidEntryFromDatabase", "LEduUmassCsGnsclientClientGNSClient;LNSString;", "createAndSaveGuidEntry" };
  static const J2ObjcClassInfo _EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient = { "GUIDUtilsGNSClient", "edu.umass.cs.gnsclient.client.util", ptrTable, methods, NULL, 7, 0x1, 10, 0, -1, -1, -1, -1, -1 };
  return &_EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient;
}

@end

void EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_init(EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient *self) {
  NSObject_init(self);
}

EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient *new_EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_init() {
  J2OBJC_NEW_IMPL(EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient, init)
}

EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient *create_EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_init() {
  J2OBJC_CREATE_IMPL(EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient, init)
}

jboolean EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_guidExistsWithEduUmassCsGnsclientClientGNSClient_withEduUmassCsGnsclientClientUtilGuidEntry_(EduUmassCsGnsclientClientGNSClient *client, EduUmassCsGnsclientClientUtilGuidEntry *guid) {
  EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_initialize();
  @try {
    [((EduUmassCsGnscommonPacketsCommandPacket *) nil_chk([((EduUmassCsGnsclientClientGNSClient *) nil_chk(client)) executeWithEduUmassCsGnscommonPacketsCommandPacket:EduUmassCsGnsclientClientGNSCommand_lookupGUIDWithNSString_([((EduUmassCsGnsclientClientUtilGuidEntry *) nil_chk(guid)) getGuid])])) getResultJSONObject];
  }
  @catch (EduUmassCsGnscommonExceptionsClientClientException *e) {
    return false;
  }
  return true;
}

EduUmassCsGnsclientClientUtilGuidEntry *EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_generateAndSaveKeyPairForGuidAliasWithNSString_withNSString_(NSString *gnsInstance, NSString *alias) {
  EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_initialize();
  JavaSecurityKeyPair *keyPair = EduUmassCsGnsclientClientUtilIOSKeyPairUtils_generateKeyPair();
  NSString *guid = EduUmassCsGnsclientClientUtilIOSKeyPairUtils_generateAndSaveKeyPair();
  return create_EduUmassCsGnsclientClientUtilGuidEntry_initWithNSString_withNSString_withJavaSecurityPublicKey_withJavaSecurityPrivateKey_(alias, guid, [((JavaSecurityKeyPair *) nil_chk(keyPair)) getPublic], [keyPair getPrivate]);
}

EduUmassCsGnsclientClientUtilGuidEntry *EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupOrCreateAccountGuidWithEduUmassCsGnsclientClientGNSClient_withNSString_withNSString_(EduUmassCsGnsclientClientGNSClient *client, NSString *name, NSString *password) {
  EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_initialize();
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupOrCreateAccountGuidWithEduUmassCsGnsclientClientGNSClient_withNSString_withNSString_withBoolean_(client, name, password, false);
}

EduUmassCsGnsclientClientUtilGuidEntry *EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupOrCreateAccountGuidWithEduUmassCsGnsclientClientGNSClient_withNSString_withNSString_withBoolean_(EduUmassCsGnsclientClientGNSClient *client, NSString *name, NSString *password, jboolean verbose) {
  EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_initialize();
  EduUmassCsGnsclientClientUtilGuidEntry *guid = EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupGuidEntryFromDatabaseWithEduUmassCsGnsclientClientGNSClient_withNSString_(client, name);
  if (guid == nil || !EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_guidExistsWithEduUmassCsGnsclientClientGNSClient_withEduUmassCsGnsclientClientUtilGuidEntry_(client, guid)) {
    if (guid == nil) {
      if (verbose) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"  Creating a new account GUID for ", name)];
      }
      [((JavaUtilLoggingLogger *) nil_chk(EduUmassCsGnsclientClientGNSClientConfig_getLogger())) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, INFO) withNSString:@"Creating a new account GUID for {0}" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ name } count:1 type:NSObject_class_()]];
      guid = EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_generateAndSaveKeyPairForGuidAliasWithNSString_withNSString_(EduUmassCsGnsclientClientGNSClient_getGNSProvider(), name);
    }
    else {
      if (verbose) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@$", @"  Old account GUID ", guid, @" found locally is invalid, creating a new one.")];
      }
      [((JavaUtilLoggingLogger *) nil_chk(EduUmassCsGnsclientClientGNSClientConfig_getLogger())) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, INFO) withNSString:@" Old account GUID {0} found locally is invalid, creating a new one" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ name } count:1 type:NSObject_class_()]];
    }
    @try {
      [((EduUmassCsGnsclientClientGNSClient *) nil_chk(client)) executeWithEduUmassCsGnscommonPacketsCommandPacket:EduUmassCsGnsclientClientGNSCommand_createAccountWithNSString_withNSString_(name, password)];
    }
    @catch (EduUmassCsGnscommonExceptionsClientDuplicateNameException *e) {
      if (verbose) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@$$", @"  Account GUID ", guid, @" aready exists on the server; ", [((EduUmassCsGnscommonExceptionsClientDuplicateNameException *) nil_chk(e)) getMessage])];
      }
    }
    if (verbose) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"  Created account GUID ", guid)];
    }
    return guid;
  }
  else {
    if (verbose) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$$$C", @"Found account guid for ", [guid getEntityName], @" (", [guid getGuid], ')')];
    }
    return guid;
  }
}

EduUmassCsGnsclientClientUtilGuidEntry *EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupOrCreateGuidWithEduUmassCsGnsclientClientGNSClient_withEduUmassCsGnsclientClientUtilGuidEntry_withNSString_(EduUmassCsGnsclientClientGNSClient *client, EduUmassCsGnsclientClientUtilGuidEntry *accountGuid, NSString *name) {
  EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_initialize();
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupOrCreateGuidWithEduUmassCsGnsclientClientGNSClient_withEduUmassCsGnsclientClientUtilGuidEntry_withNSString_withBoolean_(client, accountGuid, name, false);
}

EduUmassCsGnsclientClientUtilGuidEntry *EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupOrCreateGuidWithEduUmassCsGnsclientClientGNSClient_withEduUmassCsGnsclientClientUtilGuidEntry_withNSString_withBoolean_(EduUmassCsGnsclientClientGNSClient *client, EduUmassCsGnsclientClientUtilGuidEntry *accountGuid, NSString *name, jboolean verbose) {
  EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_initialize();
  EduUmassCsGnsclientClientUtilGuidEntry *guid = EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupGuidEntryFromDatabaseWithEduUmassCsGnsclientClientGNSClient_withNSString_(client, name);
  if (guid == nil || !EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_guidExistsWithEduUmassCsGnsclientClientGNSClient_withEduUmassCsGnsclientClientUtilGuidEntry_(client, guid)) {
    if (verbose) {
      if (guid == nil) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"Creating a new guid for ", name)];
      }
      else {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$$", @"Old guid for ", name, @" is invalid. Creating a new one.")];
      }
    }
    [((EduUmassCsGnsclientClientGNSClient *) nil_chk(client)) executeWithEduUmassCsGnscommonPacketsCommandPacket:EduUmassCsGnsclientClientGNSCommand_createGUIDWithEduUmassCsGnsclientClientUtilGuidEntry_withNSString_(accountGuid, name)];
    guid = EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupGuidEntryFromDatabaseWithEduUmassCsGnsclientClientGNSClient_withNSString_(client, name);
    return guid;
  }
  else {
    if (verbose) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$$$C", @"Found guid for ", [guid getEntityName], @" (", [guid getGuid], ')')];
    }
    return guid;
  }
}

EduUmassCsGnsclientClientUtilGuidEntry *EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupGuidEntryFromDatabaseWithEduUmassCsGnsclientClientGNSClient_withNSString_(EduUmassCsGnsclientClientGNSClient *client, NSString *name) {
  EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_initialize();
  return EduUmassCsGnsclientClientUtilIOSKeyPairUtils_getGuidEntryWithNSString_withNSString_(EduUmassCsGnsclientClientGNSClient_getGNSProvider(), name);
}

EduUmassCsGnsclientClientUtilGuidEntry *EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_createAndSaveGuidEntryWithNSString_withNSString_(NSString *alias, NSString *hostport) {
  EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_initialize();
  return EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_generateAndSaveKeyPairForGuidAliasWithNSString_withNSString_(hostport, alias);
}

EduUmassCsGnsclientClientUtilGuidEntry *EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_lookupGuidEntryFromDatabaseWithNSString_withNSString_(NSString *gnsInstance, NSString *name) {
  EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient_initialize();
  return EduUmassCsGnsclientClientUtilIOSKeyPairUtils_getGuidEntryWithNSString_withNSString_(gnsInstance, name);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsGnsclientClientUtilGUIDUtilsGNSClient)
