//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../src/edu/umass/cs/gnsclient/client/CryptoUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduUmassCsGnsclientClientCryptoUtils")
#ifdef RESTRICT_EduUmassCsGnsclientClientCryptoUtils
#define INCLUDE_ALL_EduUmassCsGnsclientClientCryptoUtils 0
#else
#define INCLUDE_ALL_EduUmassCsGnsclientClientCryptoUtils 1
#endif
#undef RESTRICT_EduUmassCsGnsclientClientCryptoUtils

#if !defined (EduUmassCsGnsclientClientCryptoUtils_) && (INCLUDE_ALL_EduUmassCsGnsclientClientCryptoUtils || defined(INCLUDE_EduUmassCsGnsclientClientCryptoUtils))
#define EduUmassCsGnsclientClientCryptoUtils_

@class EduUmassCsGnsclientClientUtilGuidEntry;
@class EduUmassCsGnscommonCommandType;
@class IOSObjectArray;
@class JavaUtilRandom;
@class OrgJsonJSONObject;

@interface EduUmassCsGnsclientClientCryptoUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgJsonJSONObject *)createAndSignCommandWithEduUmassCsGnscommonCommandType:(EduUmassCsGnscommonCommandType *)commandType
                                   withEduUmassCsGnsclientClientUtilGuidEntry:(EduUmassCsGnsclientClientUtilGuidEntry *)querier
                                                            withNSObjectArray:(IOSObjectArray *)keysAndValues;

+ (OrgJsonJSONObject *)createAndSignCommandWithEduUmassCsGnscommonCommandType:(EduUmassCsGnscommonCommandType *)commandType
                                                                 withNSString:(NSString *)guid
                                                            withNSObjectArray:(IOSObjectArray *)keysAndValues;

+ (OrgJsonJSONObject *)createCommandWithEduUmassCsGnscommonCommandType:(EduUmassCsGnscommonCommandType *)commandType
                                                     withNSObjectArray:(IOSObjectArray *)keysAndValues;

+ (OrgJsonJSONObject *)createCommandWithTimestampAndNonceWithEduUmassCsGnscommonCommandType:(EduUmassCsGnscommonCommandType *)commandType
                                                                                withBoolean:(jboolean)includeTimestamp
                                                                          withNSObjectArray:(IOSObjectArray *)keysAndValues;

+ (NSString *)getRandomRequestNonce;

@end

J2OBJC_STATIC_INIT(EduUmassCsGnsclientClientCryptoUtils)

inline JavaUtilRandom *EduUmassCsGnsclientClientCryptoUtils_get_random();
inline JavaUtilRandom *EduUmassCsGnsclientClientCryptoUtils_set_random(JavaUtilRandom *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilRandom *EduUmassCsGnsclientClientCryptoUtils_random;
J2OBJC_STATIC_FIELD_OBJ(EduUmassCsGnsclientClientCryptoUtils, random, JavaUtilRandom *)

FOUNDATION_EXPORT void EduUmassCsGnsclientClientCryptoUtils_init(EduUmassCsGnsclientClientCryptoUtils *self);

FOUNDATION_EXPORT EduUmassCsGnsclientClientCryptoUtils *new_EduUmassCsGnsclientClientCryptoUtils_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsGnsclientClientCryptoUtils *create_EduUmassCsGnsclientClientCryptoUtils_init();

FOUNDATION_EXPORT OrgJsonJSONObject *EduUmassCsGnsclientClientCryptoUtils_createCommandWithEduUmassCsGnscommonCommandType_withNSObjectArray_(EduUmassCsGnscommonCommandType *commandType, IOSObjectArray *keysAndValues);

FOUNDATION_EXPORT NSString *EduUmassCsGnsclientClientCryptoUtils_getRandomRequestNonce();

FOUNDATION_EXPORT OrgJsonJSONObject *EduUmassCsGnsclientClientCryptoUtils_createCommandWithTimestampAndNonceWithEduUmassCsGnscommonCommandType_withBoolean_withNSObjectArray_(EduUmassCsGnscommonCommandType *commandType, jboolean includeTimestamp, IOSObjectArray *keysAndValues);

FOUNDATION_EXPORT OrgJsonJSONObject *EduUmassCsGnsclientClientCryptoUtils_createAndSignCommandWithEduUmassCsGnscommonCommandType_withNSString_withNSObjectArray_(EduUmassCsGnscommonCommandType *commandType, NSString *guid, IOSObjectArray *keysAndValues);

FOUNDATION_EXPORT OrgJsonJSONObject *EduUmassCsGnsclientClientCryptoUtils_createAndSignCommandWithEduUmassCsGnscommonCommandType_withEduUmassCsGnsclientClientUtilGuidEntry_withNSObjectArray_(EduUmassCsGnscommonCommandType *commandType, EduUmassCsGnsclientClientUtilGuidEntry *querier, IOSObjectArray *keysAndValues);

J2OBJC_TYPE_LITERAL_HEADER(EduUmassCsGnsclientClientCryptoUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_EduUmassCsGnsclientClientCryptoUtils")
