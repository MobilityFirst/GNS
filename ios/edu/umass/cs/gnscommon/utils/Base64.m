//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../src/edu/umass/cs/gnscommon/utils/Base64.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/gnscommon/utils/Base64.h"
#include "java/util/Arrays.h"

inline IOSCharArray *EduUmassCsGnscommonUtilsBase64_get_CHARACTER_ARRAY();
static IOSCharArray *EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsGnscommonUtilsBase64, CHARACTER_ARRAY, IOSCharArray *)

inline IOSIntArray *EduUmassCsGnscommonUtilsBase64_get_INTEGER_ARRAY();
static IOSIntArray *EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsGnscommonUtilsBase64, INTEGER_ARRAY, IOSIntArray *)

J2OBJC_INITIALIZED_DEFN(EduUmassCsGnscommonUtilsBase64)

@implementation EduUmassCsGnscommonUtilsBase64

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduUmassCsGnscommonUtilsBase64_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSCharArray *)encodeToCharWithByteArray:(IOSByteArray *)sourceArray
                                withBoolean:(jboolean)lineSep {
  return EduUmassCsGnscommonUtilsBase64_encodeToCharWithByteArray_withBoolean_(sourceArray, lineSep);
}

+ (IOSByteArray *)decodeWithCharArray:(IOSCharArray *)sourceArray {
  return EduUmassCsGnscommonUtilsBase64_decodeWithCharArray_(sourceArray);
}

+ (IOSByteArray *)encodeToByteWithByteArray:(IOSByteArray *)sourceArray
                                withBoolean:(jboolean)lineSep {
  return EduUmassCsGnscommonUtilsBase64_encodeToByteWithByteArray_withBoolean_(sourceArray, lineSep);
}

+ (IOSByteArray *)decodeWithByteArray:(IOSByteArray *)sourceArray {
  return EduUmassCsGnscommonUtilsBase64_decodeWithByteArray_(sourceArray);
}

+ (NSString *)encodeToStringWithByteArray:(IOSByteArray *)sourceArray
                              withBoolean:(jboolean)lineSep {
  return EduUmassCsGnscommonUtilsBase64_encodeToStringWithByteArray_withBoolean_(sourceArray, lineSep);
}

+ (IOSByteArray *)decodeWithNSString:(NSString *)str {
  return EduUmassCsGnscommonUtilsBase64_decodeWithNSString_(str);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[C", 0x19, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x19, 2, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0x19, 4, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x19, 2, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x19, 6, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x19, 2, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encodeToCharWithByteArray:withBoolean:);
  methods[2].selector = @selector(decodeWithCharArray:);
  methods[3].selector = @selector(encodeToByteWithByteArray:withBoolean:);
  methods[4].selector = @selector(decodeWithByteArray:);
  methods[5].selector = @selector(encodeToStringWithByteArray:withBoolean:);
  methods[6].selector = @selector(decodeWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CHARACTER_ARRAY", "[C", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "INTEGER_ARRAY", "[I", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "encodeToChar", "[BZ", "decode", "[C", "encodeToByte", "[B", "encodeToString", "LNSString;", &EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, &EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY };
  static const J2ObjcClassInfo _EduUmassCsGnscommonUtilsBase64 = { "Base64", "edu.umass.cs.gnscommon.utils", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_EduUmassCsGnscommonUtilsBase64;
}

+ (void)initialize {
  if (self == [EduUmassCsGnscommonUtilsBase64 class]) {
    JreStrongAssign(&EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, [@"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" java_toCharArray]);
    JreStrongAssignAndConsume(&EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY, [IOSIntArray newArrayWithLength:256]);
    {
      JavaUtilArrays_fillWithIntArray_withInt_(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY, -1);
      for (jint i = 0, iS = ((IOSCharArray *) nil_chk(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY))->size_; i < iS; i++) {
        *IOSIntArray_GetRef(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY, IOSCharArray_Get(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, i)) = i;
      }
      *IOSIntArray_GetRef(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY, '=') = 0;
    }
    J2OBJC_SET_INITIALIZED(EduUmassCsGnscommonUtilsBase64)
  }
}

@end

void EduUmassCsGnscommonUtilsBase64_init(EduUmassCsGnscommonUtilsBase64 *self) {
  NSObject_init(self);
}

EduUmassCsGnscommonUtilsBase64 *new_EduUmassCsGnscommonUtilsBase64_init() {
  J2OBJC_NEW_IMPL(EduUmassCsGnscommonUtilsBase64, init)
}

EduUmassCsGnscommonUtilsBase64 *create_EduUmassCsGnscommonUtilsBase64_init() {
  J2OBJC_CREATE_IMPL(EduUmassCsGnscommonUtilsBase64, init)
}

IOSCharArray *EduUmassCsGnscommonUtilsBase64_encodeToCharWithByteArray_withBoolean_(IOSByteArray *sourceArray, jboolean lineSep) {
  EduUmassCsGnscommonUtilsBase64_initialize();
  jint sourceLength = sourceArray != nil ? sourceArray->size_ : 0;
  if (sourceLength == 0) {
    return [IOSCharArray arrayWithLength:0];
  }
  jint eLen = (sourceLength / 3) * 3;
  jint cCnt = JreLShift32(((sourceLength - 1) / 3 + 1), 2);
  jint destLen = cCnt + (lineSep ? JreLShift32((cCnt - 1) / 76, 1) : 0);
  IOSCharArray *destArray = [IOSCharArray arrayWithLength:destLen];
  for (jint s = 0, d = 0, cc = 0; s < eLen; ) {
    jint unseq$1 = s++;
    jint unseq$2 = s++;
    jint i = (JreLShift32((IOSByteArray_Get(nil_chk(sourceArray), unseq$1) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(sourceArray, unseq$2) & (jint) 0xff), 8)) | (IOSByteArray_Get(sourceArray, s++) & (jint) 0xff);
    *IOSCharArray_GetRef(destArray, d++) = IOSCharArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY), (JreURShift32(i, 18)) & (jint) 0x3f);
    *IOSCharArray_GetRef(destArray, d++) = IOSCharArray_Get(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, (JreURShift32(i, 12)) & (jint) 0x3f);
    *IOSCharArray_GetRef(destArray, d++) = IOSCharArray_Get(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, (JreURShift32(i, 6)) & (jint) 0x3f);
    *IOSCharArray_GetRef(destArray, d++) = IOSCharArray_Get(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, i & (jint) 0x3f);
    if (lineSep && ++cc == 19 && d < destLen - 2) {
      *IOSCharArray_GetRef(destArray, d++) = 0x000d;
      *IOSCharArray_GetRef(destArray, d++) = 0x000a;
      cc = 0;
    }
  }
  jint left = sourceLength - eLen;
  if (left > 0) {
    jint i = (JreLShift32((IOSByteArray_Get(nil_chk(sourceArray), eLen) & (jint) 0xff), 10)) | (left == 2 ? (JreLShift32((IOSByteArray_Get(sourceArray, sourceLength - 1) & (jint) 0xff), 2)) : 0);
    *IOSCharArray_GetRef(destArray, destLen - 4) = IOSCharArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY), JreRShift32(i, 12));
    *IOSCharArray_GetRef(destArray, destLen - 3) = IOSCharArray_Get(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, (JreURShift32(i, 6)) & (jint) 0x3f);
    *IOSCharArray_GetRef(destArray, destLen - 2) = left == 2 ? IOSCharArray_Get(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, i & (jint) 0x3f) : '=';
    *IOSCharArray_GetRef(destArray, destLen - 1) = '=';
  }
  return destArray;
}

IOSByteArray *EduUmassCsGnscommonUtilsBase64_decodeWithCharArray_(IOSCharArray *sourceArray) {
  EduUmassCsGnscommonUtilsBase64_initialize();
  jint sourceLength = sourceArray != nil ? sourceArray->size_ : 0;
  if (sourceLength == 0) {
    return [IOSByteArray arrayWithLength:0];
  }
  jint sepCnt = 0;
  for (jint i = 0; i < sourceLength; i++) {
    if (IOSIntArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY), IOSCharArray_Get(nil_chk(sourceArray), i)) < 0) {
      sepCnt++;
    }
  }
  if ((sourceLength - sepCnt) % 4 != 0) {
    return nil;
  }
  jint pad = 0;
  for (jint i = sourceLength; i > 1 && IOSIntArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY), IOSCharArray_Get(nil_chk(sourceArray), --i)) <= 0; ) {
    if (IOSCharArray_Get(nil_chk(sourceArray), i) == '=') {
      pad++;
    }
  }
  jint len = (JreRShift32((sourceLength - sepCnt) * 6, 3)) - pad;
  IOSByteArray *destArray = [IOSByteArray arrayWithLength:len];
  for (jint s = 0, d = 0; d < len; ) {
    jint i = 0;
    for (jint j = 0; j < 4; j++) {
      jint c = IOSIntArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY), IOSCharArray_Get(nil_chk(sourceArray), s++));
      if (c >= 0) {
        i |= JreLShift32(c, (18 - j * 6));
      }
      else {
        j--;
      }
    }
    *IOSByteArray_GetRef(destArray, d++) = (jbyte) (JreRShift32(i, 16));
    if (d < len) {
      *IOSByteArray_GetRef(destArray, d++) = (jbyte) (JreRShift32(i, 8));
      if (d < len) {
        *IOSByteArray_GetRef(destArray, d++) = (jbyte) i;
      }
    }
  }
  return destArray;
}

IOSByteArray *EduUmassCsGnscommonUtilsBase64_encodeToByteWithByteArray_withBoolean_(IOSByteArray *sourceArray, jboolean lineSep) {
  EduUmassCsGnscommonUtilsBase64_initialize();
  jint sourceLength = sourceArray != nil ? sourceArray->size_ : 0;
  if (sourceLength == 0) {
    return [IOSByteArray arrayWithLength:0];
  }
  jint eLen = (sourceLength / 3) * 3;
  jint cCnt = JreLShift32(((sourceLength - 1) / 3 + 1), 2);
  jint destLen = cCnt + (lineSep ? JreLShift32((cCnt - 1) / 76, 1) : 0);
  IOSByteArray *destArray = [IOSByteArray arrayWithLength:destLen];
  for (jint s = 0, d = 0, cc = 0; s < eLen; ) {
    jint unseq$1 = s++;
    jint unseq$2 = s++;
    jint i = (JreLShift32((IOSByteArray_Get(nil_chk(sourceArray), unseq$1) & (jint) 0xff), 16)) | (JreLShift32((IOSByteArray_Get(sourceArray, unseq$2) & (jint) 0xff), 8)) | (IOSByteArray_Get(sourceArray, s++) & (jint) 0xff);
    *IOSByteArray_GetRef(destArray, d++) = (jbyte) IOSCharArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY), (JreURShift32(i, 18)) & (jint) 0x3f);
    *IOSByteArray_GetRef(destArray, d++) = (jbyte) IOSCharArray_Get(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, (JreURShift32(i, 12)) & (jint) 0x3f);
    *IOSByteArray_GetRef(destArray, d++) = (jbyte) IOSCharArray_Get(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, (JreURShift32(i, 6)) & (jint) 0x3f);
    *IOSByteArray_GetRef(destArray, d++) = (jbyte) IOSCharArray_Get(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, i & (jint) 0x3f);
    if (lineSep && ++cc == 19 && d < destLen - 2) {
      *IOSByteArray_GetRef(destArray, d++) = 0x000d;
      *IOSByteArray_GetRef(destArray, d++) = 0x000a;
      cc = 0;
    }
  }
  jint left = sourceLength - eLen;
  if (left > 0) {
    jint i = (JreLShift32((IOSByteArray_Get(nil_chk(sourceArray), eLen) & (jint) 0xff), 10)) | (left == 2 ? (JreLShift32((IOSByteArray_Get(sourceArray, sourceLength - 1) & (jint) 0xff), 2)) : 0);
    *IOSByteArray_GetRef(destArray, destLen - 4) = (jbyte) IOSCharArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY), JreRShift32(i, 12));
    *IOSByteArray_GetRef(destArray, destLen - 3) = (jbyte) IOSCharArray_Get(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, (JreURShift32(i, 6)) & (jint) 0x3f);
    *IOSByteArray_GetRef(destArray, destLen - 2) = left == 2 ? (jbyte) IOSCharArray_Get(EduUmassCsGnscommonUtilsBase64_CHARACTER_ARRAY, i & (jint) 0x3f) : (jbyte) '=';
    *IOSByteArray_GetRef(destArray, destLen - 1) = '=';
  }
  return destArray;
}

IOSByteArray *EduUmassCsGnscommonUtilsBase64_decodeWithByteArray_(IOSByteArray *sourceArray) {
  EduUmassCsGnscommonUtilsBase64_initialize();
  jint sourceLength = ((IOSByteArray *) nil_chk(sourceArray))->size_;
  jint sepCnt = 0;
  for (jint i = 0; i < sourceLength; i++) {
    if (IOSIntArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY), IOSByteArray_Get(sourceArray, i) & (jint) 0xff) < 0) {
      sepCnt++;
    }
  }
  if ((sourceLength - sepCnt) % 4 != 0) {
    return nil;
  }
  jint pad = 0;
  for (jint i = sourceLength; i > 1 && IOSIntArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY), IOSByteArray_Get(sourceArray, --i) & (jint) 0xff) <= 0; ) {
    if (IOSByteArray_Get(sourceArray, i) == '=') {
      pad++;
    }
  }
  jint len = (JreRShift32((sourceLength - sepCnt) * 6, 3)) - pad;
  IOSByteArray *destArray = [IOSByteArray arrayWithLength:len];
  for (jint s = 0, d = 0; d < len; ) {
    jint i = 0;
    for (jint j = 0; j < 4; j++) {
      jint c = IOSIntArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY), IOSByteArray_Get(sourceArray, s++) & (jint) 0xff);
      if (c >= 0) {
        i |= JreLShift32(c, (18 - j * 6));
      }
      else {
        j--;
      }
    }
    *IOSByteArray_GetRef(destArray, d++) = (jbyte) (JreRShift32(i, 16));
    if (d < len) {
      *IOSByteArray_GetRef(destArray, d++) = (jbyte) (JreRShift32(i, 8));
      if (d < len) {
        *IOSByteArray_GetRef(destArray, d++) = (jbyte) i;
      }
    }
  }
  return destArray;
}

NSString *EduUmassCsGnscommonUtilsBase64_encodeToStringWithByteArray_withBoolean_(IOSByteArray *sourceArray, jboolean lineSep) {
  EduUmassCsGnscommonUtilsBase64_initialize();
  return [NSString java_stringWithCharacters:EduUmassCsGnscommonUtilsBase64_encodeToCharWithByteArray_withBoolean_(sourceArray, lineSep)];
}

IOSByteArray *EduUmassCsGnscommonUtilsBase64_decodeWithNSString_(NSString *str) {
  EduUmassCsGnscommonUtilsBase64_initialize();
  jint sourceLength = str != nil ? ((jint) [str length]) : 0;
  if (sourceLength == 0) {
    return [IOSByteArray arrayWithLength:0];
  }
  jint sepCnt = 0;
  for (jint i = 0; i < sourceLength; i++) {
    if (IOSIntArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY), [((NSString *) nil_chk(str)) charAtWithInt:i]) < 0) {
      sepCnt++;
    }
  }
  if ((sourceLength - sepCnt) % 4 != 0) {
    return nil;
  }
  jint pad = 0;
  for (jint i = sourceLength; i > 1 && IOSIntArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY), [((NSString *) nil_chk(str)) charAtWithInt:--i]) <= 0; ) {
    if ([((NSString *) nil_chk(str)) charAtWithInt:i] == '=') {
      pad++;
    }
  }
  jint len = (JreRShift32((sourceLength - sepCnt) * 6, 3)) - pad;
  IOSByteArray *destArray = [IOSByteArray arrayWithLength:len];
  for (jint s = 0, d = 0; d < len; ) {
    jint i = 0;
    for (jint j = 0; j < 4; j++) {
      jint c = IOSIntArray_Get(nil_chk(EduUmassCsGnscommonUtilsBase64_INTEGER_ARRAY), [((NSString *) nil_chk(str)) charAtWithInt:s++]);
      if (c >= 0) {
        i |= JreLShift32(c, (18 - j * 6));
      }
      else {
        j--;
      }
    }
    *IOSByteArray_GetRef(destArray, d++) = (jbyte) (JreRShift32(i, 16));
    if (d < len) {
      *IOSByteArray_GetRef(destArray, d++) = (jbyte) (JreRShift32(i, 8));
      if (d < len) {
        *IOSByteArray_GetRef(destArray, d++) = (jbyte) i;
      }
    }
  }
  return destArray;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsGnscommonUtilsBase64)
