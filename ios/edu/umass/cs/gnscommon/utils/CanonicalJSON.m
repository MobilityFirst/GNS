//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../src/edu/umass/cs/gnscommon/utils/CanonicalJSON.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/gnscommon/utils/CanonicalJSON.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/TreeSet.h"
#include "org/json/JSONArray.h"
#include "org/json/JSONException.h"
#include "org/json/JSONObject.h"
#include "org/json/JSONString.h"

@interface EduUmassCsGnscommonUtilsCanonicalJSON ()

+ (NSString *)renderSimpleCanonicalJSONWithId:(id)x;

+ (NSString *)canonicalQuoteWithNSString:(NSString *)string;

@end

__attribute__((unused)) static NSString *EduUmassCsGnscommonUtilsCanonicalJSON_renderSimpleCanonicalJSONWithId_(id x);

__attribute__((unused)) static NSString *EduUmassCsGnscommonUtilsCanonicalJSON_canonicalQuoteWithNSString_(NSString *string);

@implementation EduUmassCsGnscommonUtilsCanonicalJSON

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduUmassCsGnscommonUtilsCanonicalJSON_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)getCanonicalFormWithOrgJsonJSONObject:(OrgJsonJSONObject *)json {
  return EduUmassCsGnscommonUtilsCanonicalJSON_getCanonicalFormWithOrgJsonJSONObject_(json);
}

+ (NSString *)getCanonicalFormWithNSString:(NSString *)json {
  return EduUmassCsGnscommonUtilsCanonicalJSON_getCanonicalFormWithNSString_(json);
}

+ (NSString *)renderSimpleCanonicalJSONWithId:(id)x {
  return EduUmassCsGnscommonUtilsCanonicalJSON_renderSimpleCanonicalJSONWithId_(x);
}

+ (NSString *)canonicalQuoteWithNSString:(NSString *)string {
  return EduUmassCsGnscommonUtilsCanonicalJSON_canonicalQuoteWithNSString_(string);
}

+ (IOSObjectArray *)getNamesWithOrgJsonJSONObject:(OrgJsonJSONObject *)jo {
  return EduUmassCsGnscommonUtilsCanonicalJSON_getNamesWithOrgJsonJSONObject_(jo);
}

+ (id)stringToValueWithNSString:(NSString *)string {
  return EduUmassCsGnscommonUtilsCanonicalJSON_stringToValueWithNSString_(string);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 5, 2, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x9, 6, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 7, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getCanonicalFormWithOrgJsonJSONObject:);
  methods[2].selector = @selector(getCanonicalFormWithNSString:);
  methods[3].selector = @selector(renderSimpleCanonicalJSONWithId:);
  methods[4].selector = @selector(canonicalQuoteWithNSString:);
  methods[5].selector = @selector(getNamesWithOrgJsonJSONObject:);
  methods[6].selector = @selector(stringToValueWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getCanonicalForm", "LOrgJsonJSONObject;", "LNSString;", "renderSimpleCanonicalJSON", "LNSObject;", "canonicalQuote", "getNames", "stringToValue" };
  static const J2ObjcClassInfo _EduUmassCsGnscommonUtilsCanonicalJSON = { "CanonicalJSON", "edu.umass.cs.gnscommon.utils", ptrTable, methods, NULL, 7, 0x1, 7, 0, -1, -1, -1, -1, -1 };
  return &_EduUmassCsGnscommonUtilsCanonicalJSON;
}

@end

void EduUmassCsGnscommonUtilsCanonicalJSON_init(EduUmassCsGnscommonUtilsCanonicalJSON *self) {
  NSObject_init(self);
}

EduUmassCsGnscommonUtilsCanonicalJSON *new_EduUmassCsGnscommonUtilsCanonicalJSON_init() {
  J2OBJC_NEW_IMPL(EduUmassCsGnscommonUtilsCanonicalJSON, init)
}

EduUmassCsGnscommonUtilsCanonicalJSON *create_EduUmassCsGnscommonUtilsCanonicalJSON_init() {
  J2OBJC_CREATE_IMPL(EduUmassCsGnscommonUtilsCanonicalJSON, init)
}

NSString *EduUmassCsGnscommonUtilsCanonicalJSON_getCanonicalFormWithOrgJsonJSONObject_(OrgJsonJSONObject *json) {
  EduUmassCsGnscommonUtilsCanonicalJSON_initialize();
  return EduUmassCsGnscommonUtilsCanonicalJSON_renderSimpleCanonicalJSONWithId_(json);
}

NSString *EduUmassCsGnscommonUtilsCanonicalJSON_getCanonicalFormWithNSString_(NSString *json) {
  EduUmassCsGnscommonUtilsCanonicalJSON_initialize();
  @try {
    return EduUmassCsGnscommonUtilsCanonicalJSON_getCanonicalFormWithOrgJsonJSONObject_(create_OrgJsonJSONObject_initWithNSString_(json));
  }
  @catch (OrgJsonJSONException *e) {
    return nil;
  }
}

NSString *EduUmassCsGnscommonUtilsCanonicalJSON_renderSimpleCanonicalJSONWithId_(id x) {
  EduUmassCsGnscommonUtilsCanonicalJSON_initialize();
  @try {
    if ([x isKindOfClass:[OrgJsonJSONObject class]]) {
      OrgJsonJSONObject *theObject = (OrgJsonJSONObject *) cast_chk(x, [OrgJsonJSONObject class]);
      JavaUtilTreeSet *t = create_JavaUtilTreeSet_init();
      id<JavaUtilIterator> i = [((OrgJsonJSONObject *) nil_chk(theObject)) keys];
      while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) {
        [t addWithId:(NSString *) cast_chk([i next], [NSString class])];
      }
      id<JavaUtilIterator> keys = [t iterator];
      JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithNSString_(@"{");
      while ([((id<JavaUtilIterator>) nil_chk(keys)) hasNext]) {
        if ([sb length] > 1) {
          [sb appendWithChar:','];
        }
        id o = [keys next];
        [sb appendWithNSString:EduUmassCsGnscommonUtilsCanonicalJSON_canonicalQuoteWithNSString_([nil_chk(o) description])];
        [sb appendWithChar:':'];
        [sb appendWithNSString:EduUmassCsGnscommonUtilsCanonicalJSON_renderSimpleCanonicalJSONWithId_([theObject getWithNSString:[o description]])];
      }
      [sb appendWithChar:'}'];
      return [sb description];
    }
    else if ([x isKindOfClass:[OrgJsonJSONArray class]]) {
      OrgJsonJSONArray *theArray = (OrgJsonJSONArray *) cast_chk(x, [OrgJsonJSONArray class]);
      JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
      [sb appendWithNSString:@"["];
      jint len = [((OrgJsonJSONArray *) nil_chk(theArray)) length];
      for (jint i = 0; i < len; i += 1) {
        if (i > 0) {
          [sb appendWithNSString:@","];
        }
        [sb appendWithNSString:EduUmassCsGnscommonUtilsCanonicalJSON_renderSimpleCanonicalJSONWithId_([theArray getWithInt:i])];
      }
      [sb appendWithNSString:@"]"];
      return [sb description];
    }
    else {
      if (x == nil || [x isEqual:nil]) {
        return @"null";
      }
      if ([OrgJsonJSONString_class_() isInstance:x]) {
        id object;
        @try {
          object = [((id<OrgJsonJSONString>) cast_check(x, OrgJsonJSONString_class_())) toJSONString];
        }
        @catch (JavaLangException *e) {
          @throw create_OrgJsonJSONException_initWithNSString_([((JavaLangException *) nil_chk(e)) getMessage]);
        }
        if ([object isKindOfClass:[NSString class]]) {
          return (NSString *) cast_chk(object, [NSString class]);
        }
        @throw create_OrgJsonJSONException_initWithNSString_(JreStrcat("$@", @"Bad value from toJSONString: ", object));
      }
      if ([x isKindOfClass:[NSNumber class]]) {
        return OrgJsonJSONObject_numberToStringWithNSNumber_((NSNumber *) cast_chk(x, [NSNumber class]));
      }
      if ([x isKindOfClass:[JavaLangBoolean class]] || [x isKindOfClass:[OrgJsonJSONObject class]] || [x isKindOfClass:[OrgJsonJSONArray class]]) {
        return [x description];
      }
      if ([JavaUtilMap_class_() isInstance:x]) {
        return EduUmassCsGnscommonUtilsCanonicalJSON_renderSimpleCanonicalJSONWithId_(create_OrgJsonJSONObject_initWithJavaUtilMap_((id<JavaUtilMap>) cast_check(x, JavaUtilMap_class_())));
      }
      if ([JavaUtilCollection_class_() isInstance:x]) {
        return EduUmassCsGnscommonUtilsCanonicalJSON_renderSimpleCanonicalJSONWithId_(create_OrgJsonJSONArray_initWithJavaUtilCollection_((id<JavaUtilCollection>) cast_check(x, JavaUtilCollection_class_())));
      }
      if ([[x java_getClass] isArray]) {
        return EduUmassCsGnscommonUtilsCanonicalJSON_renderSimpleCanonicalJSONWithId_(create_OrgJsonJSONArray_initWithId_(x));
      }
      return EduUmassCsGnscommonUtilsCanonicalJSON_canonicalQuoteWithNSString_([x description]);
    }
  }
  @catch (JavaLangException *e) {
    return nil;
  }
}

NSString *EduUmassCsGnscommonUtilsCanonicalJSON_canonicalQuoteWithNSString_(NSString *string) {
  EduUmassCsGnscommonUtilsCanonicalJSON_initialize();
  if (string == nil || ((jint) [string length]) == 0) {
    return @"\"\"";
  }
  jchar b;
  jchar c = 0;
  NSString *hhhh;
  jint i;
  jint len = ((jint) [string length]);
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_(len + 4);
  [sb appendWithChar:'"'];
  for (i = 0; i < len; i += 1) {
    b = c;
    c = [string charAtWithInt:i];
    switch (c) {
      case '\\':
      case '"':
      [sb appendWithChar:'\\'];
      [sb appendWithChar:c];
      break;
      case '/':
      if (b == '<') {
        [sb appendWithChar:'\\'];
      }
      [sb appendWithChar:c];
      break;
      case 0x0008:
      [sb appendWithNSString:@"\\b"];
      break;
      case 0x0009:
      [sb appendWithNSString:@"\\t"];
      break;
      case 0x000a:
      [sb appendWithNSString:@"\\n"];
      break;
      case 0x000c:
      [sb appendWithNSString:@"\\f"];
      break;
      case 0x000d:
      [sb appendWithNSString:@"\\r"];
      break;
      default:
      if (c < ' ' || (c >= 0x0080 && c < 0x00a0) || (c >= 0x2000 && c < 0x2100)) {
        hhhh = JreStrcat("$$", @"000", JavaLangInteger_toHexStringWithInt_(c));
        [sb appendWithNSString:JreStrcat("$$", @"\\u", [hhhh java_substring:((jint) [hhhh length]) - 4])];
      }
      else {
        [sb appendWithChar:c];
      }
    }
  }
  [sb appendWithChar:'"'];
  return [sb description];
}

IOSObjectArray *EduUmassCsGnscommonUtilsCanonicalJSON_getNamesWithOrgJsonJSONObject_(OrgJsonJSONObject *jo) {
  EduUmassCsGnscommonUtilsCanonicalJSON_initialize();
  jint length = [((OrgJsonJSONObject *) nil_chk(jo)) length];
  if (length == 0) {
    return nil;
  }
  id<JavaUtilIterator> iterator = [jo keys];
  IOSObjectArray *names = [IOSObjectArray arrayWithLength:length type:NSString_class_()];
  jint i = 0;
  while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
    IOSObjectArray_Set(names, i, (NSString *) cast_chk([iterator next], [NSString class]));
    i += 1;
  }
  return names;
}

id EduUmassCsGnscommonUtilsCanonicalJSON_stringToValueWithNSString_(NSString *string) {
  EduUmassCsGnscommonUtilsCanonicalJSON_initialize();
  if ([((NSString *) nil_chk(string)) isEqual:@""]) {
    return string;
  }
  if ([string java_equalsIgnoreCase:@"true"]) {
    return JreLoadStatic(JavaLangBoolean, TRUE);
  }
  if ([string java_equalsIgnoreCase:@"false"]) {
    return JreLoadStatic(JavaLangBoolean, FALSE);
  }
  if ([string java_equalsIgnoreCase:@"null"]) {
    return JreLoadStatic(OrgJsonJSONObject, NULL);
  }
  jchar b = [string charAtWithInt:0];
  if ((b >= '0' && b <= '9') || b == '.' || b == '-' || b == '+') {
    if (b == '0' && ((jint) [string length]) > 2 && ([string charAtWithInt:1] == 'x' || [string charAtWithInt:1] == 'X')) {
      @try {
        return create_JavaLangInteger_initWithInt_(JavaLangInteger_parseIntWithNSString_withInt_([string java_substring:2], 16));
      }
      @catch (JavaLangException *ignore) {
      }
    }
    @try {
      if ([string java_indexOf:'.'] > -1 || [string java_indexOf:'e'] > -1 || [string java_indexOf:'E'] > -1) {
        return JavaLangDouble_valueOfWithNSString_(string);
      }
      else {
        JavaLangLong *myLong = create_JavaLangLong_initWithNSString_(string);
        if ([myLong longLongValue] == [myLong intValue]) {
          return create_JavaLangInteger_initWithInt_([myLong intValue]);
        }
        else {
          return myLong;
        }
      }
    }
    @catch (JavaLangException *ignore) {
    }
  }
  return string;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsGnscommonUtilsCanonicalJSON)
