//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../src/edu/umass/cs/gnscommon/AclAccessType.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/gnscommon/AclAccessType.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"

__attribute__((unused)) static void EduUmassCsGnscommonAclAccessType_initWithNSString_withInt_(EduUmassCsGnscommonAclAccessType *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(EduUmassCsGnscommonAclAccessType)

EduUmassCsGnscommonAclAccessType *EduUmassCsGnscommonAclAccessType_values_[4];

@implementation EduUmassCsGnscommonAclAccessType

+ (NSString *)typesToString {
  return EduUmassCsGnscommonAclAccessType_typesToString();
}

+ (IOSObjectArray *)values {
  return EduUmassCsGnscommonAclAccessType_values();
}

+ (EduUmassCsGnscommonAclAccessType *)valueOfWithNSString:(NSString *)name {
  return EduUmassCsGnscommonAclAccessType_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LEduUmassCsGnscommonAclAccessType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduUmassCsGnscommonAclAccessType;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(typesToString);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "READ_WHITELIST", "LEduUmassCsGnscommonAclAccessType;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "WRITE_WHITELIST", "LEduUmassCsGnscommonAclAccessType;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "READ_BLACKLIST", "LEduUmassCsGnscommonAclAccessType;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "WRITE_BLACKLIST", "LEduUmassCsGnscommonAclAccessType;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EduUmassCsGnscommonAclAccessType, READ_WHITELIST), &JreEnum(EduUmassCsGnscommonAclAccessType, WRITE_WHITELIST), &JreEnum(EduUmassCsGnscommonAclAccessType, READ_BLACKLIST), &JreEnum(EduUmassCsGnscommonAclAccessType, WRITE_BLACKLIST), "Ljava/lang/Enum<Ledu/umass/cs/gnscommon/AclAccessType;>;" };
  static const J2ObjcClassInfo _EduUmassCsGnscommonAclAccessType = { "AclAccessType", "edu.umass.cs.gnscommon", ptrTable, methods, fields, 7, 0x4011, 3, 4, -1, -1, -1, 6, -1 };
  return &_EduUmassCsGnscommonAclAccessType;
}

+ (void)initialize {
  if (self == [EduUmassCsGnscommonAclAccessType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 4 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"READ_WHITELIST", @"WRITE_WHITELIST", @"READ_BLACKLIST", @"WRITE_BLACKLIST",
    };
    for (jint i = 0; i < 4; i++) {
      (EduUmassCsGnscommonAclAccessType_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      EduUmassCsGnscommonAclAccessType_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(EduUmassCsGnscommonAclAccessType)
  }
}

@end

void EduUmassCsGnscommonAclAccessType_initWithNSString_withInt_(EduUmassCsGnscommonAclAccessType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

NSString *EduUmassCsGnscommonAclAccessType_typesToString() {
  EduUmassCsGnscommonAclAccessType_initialize();
  JavaLangStringBuilder *result = create_JavaLangStringBuilder_init();
  NSString *prefix = @"";
  {
    IOSObjectArray *a__ = EduUmassCsGnscommonAclAccessType_values();
    EduUmassCsGnscommonAclAccessType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduUmassCsGnscommonAclAccessType * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduUmassCsGnscommonAclAccessType *type = *b__++;
      [result appendWithNSString:prefix];
      [result appendWithNSString:[((EduUmassCsGnscommonAclAccessType *) nil_chk(type)) name]];
      prefix = @", ";
    }
  }
  return [result description];
}

IOSObjectArray *EduUmassCsGnscommonAclAccessType_values() {
  EduUmassCsGnscommonAclAccessType_initialize();
  return [IOSObjectArray arrayWithObjects:EduUmassCsGnscommonAclAccessType_values_ count:4 type:EduUmassCsGnscommonAclAccessType_class_()];
}

EduUmassCsGnscommonAclAccessType *EduUmassCsGnscommonAclAccessType_valueOfWithNSString_(NSString *name) {
  EduUmassCsGnscommonAclAccessType_initialize();
  for (int i = 0; i < 4; i++) {
    EduUmassCsGnscommonAclAccessType *e = EduUmassCsGnscommonAclAccessType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EduUmassCsGnscommonAclAccessType *EduUmassCsGnscommonAclAccessType_fromOrdinal(NSUInteger ordinal) {
  EduUmassCsGnscommonAclAccessType_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return EduUmassCsGnscommonAclAccessType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsGnscommonAclAccessType)
