//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../src/edu/umass/cs/gnsserver/nodeconfig/NodeInfo.java
//

#include "J2ObjC_source.h"
#include "edu/umass/cs/gnsserver/nodeconfig/NodeInfo.h"
#include "edu/umass/cs/utils/Util.h"
#include "java/net/InetAddress.h"
#include "java/net/UnknownHostException.h"

@interface EduUmassCsGnsserverNodeconfigNodeInfo () {
 @public
  id id__;
  id activeReplicaID_;
  id reconfiguratorID_;
  JavaNetInetAddress *ipAddress_;
  NSString *ipAddressString_;
  JavaNetInetAddress *externalIPAddress_;
  NSString *externalIPString_;
  jint startingPortNumber_;
  jlong pingLatency_;
  jdouble latitude_;
  jdouble longitude_;
}

@end

J2OBJC_FIELD_SETTER(EduUmassCsGnsserverNodeconfigNodeInfo, id__, id)
J2OBJC_FIELD_SETTER(EduUmassCsGnsserverNodeconfigNodeInfo, activeReplicaID_, id)
J2OBJC_FIELD_SETTER(EduUmassCsGnsserverNodeconfigNodeInfo, reconfiguratorID_, id)
J2OBJC_FIELD_SETTER(EduUmassCsGnsserverNodeconfigNodeInfo, ipAddress_, JavaNetInetAddress *)
J2OBJC_FIELD_SETTER(EduUmassCsGnsserverNodeconfigNodeInfo, ipAddressString_, NSString *)
J2OBJC_FIELD_SETTER(EduUmassCsGnsserverNodeconfigNodeInfo, externalIPAddress_, JavaNetInetAddress *)
J2OBJC_FIELD_SETTER(EduUmassCsGnsserverNodeconfigNodeInfo, externalIPString_, NSString *)

@implementation EduUmassCsGnsserverNodeconfigNodeInfo

- (instancetype)initWithId:(id)id_
                    withId:(id)activeReplicaID
                    withId:(id)reconfiguratorID
              withNSString:(NSString *)ipAddressString
              withNSString:(NSString *)externalIP
                   withInt:(jint)startingPortNumber
                  withLong:(jlong)pingLatency
                withDouble:(jdouble)latitude
                withDouble:(jdouble)longitude {
  EduUmassCsGnsserverNodeconfigNodeInfo_initWithId_withId_withId_withNSString_withNSString_withInt_withLong_withDouble_withDouble_(self, id_, activeReplicaID, reconfiguratorID, ipAddressString, externalIP, startingPortNumber, pingLatency, latitude, longitude);
  return self;
}

- (id)getId {
  return id__;
}

- (id)getActiveReplicaID {
  return activeReplicaID_;
}

- (id)getReconfiguratorID {
  return reconfiguratorID_;
}

- (JavaNetInetAddress *)getIpAddress {
  @synchronized(self) {
    if (ipAddress_ == nil) {
      @try {
        JreStrongAssign(&ipAddress_, EduUmassCsUtilsUtil_getInetAddressFromStringWithNSString_(ipAddressString_));
      }
      @catch (JavaNetUnknownHostException *e) {
        [((JavaNetUnknownHostException *) nil_chk(e)) printStackTrace];
      }
    }
    return ipAddress_;
  }
}

- (JavaNetInetAddress *)getExternalIPAddress {
  @synchronized(self) {
    if (externalIPAddress_ == nil) {
      @try {
        if (externalIPString_ != nil) {
          JreStrongAssign(&externalIPAddress_, EduUmassCsUtilsUtil_getInetAddressFromStringWithNSString_(externalIPString_));
        }
        else {
          JreStrongAssign(&externalIPAddress_, [self getIpAddress]);
        }
      }
      @catch (JavaNetUnknownHostException *e) {
        [((JavaNetUnknownHostException *) nil_chk(e)) printStackTrace];
      }
    }
    return externalIPAddress_;
  }
}

- (jint)getStartingPortNumber {
  return startingPortNumber_;
}

- (jlong)getPingLatency {
  @synchronized(self) {
    return pingLatency_;
  }
}

- (void)setPingLatencyWithLong:(jlong)pingLatency {
  @synchronized(self) {
    self->pingLatency_ = pingLatency;
  }
}

- (jdouble)getLatitude {
  return latitude_;
}

- (jdouble)getLongitude {
  return longitude_;
}

- (NSString *)description {
  return JreStrcat("$@$@$@$@$$$$$I$JC", @"NodeInfo{id=", id__, @", activeReplicaID=", activeReplicaID_, @", reconfiguratorID=", reconfiguratorID_, @", ipAddress=", ipAddress_, @", ipAddressString=", ipAddressString_, @", externalIP=", externalIPString_, @", startingPortNumber=", startingPortNumber_, @", pingLatency=", pingLatency_, '}');
}

- (void)dealloc {
  RELEASE_(id__);
  RELEASE_(activeReplicaID_);
  RELEASE_(reconfiguratorID_);
  RELEASE_(ipAddress_);
  RELEASE_(ipAddressString_);
  RELEASE_(externalIPAddress_);
  RELEASE_(externalIPString_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaNetInetAddress;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetInetAddress;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, 3, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withId:withId:withNSString:withNSString:withInt:withLong:withDouble:withDouble:);
  methods[1].selector = @selector(getId);
  methods[2].selector = @selector(getActiveReplicaID);
  methods[3].selector = @selector(getReconfiguratorID);
  methods[4].selector = @selector(getIpAddress);
  methods[5].selector = @selector(getExternalIPAddress);
  methods[6].selector = @selector(getStartingPortNumber);
  methods[7].selector = @selector(getPingLatency);
  methods[8].selector = @selector(setPingLatencyWithLong:);
  methods[9].selector = @selector(getLatitude);
  methods[10].selector = @selector(getLongitude);
  methods[11].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "LNSObject;", .constantValue.asLong = 0, 0x12, 6, -1, 7, -1 },
    { "activeReplicaID_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "reconfiguratorID_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "ipAddress_", "LJavaNetInetAddress;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ipAddressString_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "externalIPAddress_", "LJavaNetInetAddress;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "externalIPString_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "startingPortNumber_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "pingLatency_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "latitude_", "D", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "longitude_", "D", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LNSObject;LNSObject;LNSString;LNSString;IJDD", "(TNodeIDType;TNodeIDType;TNodeIDType;Ljava/lang/String;Ljava/lang/String;IJDD)V", "()TNodeIDType;", "setPingLatency", "J", "toString", "id", "TNodeIDType;", "<NodeIDType:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _EduUmassCsGnsserverNodeconfigNodeInfo = { "NodeInfo", "edu.umass.cs.gnsserver.nodeconfig", ptrTable, methods, fields, 7, 0x1, 12, 11, -1, -1, -1, 8, -1 };
  return &_EduUmassCsGnsserverNodeconfigNodeInfo;
}

@end

void EduUmassCsGnsserverNodeconfigNodeInfo_initWithId_withId_withId_withNSString_withNSString_withInt_withLong_withDouble_withDouble_(EduUmassCsGnsserverNodeconfigNodeInfo *self, id id_, id activeReplicaID, id reconfiguratorID, NSString *ipAddressString, NSString *externalIP, jint startingPortNumber, jlong pingLatency, jdouble latitude, jdouble longitude) {
  NSObject_init(self);
  JreStrongAssign(&self->ipAddress_, nil);
  JreStrongAssign(&self->externalIPAddress_, nil);
  JreStrongAssign(&self->id__, id_);
  JreStrongAssign(&self->activeReplicaID_, activeReplicaID);
  JreStrongAssign(&self->reconfiguratorID_, reconfiguratorID);
  JreStrongAssign(&self->ipAddressString_, ipAddressString);
  JreStrongAssign(&self->externalIPString_, externalIP);
  self->startingPortNumber_ = startingPortNumber;
  self->pingLatency_ = pingLatency;
  self->latitude_ = latitude;
  self->longitude_ = longitude;
}

EduUmassCsGnsserverNodeconfigNodeInfo *new_EduUmassCsGnsserverNodeconfigNodeInfo_initWithId_withId_withId_withNSString_withNSString_withInt_withLong_withDouble_withDouble_(id id_, id activeReplicaID, id reconfiguratorID, NSString *ipAddressString, NSString *externalIP, jint startingPortNumber, jlong pingLatency, jdouble latitude, jdouble longitude) {
  J2OBJC_NEW_IMPL(EduUmassCsGnsserverNodeconfigNodeInfo, initWithId_withId_withId_withNSString_withNSString_withInt_withLong_withDouble_withDouble_, id_, activeReplicaID, reconfiguratorID, ipAddressString, externalIP, startingPortNumber, pingLatency, latitude, longitude)
}

EduUmassCsGnsserverNodeconfigNodeInfo *create_EduUmassCsGnsserverNodeconfigNodeInfo_initWithId_withId_withId_withNSString_withNSString_withInt_withLong_withDouble_withDouble_(id id_, id activeReplicaID, id reconfiguratorID, NSString *ipAddressString, NSString *externalIP, jint startingPortNumber, jlong pingLatency, jdouble latitude, jdouble longitude) {
  J2OBJC_CREATE_IMPL(EduUmassCsGnsserverNodeconfigNodeInfo, initWithId_withId_withId_withNSString_withNSString_withInt_withLong_withDouble_withDouble_, id_, activeReplicaID, reconfiguratorID, ipAddressString, externalIP, startingPortNumber, pingLatency, latitude, longitude)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsGnsserverNodeconfigNodeInfo)
