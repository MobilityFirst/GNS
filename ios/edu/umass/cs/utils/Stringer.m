//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/utils/Stringer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/utils/Stringer.h"
#include "java/io/PrintStream.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/Arrays.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"

inline NSString *EduUmassCsUtilsStringer_get_charset();
inline NSString *EduUmassCsUtilsStringer_set_charset(NSString *value);
static NSString *EduUmassCsUtilsStringer_charset = @"ISO-8859-1";
J2OBJC_STATIC_FIELD_OBJ(EduUmassCsUtilsStringer, charset, NSString *)

NSString *EduUmassCsUtilsStringer_CHARSET = @"ISO-8859-1";

@implementation EduUmassCsUtilsStringer

- (instancetype)initWithByteArray:(IOSByteArray *)data {
  EduUmassCsUtilsStringer_initWithByteArray_(self, data);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)data
                          withInt:(jint)offset
                          withInt:(jint)length {
  EduUmassCsUtilsStringer_initWithByteArray_withInt_withInt_(self, data, offset, length);
  return self;
}

- (instancetype)initWithId:(id)data {
  EduUmassCsUtilsStringer_initWithId_(self, data);
  return self;
}

+ (void)setCharsetWithNSString:(NSString *)cs {
  EduUmassCsUtilsStringer_setCharsetWithNSString_(cs);
}

- (NSString *)description {
  if ([data_ isKindOfClass:[IOSByteArray class]]) @try {
    return [NSString java_stringWithBytes:(IOSByteArray *) cast_chk(data_, [IOSByteArray class]) offset:offset_ length:length_ charsetName:EduUmassCsUtilsStringer_charset];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    [((JavaIoUnsupportedEncodingException *) nil_chk(e)) printStackTrace];
  }
  else if ([IOSClass_arrayType(JavaLangInteger_class_(), 1) isInstance:data_]) return [(create_JavaUtilHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_((IOSObjectArray *) cast_check(data_, IOSClass_arrayType(JavaLangInteger_class_(), 1))))) description];
  return [nil_chk(data_) description];
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduUmassCsUtilsStringer_mainWithNSStringArray_(args);
}

- (void)dealloc {
  RELEASE_(data_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(initWithByteArray:withInt:withInt:);
  methods[2].selector = @selector(initWithId:);
  methods[3].selector = @selector(setCharsetWithNSString:);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "data_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "offset_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "CHARSET", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "charset", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "[BII", "LNSObject;", "setCharset", "LNSString;", "toString", "main", "[LNSString;", &EduUmassCsUtilsStringer_CHARSET, &EduUmassCsUtilsStringer_charset };
  static const J2ObjcClassInfo _EduUmassCsUtilsStringer = { "Stringer", "edu.umass.cs.utils", ptrTable, methods, fields, 7, 0x1, 6, 5, -1, -1, -1, -1, -1 };
  return &_EduUmassCsUtilsStringer;
}

@end

void EduUmassCsUtilsStringer_initWithByteArray_(EduUmassCsUtilsStringer *self, IOSByteArray *data) {
  NSObject_init(self);
  JreStrongAssign(&self->data_, data);
  self->offset_ = 0;
  self->length_ = ((IOSByteArray *) nil_chk(data))->size_;
}

EduUmassCsUtilsStringer *new_EduUmassCsUtilsStringer_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_NEW_IMPL(EduUmassCsUtilsStringer, initWithByteArray_, data)
}

EduUmassCsUtilsStringer *create_EduUmassCsUtilsStringer_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(EduUmassCsUtilsStringer, initWithByteArray_, data)
}

void EduUmassCsUtilsStringer_initWithByteArray_withInt_withInt_(EduUmassCsUtilsStringer *self, IOSByteArray *data, jint offset, jint length) {
  NSObject_init(self);
  JreStrongAssign(&self->data_, data);
  self->offset_ = offset;
  self->length_ = length;
}

EduUmassCsUtilsStringer *new_EduUmassCsUtilsStringer_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint length) {
  J2OBJC_NEW_IMPL(EduUmassCsUtilsStringer, initWithByteArray_withInt_withInt_, data, offset, length)
}

EduUmassCsUtilsStringer *create_EduUmassCsUtilsStringer_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint length) {
  J2OBJC_CREATE_IMPL(EduUmassCsUtilsStringer, initWithByteArray_withInt_withInt_, data, offset, length)
}

void EduUmassCsUtilsStringer_initWithId_(EduUmassCsUtilsStringer *self, id data) {
  NSObject_init(self);
  JreStrongAssign(&self->data_, data);
  self->offset_ = 0;
  self->length_ = 0;
}

EduUmassCsUtilsStringer *new_EduUmassCsUtilsStringer_initWithId_(id data) {
  J2OBJC_NEW_IMPL(EduUmassCsUtilsStringer, initWithId_, data)
}

EduUmassCsUtilsStringer *create_EduUmassCsUtilsStringer_initWithId_(id data) {
  J2OBJC_CREATE_IMPL(EduUmassCsUtilsStringer, initWithId_, data)
}

void EduUmassCsUtilsStringer_setCharsetWithNSString_(NSString *cs) {
  EduUmassCsUtilsStringer_initialize();
  JreStrongAssign(&EduUmassCsUtilsStringer_charset, cs);
}

void EduUmassCsUtilsStringer_mainWithNSStringArray_(IOSObjectArray *args) {
  EduUmassCsUtilsStringer_initialize();
  IOSByteArray *buf = [@"hello world" java_getBytes];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:create_EduUmassCsUtilsStringer_initWithByteArray_(buf)];
  IOSObjectArray *intArray = [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(23), JavaLangInteger_valueOfWithInt_(43), JavaLangInteger_valueOfWithInt_(56) } count:3 type:JavaLangInteger_class_()];
  [JreLoadStatic(JavaLangSystem, out) printlnWithId:create_EduUmassCsUtilsStringer_initWithId_(intArray)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsUtilsStringer)
