//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/utils/IntegerPacketTypeMap.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/nio/interfaces/IntegerPacketType.h"
#include "edu/umass/cs/utils/IntegerPacketTypeMap.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/util/HashMap.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

inline jlong EduUmassCsUtilsIntegerPacketTypeMap_get_serialVersionUID();
#define EduUmassCsUtilsIntegerPacketTypeMap_serialVersionUID 0LL
J2OBJC_STATIC_FIELD_CONSTANT(EduUmassCsUtilsIntegerPacketTypeMap, serialVersionUID, jlong)

@implementation EduUmassCsUtilsIntegerPacketTypeMap

- (instancetype)initWithEduUmassCsNioInterfacesIntegerPacketTypeArray:(IOSObjectArray *)types {
  EduUmassCsUtilsIntegerPacketTypeMap_initWithEduUmassCsNioInterfacesIntegerPacketTypeArray_(self, types);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduUmassCsNioInterfacesIntegerPacketTypeArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduUmassCsUtilsIntegerPacketTypeMap_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LEduUmassCsNioInterfacesIntegerPacketType;", "([TV;)V", "<V::Ledu/umass/cs/nio/interfaces/IntegerPacketType;>Ljava/util/HashMap<Ljava/lang/Integer;TV;>;" };
  static const J2ObjcClassInfo _EduUmassCsUtilsIntegerPacketTypeMap = { "IntegerPacketTypeMap", "edu.umass.cs.utils", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, -1, -1, 2, -1 };
  return &_EduUmassCsUtilsIntegerPacketTypeMap;
}

@end

void EduUmassCsUtilsIntegerPacketTypeMap_initWithEduUmassCsNioInterfacesIntegerPacketTypeArray_(EduUmassCsUtilsIntegerPacketTypeMap *self, IOSObjectArray *types) {
  JavaUtilHashMap_init(self);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(types))->size_; i++) {
    if (![self containsKeyWithId:IOSObjectArray_Get(types, i)]) [self putWithId:JavaLangInteger_valueOfWithInt_([((id<EduUmassCsNioInterfacesIntegerPacketType>) nil_chk(IOSObjectArray_Get(types, i))) getInt]) withId:IOSObjectArray_Get(types, i)];
    else {
      JreAssert((false), (@"Duplicate or inconsistent enum type"));
      @throw create_JavaLangRuntimeException_initWithNSString_(@"Duplicate or inconsistent enum type");
    }
  }
}

EduUmassCsUtilsIntegerPacketTypeMap *new_EduUmassCsUtilsIntegerPacketTypeMap_initWithEduUmassCsNioInterfacesIntegerPacketTypeArray_(IOSObjectArray *types) {
  J2OBJC_NEW_IMPL(EduUmassCsUtilsIntegerPacketTypeMap, initWithEduUmassCsNioInterfacesIntegerPacketTypeArray_, types)
}

EduUmassCsUtilsIntegerPacketTypeMap *create_EduUmassCsUtilsIntegerPacketTypeMap_initWithEduUmassCsNioInterfacesIntegerPacketTypeArray_(IOSObjectArray *types) {
  J2OBJC_CREATE_IMPL(EduUmassCsUtilsIntegerPacketTypeMap, initWithEduUmassCsNioInterfacesIntegerPacketTypeArray_, types)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsUtilsIntegerPacketTypeMap)
