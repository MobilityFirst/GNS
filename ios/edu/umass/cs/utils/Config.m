//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/utils/Config.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/utils/Config.h"
#include "edu/umass/cs/utils/Util.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/PrintStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Short.h"
#include "java/lang/System.h"
#include "java/util/HashMap.h"
#include "java/util/Properties.h"
#include "java/util/Set.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"

@interface EduUmassCsUtilsConfig ()

+ (jboolean)isDefaultValueEnumWithIOSClass:(IOSClass *)clazz;

+ (id)putObjectWithJavaLangEnum:(JavaLangEnum *)field
                   withIOSClass:(IOSClass *)clazz
                         withId:(id)obj;

+ (id)putObjectWithJavaLangEnum:(JavaLangEnum *)field
                         withId:(id)obj;

- (void)readConfigFileWithNSString:(NSString *)configFile;

+ (void)testMethod1;

+ (void)testMethod2;

- (id)toLowerCaseWithId:(id)key;

@end

inline JavaUtilLoggingLogger *EduUmassCsUtilsConfig_get_log();
static JavaUtilLoggingLogger *EduUmassCsUtilsConfig_log;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsUtilsConfig, log, JavaUtilLoggingLogger *)

inline jlong EduUmassCsUtilsConfig_get_serialVersionUID();
#define EduUmassCsUtilsConfig_serialVersionUID 4637861931101543278LL
J2OBJC_STATIC_FIELD_CONSTANT(EduUmassCsUtilsConfig, serialVersionUID, jlong)

inline JavaUtilHashMap *EduUmassCsUtilsConfig_get_configMap();
static JavaUtilHashMap *EduUmassCsUtilsConfig_configMap;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsUtilsConfig, configMap, JavaUtilHashMap *)

inline JavaUtilHashMap *EduUmassCsUtilsConfig_get_disableCommandLine();
static JavaUtilHashMap *EduUmassCsUtilsConfig_disableCommandLine;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsUtilsConfig, disableCommandLine, JavaUtilHashMap *)

inline JavaUtilHashMap *EduUmassCsUtilsConfig_get_cacheMap();
static JavaUtilHashMap *EduUmassCsUtilsConfig_cacheMap;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsUtilsConfig, cacheMap, JavaUtilHashMap *)

inline JavaUtilHashMap *EduUmassCsUtilsConfig_get_cmdLine();
inline JavaUtilHashMap *EduUmassCsUtilsConfig_set_cmdLine(JavaUtilHashMap *value);
static JavaUtilHashMap *EduUmassCsUtilsConfig_cmdLine;
J2OBJC_STATIC_FIELD_OBJ(EduUmassCsUtilsConfig, cmdLine, JavaUtilHashMap *)

inline jboolean EduUmassCsUtilsConfig_get_caseSensitive();
inline jboolean EduUmassCsUtilsConfig_set_caseSensitive(jboolean value);
inline jboolean *EduUmassCsUtilsConfig_getRef_caseSensitive();
static jboolean EduUmassCsUtilsConfig_caseSensitive = false;
J2OBJC_STATIC_FIELD_PRIMITIVE(EduUmassCsUtilsConfig, caseSensitive, jboolean)

__attribute__((unused)) static jboolean EduUmassCsUtilsConfig_isDefaultValueEnumWithIOSClass_(IOSClass *clazz);

__attribute__((unused)) static id EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withIOSClass_withId_(JavaLangEnum *field, IOSClass *clazz, id obj);

__attribute__((unused)) static id EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withId_(JavaLangEnum *field, id obj);

__attribute__((unused)) static void EduUmassCsUtilsConfig_readConfigFileWithNSString_(EduUmassCsUtilsConfig *self, NSString *configFile);

__attribute__((unused)) static void EduUmassCsUtilsConfig_testMethod1();

__attribute__((unused)) static void EduUmassCsUtilsConfig_testMethod2();

__attribute__((unused)) static id EduUmassCsUtilsConfig_toLowerCaseWithId_(EduUmassCsUtilsConfig *self, id key);

@interface EduUmassCsUtilsConfig_DefaultValueEnum : NSObject

@end

@interface EduUmassCsUtilsConfig_ConfigurableEnum : NSObject

@end

@interface EduUmassCsUtilsConfig_Disableable : NSObject

@end

@interface EduUmassCsUtilsConfig_CLIOption : NSObject

@end

typedef NS_ENUM(NSUInteger, EduUmassCsUtilsConfig_Fields_Enum) {
  EduUmassCsUtilsConfig_Fields_Enum_FIRST = 0,
  EduUmassCsUtilsConfig_Fields_Enum_SECOND = 1,
  EduUmassCsUtilsConfig_Fields_Enum_THIRD = 2,
};

@interface EduUmassCsUtilsConfig_Fields : JavaLangEnum < NSCopying, EduUmassCsUtilsConfig_DefaultValueEnum > {
 @public
  id value_;
}

- (id)getDefaultValue;

+ (IOSObjectArray *)values;

+ (EduUmassCsUtilsConfig_Fields *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(EduUmassCsUtilsConfig_Fields)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EduUmassCsUtilsConfig_Fields *EduUmassCsUtilsConfig_Fields_values_[];

inline EduUmassCsUtilsConfig_Fields *EduUmassCsUtilsConfig_Fields_get_FIRST();
J2OBJC_ENUM_CONSTANT(EduUmassCsUtilsConfig_Fields, FIRST)

inline EduUmassCsUtilsConfig_Fields *EduUmassCsUtilsConfig_Fields_get_SECOND();
J2OBJC_ENUM_CONSTANT(EduUmassCsUtilsConfig_Fields, SECOND)

inline EduUmassCsUtilsConfig_Fields *EduUmassCsUtilsConfig_Fields_get_THIRD();
J2OBJC_ENUM_CONSTANT(EduUmassCsUtilsConfig_Fields, THIRD)

J2OBJC_FIELD_SETTER(EduUmassCsUtilsConfig_Fields, value_, id)

__attribute__((unused)) static void EduUmassCsUtilsConfig_Fields_initWithId_withNSString_withInt_(EduUmassCsUtilsConfig_Fields *self, id value, NSString *__name, jint __ordinal);

__attribute__((unused)) static IOSObjectArray *EduUmassCsUtilsConfig_Fields_values();

__attribute__((unused)) static EduUmassCsUtilsConfig_Fields *EduUmassCsUtilsConfig_Fields_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EduUmassCsUtilsConfig_Fields *EduUmassCsUtilsConfig_Fields_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EduUmassCsUtilsConfig_Fields)

__attribute__((unused)) static void EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withInt_(EduUmassCsUtilsConfig_OptionFields *self, id defaultValue, NSString *__name, jint __ordinal);

__attribute__((unused)) static void EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withInt_(EduUmassCsUtilsConfig_OptionFields *self, id defaultValue, NSString *optionName, jboolean hasArg, NSString *description_, NSString *__name, jint __ordinal);

__attribute__((unused)) static void EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withNSString_withInt_(EduUmassCsUtilsConfig_OptionFields *self, id defaultValue, NSString *optionName, jboolean hasArg, NSString *description_, NSString *argName, NSString *__name, jint __ordinal);

__attribute__((unused)) static void EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withBoolean_withNSString_withInt_(EduUmassCsUtilsConfig_OptionFields *self, id defaultValue, NSString *optionName, jboolean hasArg, NSString *description_, NSString *argName, jboolean withValueSeparator, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(EduUmassCsUtilsConfig)

@implementation EduUmassCsUtilsConfig

- (instancetype)initWithNSString:(NSString *)configFile {
  EduUmassCsUtilsConfig_initWithNSString_(self, configFile);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduUmassCsUtilsConfig_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)isDefaultValueEnumWithIOSClass:(IOSClass *)clazz {
  return EduUmassCsUtilsConfig_isDefaultValueEnumWithIOSClass_(clazz);
}

+ (EduUmassCsUtilsConfig *)register__WithIOSClass:(IOSClass *)type
                                     withNSString:(NSString *)systemPropertyKey
                                     withNSString:(NSString *)defaultConfigFile {
  return EduUmassCsUtilsConfig_register__WithIOSClass_withNSString_withNSString_(type, systemPropertyKey, defaultConfigFile);
}

+ (JavaUtilHashMap *)register__WithNSStringArray:(IOSObjectArray *)args {
  return EduUmassCsUtilsConfig_register__WithNSStringArray_(args);
}

+ (EduUmassCsUtilsConfig *)getConfigWithIOSClass:(IOSClass *)type {
  return EduUmassCsUtilsConfig_getConfigWithIOSClass_(type);
}

+ (JavaUtilProperties *)getPropertiesWithIOSClass:(IOSClass *)type
                                     withNSString:(NSString *)systemPropertyKey
                                     withNSString:(NSString *)defaultConfigFile {
  return EduUmassCsUtilsConfig_getPropertiesWithIOSClass_withNSString_withNSString_(type, systemPropertyKey, defaultConfigFile);
}

- (EduUmassCsUtilsConfig *)setSystemProperties {
  NSString *key = nil;
  for (NSString * __strong prop in nil_chk([self stringPropertyNames])) if ([((NSString *) nil_chk(prop)) hasPrefix:@"-D"] && JavaLangSystem_getPropertyWithNSString_(key = [prop java_replaceFirst:@"-D" withReplacement:@""]) == nil) JavaLangSystem_setPropertyWithNSString_withNSString_(key, [self getPropertyWithNSString:prop]);
  return self;
}

+ (id)getGlobalWithJavaLangEnum:(JavaLangEnum *)field {
  return EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field);
}

+ (id)putObjectWithJavaLangEnum:(JavaLangEnum *)field
                   withIOSClass:(IOSClass *)clazz
                         withId:(id)obj {
  return EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withIOSClass_withId_(field, clazz, obj);
}

+ (id)putObjectWithJavaLangEnum:(JavaLangEnum *)field
                         withId:(id)obj {
  return EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withId_(field, obj);
}

+ (jboolean)getGlobalBooleanWithJavaLangEnum:(JavaLangEnum *)field {
  return EduUmassCsUtilsConfig_getGlobalBooleanWithJavaLangEnum_(field);
}

+ (jint)getGlobalIntWithJavaLangEnum:(JavaLangEnum *)field {
  return EduUmassCsUtilsConfig_getGlobalIntWithJavaLangEnum_(field);
}

+ (jlong)getGlobalLongWithJavaLangEnum:(JavaLangEnum *)field {
  return EduUmassCsUtilsConfig_getGlobalLongWithJavaLangEnum_(field);
}

+ (jdouble)getGlobalDoubleWithJavaLangEnum:(JavaLangEnum *)field {
  return EduUmassCsUtilsConfig_getGlobalDoubleWithJavaLangEnum_(field);
}

+ (jshort)getGlobalShortWithJavaLangEnum:(JavaLangEnum *)field {
  return EduUmassCsUtilsConfig_getGlobalShortWithJavaLangEnum_(field);
}

+ (NSString *)getGlobalStringWithJavaLangEnum:(JavaLangEnum *)field {
  return EduUmassCsUtilsConfig_getGlobalStringWithJavaLangEnum_(field);
}

- (id)getWithJavaLangEnum:(JavaLangEnum *)field {
  NSString *strField = [((JavaLangEnum *) nil_chk(field)) description];
  id retval;
  if ((retval = [self getWithId:strField]) != nil) return retval;
  else return [((id<EduUmassCsUtilsConfig_DefaultValueEnum>) cast_check(field, EduUmassCsUtilsConfig_DefaultValueEnum_class_())) getDefaultValue];
}

- (jboolean)getBooleanWithJavaLangEnum:(JavaLangEnum *)field {
  return [((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_([nil_chk([self getWithJavaLangEnum:field]) description]))) booleanValue];
}

- (jint)getIntWithJavaLangEnum:(JavaLangEnum *)field {
  return [((JavaLangInteger *) nil_chk(JavaLangInteger_valueOfWithNSString_([nil_chk([self getWithJavaLangEnum:field]) description]))) intValue];
}

- (jlong)getLongWithJavaLangEnum:(JavaLangEnum *)field {
  return [((JavaLangLong *) nil_chk(JavaLangLong_valueOfWithNSString_([nil_chk([self getWithJavaLangEnum:field]) description]))) longLongValue];
}

- (jshort)getShortWithJavaLangEnum:(JavaLangEnum *)field {
  return [((JavaLangShort *) nil_chk(JavaLangShort_valueOfWithNSString_([nil_chk([self getWithJavaLangEnum:field]) description]))) shortValue];
}

- (NSString *)getStringWithJavaLangEnum:(JavaLangEnum *)field {
  return ([nil_chk([self getWithJavaLangEnum:field]) description]);
}

- (void)readConfigFileWithNSString:(NSString *)configFile {
  EduUmassCsUtilsConfig_readConfigFileWithNSString_(self, configFile);
}

+ (void)testMethod1 {
  EduUmassCsUtilsConfig_testMethod1();
}

+ (void)testMethod2 {
  EduUmassCsUtilsConfig_testMethod2();
}

+ (EduUmassCsUtilsConfig *)disableCommandLineWithIOSClass:(IOSClass *)type {
  return EduUmassCsUtilsConfig_disableCommandLineWithIOSClass_(type);
}

+ (void)setCaseSensitiveWithBoolean:(jboolean)b {
  EduUmassCsUtilsConfig_setCaseSensitiveWithBoolean_(b);
}

- (id)toLowerCaseWithId:(id)key {
  return EduUmassCsUtilsConfig_toLowerCaseWithId_(self, key);
}

- (id)putWithId:(id)key
         withId:(id)value {
  return [super putWithId:EduUmassCsUtilsConfig_toLowerCaseWithId_(self, key) withId:value];
}

- (NSString *)getPropertyWithNSString:(NSString *)key {
  return [super getPropertyWithNSString:(NSString *) cast_chk(EduUmassCsUtilsConfig_toLowerCaseWithId_(self, key), [NSString class])];
}

- (id)getWithId:(id)key {
  return [super getWithId:EduUmassCsUtilsConfig_toLowerCaseWithId_(self, key)];
}

- (NSString *)getPropertyWithNSString:(NSString *)key
                         withNSString:(NSString *)defaultValue {
  return [super getPropertyWithNSString:(NSString *) cast_chk(EduUmassCsUtilsConfig_toLowerCaseWithId_(self, key), [NSString class]) withNSString:defaultValue];
}

- (jboolean)containsKeyWithNSString:(NSString *)key {
  return [super containsKeyWithId:EduUmassCsUtilsConfig_toLowerCaseWithId_(self, key)];
}

+ (JavaUtilLoggingLogger *)getLogger {
  return EduUmassCsUtilsConfig_getLogger();
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduUmassCsUtilsConfig_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 2, 3, -1, 4, -1, -1 },
    { NULL, "LEduUmassCsUtilsConfig;", 0x9, 5, 6, 1, 7, -1, -1 },
    { NULL, "LJavaUtilHashMap;", 0x9, 5, 8, -1, 9, -1, -1 },
    { NULL, "LEduUmassCsUtilsConfig;", 0x9, 10, 3, -1, 11, -1, -1 },
    { NULL, "LJavaUtilProperties;", 0x9, 12, 6, 1, 13, -1, -1 },
    { NULL, "LEduUmassCsUtilsConfig;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 14, 15, -1, 16, -1, -1 },
    { NULL, "LNSObject;", 0xa, 17, 18, -1, 19, -1, -1 },
    { NULL, "LNSObject;", 0xa, 17, 20, -1, 21, -1, -1 },
    { NULL, "Z", 0x9, 22, 15, -1, 23, -1, -1 },
    { NULL, "I", 0x9, 24, 15, -1, 25, -1, -1 },
    { NULL, "J", 0x9, 26, 15, -1, 27, -1, -1 },
    { NULL, "D", 0x9, 28, 15, -1, 29, -1, -1 },
    { NULL, "S", 0x9, 30, 15, -1, 31, -1, -1 },
    { NULL, "LNSString;", 0x9, 32, 15, -1, 33, -1, -1 },
    { NULL, "LNSObject;", 0x1, 34, 15, -1, 16, -1, -1 },
    { NULL, "Z", 0x1, 35, 15, -1, 23, -1, -1 },
    { NULL, "I", 0x1, 36, 15, -1, 25, -1, -1 },
    { NULL, "J", 0x1, 37, 15, -1, 27, -1, -1 },
    { NULL, "S", 0x1, 38, 15, -1, 31, -1, -1 },
    { NULL, "LNSString;", 0x1, 39, 15, -1, 33, -1, -1 },
    { NULL, "V", 0x2, 40, 0, 1, -1, -1, -1 },
    { NULL, "V", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, -1, -1, 1, -1, -1, -1 },
    { NULL, "LEduUmassCsUtilsConfig;", 0x9, 41, 3, -1, 11, -1, -1 },
    { NULL, "V", 0x9, 42, 43, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 44, 45, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 46, 47, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 48, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 34, 45, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 48, 49, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 50, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilLoggingLogger;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 51, 8, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(isDefaultValueEnumWithIOSClass:);
  methods[3].selector = @selector(register__WithIOSClass:withNSString:withNSString:);
  methods[4].selector = @selector(register__WithNSStringArray:);
  methods[5].selector = @selector(getConfigWithIOSClass:);
  methods[6].selector = @selector(getPropertiesWithIOSClass:withNSString:withNSString:);
  methods[7].selector = @selector(setSystemProperties);
  methods[8].selector = @selector(getGlobalWithJavaLangEnum:);
  methods[9].selector = @selector(putObjectWithJavaLangEnum:withIOSClass:withId:);
  methods[10].selector = @selector(putObjectWithJavaLangEnum:withId:);
  methods[11].selector = @selector(getGlobalBooleanWithJavaLangEnum:);
  methods[12].selector = @selector(getGlobalIntWithJavaLangEnum:);
  methods[13].selector = @selector(getGlobalLongWithJavaLangEnum:);
  methods[14].selector = @selector(getGlobalDoubleWithJavaLangEnum:);
  methods[15].selector = @selector(getGlobalShortWithJavaLangEnum:);
  methods[16].selector = @selector(getGlobalStringWithJavaLangEnum:);
  methods[17].selector = @selector(getWithJavaLangEnum:);
  methods[18].selector = @selector(getBooleanWithJavaLangEnum:);
  methods[19].selector = @selector(getIntWithJavaLangEnum:);
  methods[20].selector = @selector(getLongWithJavaLangEnum:);
  methods[21].selector = @selector(getShortWithJavaLangEnum:);
  methods[22].selector = @selector(getStringWithJavaLangEnum:);
  methods[23].selector = @selector(readConfigFileWithNSString:);
  methods[24].selector = @selector(testMethod1);
  methods[25].selector = @selector(testMethod2);
  methods[26].selector = @selector(disableCommandLineWithIOSClass:);
  methods[27].selector = @selector(setCaseSensitiveWithBoolean:);
  methods[28].selector = @selector(toLowerCaseWithId:);
  methods[29].selector = @selector(putWithId:withId:);
  methods[30].selector = @selector(getPropertyWithNSString:);
  methods[31].selector = @selector(getWithId:);
  methods[32].selector = @selector(getPropertyWithNSString:withNSString:);
  methods[33].selector = @selector(containsKeyWithNSString:);
  methods[34].selector = @selector(getLogger);
  methods[35].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "log", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 52, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduUmassCsUtilsConfig_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "configMap", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1a, -1, 53, 54, -1 },
    { "disableCommandLine", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1a, -1, 55, 56, -1 },
    { "cacheMap", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1a, -1, 57, 58, -1 },
    { "cmdLine", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0xa, -1, 59, 58, -1 },
    { "caseSensitive", "Z", .constantValue.asLong = 0, 0xa, -1, 60, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LJavaIoIOException;", "isDefaultValueEnum", "LIOSClass;", "(Ljava/lang/Class<*>;)Z", "register", "LIOSClass;LNSString;LNSString;", "(Ljava/lang/Class<*>;Ljava/lang/String;Ljava/lang/String;)Ledu/umass/cs/utils/Config;", "[LNSString;", "([Ljava/lang/String;)Ljava/util/HashMap<**>;", "getConfig", "(Ljava/lang/Class<*>;)Ledu/umass/cs/utils/Config;", "getProperties", "(Ljava/lang/Class<*>;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Properties;", "getGlobal", "LJavaLangEnum;", "(Ljava/lang/Enum<*>;)Ljava/lang/Object;", "putObject", "LJavaLangEnum;LIOSClass;LNSObject;", "(Ljava/lang/Enum<*>;Ljava/lang/Class<*>;Ljava/lang/Object;)Ljava/lang/Object;", "LJavaLangEnum;LNSObject;", "(Ljava/lang/Enum<*>;Ljava/lang/Object;)Ljava/lang/Object;", "getGlobalBoolean", "(Ljava/lang/Enum<*>;)Z", "getGlobalInt", "(Ljava/lang/Enum<*>;)I", "getGlobalLong", "(Ljava/lang/Enum<*>;)J", "getGlobalDouble", "(Ljava/lang/Enum<*>;)D", "getGlobalShort", "(Ljava/lang/Enum<*>;)S", "getGlobalString", "(Ljava/lang/Enum<*>;)Ljava/lang/String;", "get", "getBoolean", "getInt", "getLong", "getShort", "getString", "readConfigFile", "disableCommandLine", "setCaseSensitive", "Z", "toLowerCase", "LNSObject;", "put", "LNSObject;LNSObject;", "getProperty", "LNSString;LNSString;", "containsKey", "main", &EduUmassCsUtilsConfig_log, &EduUmassCsUtilsConfig_configMap, "Ljava/util/HashMap<Ljava/lang/Class<*>;Ledu/umass/cs/utils/Config;>;", &EduUmassCsUtilsConfig_disableCommandLine, "Ljava/util/HashMap<Ljava/lang/Class<*>;Ljava/lang/Boolean;>;", &EduUmassCsUtilsConfig_cacheMap, "Ljava/util/HashMap<Ljava/lang/Object;Ljava/lang/Object;>;", &EduUmassCsUtilsConfig_cmdLine, &EduUmassCsUtilsConfig_caseSensitive, "LEduUmassCsUtilsConfig_DefaultValueEnum;LEduUmassCsUtilsConfig_ConfigurableEnum;LEduUmassCsUtilsConfig_Disableable;LEduUmassCsUtilsConfig_CLIOption;LEduUmassCsUtilsConfig_Fields;LEduUmassCsUtilsConfig_OptionFields;" };
  static const J2ObjcClassInfo _EduUmassCsUtilsConfig = { "Config", "edu.umass.cs.utils", ptrTable, methods, fields, 7, 0x1, 36, 7, -1, 61, -1, -1, -1 };
  return &_EduUmassCsUtilsConfig;
}

+ (void)initialize {
  if (self == [EduUmassCsUtilsConfig class]) {
    JreStrongAssign(&EduUmassCsUtilsConfig_log, JavaUtilLoggingLogger_getLoggerWithNSString_([EduUmassCsUtilsConfig_class_() getName]));
    JreStrongAssignAndConsume(&EduUmassCsUtilsConfig_configMap, new_JavaUtilHashMap_init());
    JreStrongAssignAndConsume(&EduUmassCsUtilsConfig_disableCommandLine, new_JavaUtilHashMap_init());
    JreStrongAssignAndConsume(&EduUmassCsUtilsConfig_cacheMap, new_JavaUtilHashMap_init());
    JreStrongAssignAndConsume(&EduUmassCsUtilsConfig_cmdLine, new_JavaUtilHashMap_init());
    J2OBJC_SET_INITIALIZED(EduUmassCsUtilsConfig)
  }
}

@end

void EduUmassCsUtilsConfig_initWithNSString_(EduUmassCsUtilsConfig *self, NSString *configFile) {
  JavaUtilProperties_init(self);
  EduUmassCsUtilsConfig_readConfigFileWithNSString_(self, configFile);
}

EduUmassCsUtilsConfig *new_EduUmassCsUtilsConfig_initWithNSString_(NSString *configFile) {
  J2OBJC_NEW_IMPL(EduUmassCsUtilsConfig, initWithNSString_, configFile)
}

EduUmassCsUtilsConfig *create_EduUmassCsUtilsConfig_initWithNSString_(NSString *configFile) {
  J2OBJC_CREATE_IMPL(EduUmassCsUtilsConfig, initWithNSString_, configFile)
}

void EduUmassCsUtilsConfig_init(EduUmassCsUtilsConfig *self) {
  JavaUtilProperties_init(self);
}

EduUmassCsUtilsConfig *new_EduUmassCsUtilsConfig_init() {
  J2OBJC_NEW_IMPL(EduUmassCsUtilsConfig, init)
}

EduUmassCsUtilsConfig *create_EduUmassCsUtilsConfig_init() {
  J2OBJC_CREATE_IMPL(EduUmassCsUtilsConfig, init)
}

jboolean EduUmassCsUtilsConfig_isDefaultValueEnumWithIOSClass_(IOSClass *clazz) {
  EduUmassCsUtilsConfig_initialize();
  {
    IOSObjectArray *a__ = [((IOSClass *) nil_chk(clazz)) getInterfaces];
    IOSClass * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSClass * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSClass *iface = *b__++;
      if ([((IOSClass *) nil_chk(iface)) isEqual:EduUmassCsUtilsConfig_DefaultValueEnum_class_()]) return true;
    }
  }
  return false;
}

EduUmassCsUtilsConfig *EduUmassCsUtilsConfig_register__WithIOSClass_withNSString_withNSString_(IOSClass *type, NSString *systemPropertyKey, NSString *defaultConfigFile) {
  EduUmassCsUtilsConfig_initialize();
  if (![((IOSClass *) nil_chk(type)) isEnum] && !EduUmassCsUtilsConfig_isDefaultValueEnumWithIOSClass_(type)) return nil;
  if (EduUmassCsUtilsConfig_getConfigWithIOSClass_(type) != nil) return EduUmassCsUtilsConfig_getConfigWithIOSClass_(type);
  NSString *configFile = JavaLangSystem_getPropertyWithNSString_(systemPropertyKey) != nil ? JavaLangSystem_getPropertyWithNSString_(systemPropertyKey) : defaultConfigFile;
  @try {
    EduUmassCsUtilsConfig *config = nil;
    [((JavaUtilHashMap *) nil_chk(EduUmassCsUtilsConfig_configMap)) putWithId:type withId:config = create_EduUmassCsUtilsConfig_initWithNSString_(configFile)];
    return config;
  }
  @catch (JavaIoIOException *ioe) {
    [EduUmassCsUtilsConfig_configMap putWithId:type withId:create_EduUmassCsUtilsConfig_init()];
    [((JavaUtilLoggingLogger *) nil_chk(EduUmassCsUtilsConfig_log)) warningWithNSString:JreStrcat("$$$$@", [EduUmassCsUtilsConfig_class_() getSimpleName], @" unable to find file ", configFile, @"; using default values for type ", type)];
    @throw ioe;
  }
}

JavaUtilHashMap *EduUmassCsUtilsConfig_register__WithNSStringArray_(IOSObjectArray *args) {
  EduUmassCsUtilsConfig_initialize();
  {
    IOSObjectArray *a__ = args;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *arg = *b__++;
      if (![((NSString *) nil_chk(arg)) java_contains:@"="]) continue;
      if ([arg hasPrefix:@"-"]) arg = [arg java_replaceFirst:@"-" withReplacement:@""];
      IOSObjectArray *tokens = [((NSString *) nil_chk(arg)) java_split:@"="];
      if (((IOSObjectArray *) nil_chk(tokens))->size_ == 2) {
        [((JavaUtilHashMap *) nil_chk(EduUmassCsUtilsConfig_cmdLine)) putWithId:IOSObjectArray_Get(tokens, 0) withId:IOSObjectArray_Get(tokens, 1)];
        {
          IOSObjectArray *a__ = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(EduUmassCsUtilsConfig_cacheMap)) keySet])) toArray];
          id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
          id const *e__ = b__ + a__->size_;
          while (b__ < e__) {
            id key = *b__++;
            if ([((NSString *) nil_chk([nil_chk(key) description])) isEqual:IOSObjectArray_Get(tokens, 0)]) [EduUmassCsUtilsConfig_cacheMap removeWithId:key];
          }
        }
      }
    }
  }
  return EduUmassCsUtilsConfig_cmdLine;
}

EduUmassCsUtilsConfig *EduUmassCsUtilsConfig_getConfigWithIOSClass_(IOSClass *type) {
  EduUmassCsUtilsConfig_initialize();
  return [((JavaUtilHashMap *) nil_chk(EduUmassCsUtilsConfig_configMap)) getWithId:type];
}

JavaUtilProperties *EduUmassCsUtilsConfig_getPropertiesWithIOSClass_withNSString_withNSString_(IOSClass *type, NSString *systemPropertyKey, NSString *defaultConfigFile) {
  EduUmassCsUtilsConfig_initialize();
  NSString *configFile = nil;
  JavaUtilProperties *properties = create_JavaUtilProperties_init();
  @try {
    [properties load__WithJavaIoInputStream:create_JavaIoFileInputStream_initWithNSString_(configFile = (JavaLangSystem_getPropertyWithNSString_(systemPropertyKey) != nil ? JavaLangSystem_getPropertyWithNSString_(systemPropertyKey) : defaultConfigFile))];
  }
  @catch (JavaIoIOException *ioe) {
    [((JavaUtilLoggingLogger *) nil_chk(EduUmassCsUtilsConfig_log)) warningWithNSString:JreStrcat("$$$$@", [EduUmassCsUtilsConfig_class_() getSimpleName], @" unable to find file ", configFile, @"; using default values for type ", type)];
    @throw ioe;
  }
  return properties;
}

id EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(JavaLangEnum *field) {
  EduUmassCsUtilsConfig_initialize();
  if ([EduUmassCsUtilsConfig_Disableable_class_() isInstance:field] && [((id<EduUmassCsUtilsConfig_Disableable>) nil_chk(((id<EduUmassCsUtilsConfig_Disableable>) cast_check(field, EduUmassCsUtilsConfig_Disableable_class_())))) isDisabled] && [EduUmassCsUtilsConfig_DefaultValueEnum_class_() isInstance:field]) return [((id<EduUmassCsUtilsConfig_DefaultValueEnum>) nil_chk(((id<EduUmassCsUtilsConfig_DefaultValueEnum>) cast_check(field, EduUmassCsUtilsConfig_DefaultValueEnum_class_())))) getDefaultValue];
  id retval;
  if ((retval = [((JavaUtilHashMap *) nil_chk(EduUmassCsUtilsConfig_cacheMap)) getWithId:field]) != nil) {
    return retval;
  }
  IOSClass *clazz = [((JavaLangEnum *) nil_chk(field)) getDeclaringClass];
  NSString *strField = [field description];
  if ((retval = [((JavaUtilHashMap *) nil_chk(EduUmassCsUtilsConfig_cmdLine)) getWithId:strField]) != nil && (![((JavaUtilHashMap *) nil_chk(EduUmassCsUtilsConfig_disableCommandLine)) containsKeyWithId:clazz] || [((JavaLangBoolean *) nil_chk([EduUmassCsUtilsConfig_disableCommandLine getWithId:clazz])) booleanValue])) {
    return retval;
  }
  EduUmassCsUtilsConfig *config = [((JavaUtilHashMap *) nil_chk(EduUmassCsUtilsConfig_configMap)) getWithId:clazz];
  if (config != nil && (retval = [config getWithJavaLangEnum:field]) != nil) {
    return retval;
  }
  else if ([EduUmassCsUtilsConfig_ConfigurableEnum_class_() isInstance:field] && config == nil) {
    @try {
      EduUmassCsUtilsConfig_register__WithIOSClass_withNSString_withNSString_(clazz, [((id<EduUmassCsUtilsConfig_ConfigurableEnum>) cast_check(field, EduUmassCsUtilsConfig_ConfigurableEnum_class_())) getConfigFileKey], [((id<EduUmassCsUtilsConfig_ConfigurableEnum>) cast_check(field, EduUmassCsUtilsConfig_ConfigurableEnum_class_())) getDefaultConfigFile]);
      return EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field);
    }
    @catch (JavaIoIOException *e) {
      [EduUmassCsUtilsConfig_configMap putWithId:clazz withId:nil];
      return [((id<EduUmassCsUtilsConfig_ConfigurableEnum>) cast_check(field, EduUmassCsUtilsConfig_ConfigurableEnum_class_())) getDefaultValue];
    }
  }
  else if ([EduUmassCsUtilsConfig_DefaultValueEnum_class_() isInstance:field]) return EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withId_(field, [((id<EduUmassCsUtilsConfig_DefaultValueEnum>) cast_check(field, EduUmassCsUtilsConfig_DefaultValueEnum_class_())) getDefaultValue]);
  @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$@$@$$", @"No matching ", [EduUmassCsUtilsConfig_class_() getSimpleName], @" registered for field ", field, @" and/or ", field, @" not instance of ", [EduUmassCsUtilsConfig_DefaultValueEnum_class_() getSimpleName]));
}

id EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withIOSClass_withId_(JavaLangEnum *field, IOSClass *clazz, id obj) {
  EduUmassCsUtilsConfig_initialize();
  if ([((IOSClass *) nil_chk(clazz)) isInstance:obj]) return EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withId_(field, obj);
  return obj;
}

id EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withId_(JavaLangEnum *field, id obj) {
  EduUmassCsUtilsConfig_initialize();
  if (![((JavaUtilHashMap *) nil_chk(EduUmassCsUtilsConfig_cacheMap)) containsKeyWithId:field]) [EduUmassCsUtilsConfig_cacheMap putWithId:field withId:obj];
  return obj;
}

jboolean EduUmassCsUtilsConfig_getGlobalBooleanWithJavaLangEnum_(JavaLangEnum *field) {
  EduUmassCsUtilsConfig_initialize();
  id obj = EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field);
  return [(JavaLangBoolean *) cast_chk(([obj isKindOfClass:[JavaLangBoolean class]] ? obj : EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withIOSClass_withId_(field, JavaLangBoolean_class_(), (JavaLangBoolean_valueOfWithNSString_([((NSString *) nil_chk([nil_chk(obj) description])) java_trim])))), [JavaLangBoolean class]) booleanValue];
}

jint EduUmassCsUtilsConfig_getGlobalIntWithJavaLangEnum_(JavaLangEnum *field) {
  EduUmassCsUtilsConfig_initialize();
  id obj = EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field);
  return [(JavaLangInteger *) cast_chk(([obj isKindOfClass:[JavaLangInteger class]] ? obj : EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withIOSClass_withId_(field, JavaLangInteger_class_(), JavaLangInteger_valueOfWithNSString_([((NSString *) nil_chk([nil_chk(EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field)) description])) java_trim]))), [JavaLangInteger class]) intValue];
}

jlong EduUmassCsUtilsConfig_getGlobalLongWithJavaLangEnum_(JavaLangEnum *field) {
  EduUmassCsUtilsConfig_initialize();
  id obj = EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field);
  return [(JavaLangLong *) cast_chk(([obj isKindOfClass:[JavaLangLong class]] ? obj : EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withIOSClass_withId_(field, JavaLangLong_class_(), JavaLangLong_valueOfWithNSString_([((NSString *) nil_chk([nil_chk(EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field)) description])) java_trim]))), [JavaLangLong class]) longLongValue];
}

jdouble EduUmassCsUtilsConfig_getGlobalDoubleWithJavaLangEnum_(JavaLangEnum *field) {
  EduUmassCsUtilsConfig_initialize();
  id obj = EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field);
  return [(JavaLangDouble *) cast_chk(([obj isKindOfClass:[JavaLangDouble class]] ? obj : EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withIOSClass_withId_(field, JavaLangDouble_class_(), JavaLangDouble_valueOfWithNSString_([((NSString *) nil_chk([nil_chk(EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field)) description])) java_trim]))), [JavaLangDouble class]) doubleValue];
}

jshort EduUmassCsUtilsConfig_getGlobalShortWithJavaLangEnum_(JavaLangEnum *field) {
  EduUmassCsUtilsConfig_initialize();
  id obj = EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field);
  return [(JavaLangShort *) cast_chk(([obj isKindOfClass:[JavaLangShort class]] ? obj : EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withIOSClass_withId_(field, JavaLangShort_class_(), JavaLangShort_valueOfWithNSString_([((NSString *) nil_chk([nil_chk(EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field)) description])) java_trim]))), [JavaLangShort class]) shortValue];
}

NSString *EduUmassCsUtilsConfig_getGlobalStringWithJavaLangEnum_(JavaLangEnum *field) {
  EduUmassCsUtilsConfig_initialize();
  NSString *globalVal = [nil_chk(EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field)) description];
  NSString *ret = (NSString *) cast_chk(EduUmassCsUtilsConfig_putObjectWithJavaLangEnum_withId_(field, globalVal), [NSString class]);
  return ret;
}

void EduUmassCsUtilsConfig_readConfigFileWithNSString_(EduUmassCsUtilsConfig *self, NSString *configFile) {
  JavaIoInputStream *is = create_JavaIoFileInputStream_initWithNSString_(configFile);
  [self load__WithJavaIoInputStream:is];
  for (id __strong prop in nil_chk([self keySet])) {
    [((JavaUtilLoggingLogger *) nil_chk(EduUmassCsUtilsConfig_log)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINE) withNSString:@"Set property {0}={1}" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ prop, [self getPropertyWithNSString:[nil_chk(prop) description]] } count:2 type:NSObject_class_()]];
  }
}

void EduUmassCsUtilsConfig_testMethod1() {
  EduUmassCsUtilsConfig_initialize();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@$@$@", @"Default value of ", JreLoadEnum(EduUmassCsUtilsConfig_Fields, THIRD), @" is ", [((EduUmassCsUtilsConfig_Fields *) nil_chk(JreLoadEnum(EduUmassCsUtilsConfig_Fields, THIRD))) getDefaultValue], @" and the configured value is ", EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(JreLoadEnum(EduUmassCsUtilsConfig_Fields, THIRD)))];
}

void EduUmassCsUtilsConfig_testMethod2() {
  EduUmassCsUtilsConfig_initialize();
  JreAssert((([nil_chk([((EduUmassCsUtilsConfig_Fields *) nil_chk(JreLoadEnum(EduUmassCsUtilsConfig_Fields, SECOND))) getDefaultValue]) isEqual:@"Monday"])), (@"edu/umass/cs/utils/Config.java:326 condition failed: assert (Fields.SECOND.getDefaultValue().equals(\"Monday\"));"));
  EduUmassCsUtilsConfig *config = create_EduUmassCsUtilsConfig_initWithNSString_(@"/Users/arun/GNS/src/edu/umass/cs/utils/config.properties");
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:EduUmassCsUtilsConfig_Fields_class_()];
  {
    IOSObjectArray *a__ = EduUmassCsUtilsConfig_Fields_values();
    EduUmassCsUtilsConfig_Fields * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduUmassCsUtilsConfig_Fields * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduUmassCsUtilsConfig_Fields *field = *b__++;
      JreAssert((([nil_chk(EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(field)) isEqual:[config getWithJavaLangEnum:field]])), (@"edu/umass/cs/utils/Config.java:333 condition failed: assert (Config.getGlobal(field).equals(config.get(field)));"));
    }
  }
  JreAssert((([((NSString *) nil_chk([nil_chk([((EduUmassCsUtilsConfig_Fields *) nil_chk(JreLoadEnum(EduUmassCsUtilsConfig_Fields, FIRST))) getDefaultValue]) description])) isEqual:EduUmassCsUtilsConfig_getGlobalWithJavaLangEnum_(JreLoadEnum(EduUmassCsUtilsConfig_Fields, FIRST))])), (@"edu/umass/cs/utils/Config.java:336 condition failed: assert (Fields.FIRST.getDefaultValue().toString().equals(Config\n\t\t\t\t.getGlobal(Fields.FIRST)));"));
  JreAssert((([((NSString *) nil_chk([((NSString *) nil_chk([nil_chk([JreLoadEnum(EduUmassCsUtilsConfig_Fields, SECOND) getDefaultValue]) description])) uppercaseString])) isEqual:[config getWithJavaLangEnum:JreLoadEnum(EduUmassCsUtilsConfig_Fields, SECOND)]])), (@"edu/umass/cs/utils/Config.java:338 condition failed: assert (Fields.SECOND.getDefaultValue().toString().toUpperCase()\n\t\t\t\t.equals(config.get(Fields.SECOND)));"));
  JreAssert(((![((NSString *) nil_chk([nil_chk([((EduUmassCsUtilsConfig_Fields *) nil_chk(JreLoadEnum(EduUmassCsUtilsConfig_Fields, THIRD))) getDefaultValue]) description])) isEqual:[config getWithJavaLangEnum:JreLoadEnum(EduUmassCsUtilsConfig_Fields, THIRD)]])), (@"edu/umass/cs/utils/Config.java:340 condition failed: assert (!Fields.THIRD.getDefaultValue().toString()\n\t\t\t\t.equals(config.get(Fields.THIRD)));"));
}

EduUmassCsUtilsConfig *EduUmassCsUtilsConfig_disableCommandLineWithIOSClass_(IOSClass *type) {
  EduUmassCsUtilsConfig_initialize();
  [((JavaUtilHashMap *) nil_chk(EduUmassCsUtilsConfig_disableCommandLine)) putWithId:type withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  return [((JavaUtilHashMap *) nil_chk(EduUmassCsUtilsConfig_configMap)) getWithId:type];
}

void EduUmassCsUtilsConfig_setCaseSensitiveWithBoolean_(jboolean b) {
  EduUmassCsUtilsConfig_initialize();
  EduUmassCsUtilsConfig_caseSensitive = b;
}

id EduUmassCsUtilsConfig_toLowerCaseWithId_(EduUmassCsUtilsConfig *self, id key) {
  return EduUmassCsUtilsConfig_caseSensitive || !([key isKindOfClass:[NSString class]]) || [((NSString *) nil_chk(((NSString *) cast_chk(key, [NSString class])))) hasPrefix:@"-D"] ? key : [((NSString *) nil_chk(((NSString *) cast_chk(key, [NSString class])))) lowercaseString];
}

JavaUtilLoggingLogger *EduUmassCsUtilsConfig_getLogger() {
  EduUmassCsUtilsConfig_initialize();
  return EduUmassCsUtilsConfig_log;
}

void EduUmassCsUtilsConfig_mainWithNSStringArray_(IOSObjectArray *args) {
  EduUmassCsUtilsConfig_initialize();
  EduUmassCsUtilsUtil_assertAssertionsEnabled();
  EduUmassCsUtilsConfig_register__WithIOSClass_withNSString_withNSString_(EduUmassCsUtilsConfig_Fields_class_(), @"systemPropertyKey", @"/Users/arun/GNS/src/edu/umass/cs/utils/config.properties");
  EduUmassCsUtilsConfig_testMethod1();
  EduUmassCsUtilsConfig_testMethod2();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"[success]"];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsUtilsConfig)

@implementation EduUmassCsUtilsConfig_DefaultValueEnum

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getDefaultValue);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduUmassCsUtilsConfig;" };
  static const J2ObjcClassInfo _EduUmassCsUtilsConfig_DefaultValueEnum = { "DefaultValueEnum", "edu.umass.cs.utils", ptrTable, methods, NULL, 7, 0x609, 1, 0, 0, -1, -1, -1, -1 };
  return &_EduUmassCsUtilsConfig_DefaultValueEnum;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduUmassCsUtilsConfig_DefaultValueEnum)

@implementation EduUmassCsUtilsConfig_ConfigurableEnum

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getDefaultConfigFile);
  methods[1].selector = @selector(getConfigFileKey);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduUmassCsUtilsConfig;" };
  static const J2ObjcClassInfo _EduUmassCsUtilsConfig_ConfigurableEnum = { "ConfigurableEnum", "edu.umass.cs.utils", ptrTable, methods, NULL, 7, 0x609, 2, 0, 0, -1, -1, -1, -1 };
  return &_EduUmassCsUtilsConfig_ConfigurableEnum;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduUmassCsUtilsConfig_ConfigurableEnum)

@implementation EduUmassCsUtilsConfig_Disableable

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isDisabled);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduUmassCsUtilsConfig;" };
  static const J2ObjcClassInfo _EduUmassCsUtilsConfig_Disableable = { "Disableable", "edu.umass.cs.utils", ptrTable, methods, NULL, 7, 0x609, 1, 0, 0, -1, -1, -1, -1 };
  return &_EduUmassCsUtilsConfig_Disableable;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduUmassCsUtilsConfig_Disableable)

@implementation EduUmassCsUtilsConfig_CLIOption

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getOptionName);
  methods[1].selector = @selector(getArgName);
  methods[2].selector = @selector(hasArg);
  methods[3].selector = @selector(getDescriptio);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduUmassCsUtilsConfig;" };
  static const J2ObjcClassInfo _EduUmassCsUtilsConfig_CLIOption = { "CLIOption", "edu.umass.cs.utils", ptrTable, methods, NULL, 7, 0x609, 4, 0, 0, -1, -1, -1, -1 };
  return &_EduUmassCsUtilsConfig_CLIOption;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduUmassCsUtilsConfig_CLIOption)

J2OBJC_INITIALIZED_DEFN(EduUmassCsUtilsConfig_Fields)

EduUmassCsUtilsConfig_Fields *EduUmassCsUtilsConfig_Fields_values_[3];

@implementation EduUmassCsUtilsConfig_Fields

- (id)getDefaultValue {
  return value_;
}

+ (IOSObjectArray *)values {
  return EduUmassCsUtilsConfig_Fields_values();
}

+ (EduUmassCsUtilsConfig_Fields *)valueOfWithNSString:(NSString *)name {
  return EduUmassCsUtilsConfig_Fields_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LEduUmassCsUtilsConfig_Fields;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduUmassCsUtilsConfig_Fields;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getDefaultValue);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FIRST", "LEduUmassCsUtilsConfig_Fields;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "SECOND", "LEduUmassCsUtilsConfig_Fields;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "THIRD", "LEduUmassCsUtilsConfig_Fields;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EduUmassCsUtilsConfig_Fields, FIRST), &JreEnum(EduUmassCsUtilsConfig_Fields, SECOND), &JreEnum(EduUmassCsUtilsConfig_Fields, THIRD), "LEduUmassCsUtilsConfig;", "Ljava/lang/Enum<Ledu/umass/cs/utils/Config$Fields;>;Ledu/umass/cs/utils/Config$DefaultValueEnum;" };
  static const J2ObjcClassInfo _EduUmassCsUtilsConfig_Fields = { "Fields", "edu.umass.cs.utils", ptrTable, methods, fields, 7, 0x401a, 3, 4, 5, -1, -1, 6, -1 };
  return &_EduUmassCsUtilsConfig_Fields;
}

+ (void)initialize {
  if (self == [EduUmassCsUtilsConfig_Fields class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(EduUmassCsUtilsConfig_Fields, FIRST) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    EduUmassCsUtilsConfig_Fields_initWithId_withNSString_withInt_(e, JavaLangInteger_valueOfWithInt_(1), @"FIRST", 0);
    (JreEnum(EduUmassCsUtilsConfig_Fields, SECOND) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    EduUmassCsUtilsConfig_Fields_initWithId_withNSString_withInt_(e, @"Monday", @"SECOND", 1);
    (JreEnum(EduUmassCsUtilsConfig_Fields, THIRD) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    EduUmassCsUtilsConfig_Fields_initWithId_withNSString_withInt_(e, JavaLangLong_valueOfWithLong_(30000000000LL), @"THIRD", 2);
    J2OBJC_SET_INITIALIZED(EduUmassCsUtilsConfig_Fields)
  }
}

@end

void EduUmassCsUtilsConfig_Fields_initWithId_withNSString_withInt_(EduUmassCsUtilsConfig_Fields *self, id value, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->value_, value);
}

IOSObjectArray *EduUmassCsUtilsConfig_Fields_values() {
  EduUmassCsUtilsConfig_Fields_initialize();
  return [IOSObjectArray arrayWithObjects:EduUmassCsUtilsConfig_Fields_values_ count:3 type:EduUmassCsUtilsConfig_Fields_class_()];
}

EduUmassCsUtilsConfig_Fields *EduUmassCsUtilsConfig_Fields_valueOfWithNSString_(NSString *name) {
  EduUmassCsUtilsConfig_Fields_initialize();
  for (int i = 0; i < 3; i++) {
    EduUmassCsUtilsConfig_Fields *e = EduUmassCsUtilsConfig_Fields_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EduUmassCsUtilsConfig_Fields *EduUmassCsUtilsConfig_Fields_fromOrdinal(NSUInteger ordinal) {
  EduUmassCsUtilsConfig_Fields_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return EduUmassCsUtilsConfig_Fields_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsUtilsConfig_Fields)

J2OBJC_INITIALIZED_DEFN(EduUmassCsUtilsConfig_OptionFields)

EduUmassCsUtilsConfig_OptionFields *EduUmassCsUtilsConfig_OptionFields_values_[4];

@implementation EduUmassCsUtilsConfig_OptionFields

- (NSString *)getOptionName {
  return self->optionName_;
}

- (id)getDefaultValue {
  return self->defaultValue_;
}

- (NSString *)getArgName {
  return self->argName_;
}

- (jboolean)hasArg {
  return self->hasArg_;
}

- (NSString *)getDescriptio {
  return self->description__;
}

+ (IOSObjectArray *)values {
  return EduUmassCsUtilsConfig_OptionFields_values();
}

+ (EduUmassCsUtilsConfig_OptionFields *)valueOfWithNSString:(NSString *)name {
  return EduUmassCsUtilsConfig_OptionFields_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LEduUmassCsUtilsConfig_OptionFields;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduUmassCsUtilsConfig_OptionFields;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getOptionName);
  methods[1].selector = @selector(getDefaultValue);
  methods[2].selector = @selector(getArgName);
  methods[3].selector = @selector(hasArg);
  methods[4].selector = @selector(getDescriptio);
  methods[5].selector = @selector(values);
  methods[6].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FIRST", "LEduUmassCsUtilsConfig_OptionFields;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "SECOND", "LEduUmassCsUtilsConfig_OptionFields;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "THIRD", "LEduUmassCsUtilsConfig_OptionFields;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "NINTH", "LEduUmassCsUtilsConfig_OptionFields;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "defaultValue_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "optionName_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "hasArg_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "description__", "LNSString;", .constantValue.asLong = 0, 0x10, 6, -1, -1, -1 },
    { "argName_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "withValueSeparator_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EduUmassCsUtilsConfig_OptionFields, FIRST), &JreEnum(EduUmassCsUtilsConfig_OptionFields, SECOND), &JreEnum(EduUmassCsUtilsConfig_OptionFields, THIRD), &JreEnum(EduUmassCsUtilsConfig_OptionFields, NINTH), "description", "LEduUmassCsUtilsConfig;", "Ljava/lang/Enum<Ledu/umass/cs/utils/Config$OptionFields;>;Ledu/umass/cs/utils/Config$CLIOption;" };
  static const J2ObjcClassInfo _EduUmassCsUtilsConfig_OptionFields = { "OptionFields", "edu.umass.cs.utils", ptrTable, methods, fields, 7, 0x4018, 7, 10, 7, -1, -1, 8, -1 };
  return &_EduUmassCsUtilsConfig_OptionFields;
}

+ (void)initialize {
  if (self == [EduUmassCsUtilsConfig_OptionFields class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 4 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(EduUmassCsUtilsConfig_OptionFields, FIRST) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withInt_(e, JavaLangInteger_valueOfWithInt_(23), @"FIRST", 0);
    (JreEnum(EduUmassCsUtilsConfig_OptionFields, SECOND) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withInt_(e, JreLoadStatic(JavaLangBoolean, TRUE), @"secondFlag", true, @"a flag that determines blah", @"SECOND", 1);
    (JreEnum(EduUmassCsUtilsConfig_OptionFields, THIRD) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withNSString_withInt_(e, @"THREE", @"thirdOption", false, @"the third rock", @"file", @"THIRD", 2);
    (JreEnum(EduUmassCsUtilsConfig_OptionFields, NINTH) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withBoolean_withNSString_withInt_(e, @"9", @"ninthOption", false, @"ninth option used for all else", @"file", true, @"NINTH", 3);
    J2OBJC_SET_INITIALIZED(EduUmassCsUtilsConfig_OptionFields)
  }
}

@end

void EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withInt_(EduUmassCsUtilsConfig_OptionFields *self, id defaultValue, NSString *__name, jint __ordinal) {
  EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withNSString_withInt_(self, defaultValue, nil, false, nil, nil, __name, __ordinal);
}

void EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withInt_(EduUmassCsUtilsConfig_OptionFields *self, id defaultValue, NSString *optionName, jboolean hasArg, NSString *description_, NSString *__name, jint __ordinal) {
  EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withNSString_withInt_(self, defaultValue, optionName, hasArg, description_, nil, __name, __ordinal);
}

void EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withNSString_withInt_(EduUmassCsUtilsConfig_OptionFields *self, id defaultValue, NSString *optionName, jboolean hasArg, NSString *description_, NSString *argName, NSString *__name, jint __ordinal) {
  EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withBoolean_withNSString_withInt_(self, defaultValue, optionName, hasArg, description_, argName, false, __name, __ordinal);
}

void EduUmassCsUtilsConfig_OptionFields_initWithId_withNSString_withBoolean_withNSString_withNSString_withBoolean_withNSString_withInt_(EduUmassCsUtilsConfig_OptionFields *self, id defaultValue, NSString *optionName, jboolean hasArg, NSString *description_, NSString *argName, jboolean withValueSeparator, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->defaultValue_, defaultValue);
  JreStrongAssign(&self->optionName_, optionName);
  self->hasArg_ = hasArg;
  JreStrongAssign(&self->description__, description_);
  JreStrongAssign(&self->argName_, argName);
  self->withValueSeparator_ = withValueSeparator;
}

IOSObjectArray *EduUmassCsUtilsConfig_OptionFields_values() {
  EduUmassCsUtilsConfig_OptionFields_initialize();
  return [IOSObjectArray arrayWithObjects:EduUmassCsUtilsConfig_OptionFields_values_ count:4 type:EduUmassCsUtilsConfig_OptionFields_class_()];
}

EduUmassCsUtilsConfig_OptionFields *EduUmassCsUtilsConfig_OptionFields_valueOfWithNSString_(NSString *name) {
  EduUmassCsUtilsConfig_OptionFields_initialize();
  for (int i = 0; i < 4; i++) {
    EduUmassCsUtilsConfig_OptionFields *e = EduUmassCsUtilsConfig_OptionFields_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EduUmassCsUtilsConfig_OptionFields *EduUmassCsUtilsConfig_OptionFields_fromOrdinal(NSUInteger ordinal) {
  EduUmassCsUtilsConfig_OptionFields_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return EduUmassCsUtilsConfig_OptionFields_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsUtilsConfig_OptionFields)
