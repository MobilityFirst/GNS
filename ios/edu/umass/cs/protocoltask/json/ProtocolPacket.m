//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/protocoltask/json/ProtocolPacket.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/nio/interfaces/Stringifiable.h"
#include "edu/umass/cs/protocoltask/json/ProtocolPacket.h"
#include "java/io/PrintStream.h"
#include "java/lang/Enum.h"
#include "java/lang/Error.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "org/json/JSONException.h"
#include "org/json/JSONObject.h"

@interface EduUmassCsProtocoltaskJsonProtocolPacket () {
 @public
  id sender_;
  id initiator_;
  NSString *key_;
}

@end

J2OBJC_FIELD_SETTER(EduUmassCsProtocoltaskJsonProtocolPacket, sender_, id)
J2OBJC_FIELD_SETTER(EduUmassCsProtocoltaskJsonProtocolPacket, initiator_, id)
J2OBJC_FIELD_SETTER(EduUmassCsProtocoltaskJsonProtocolPacket, key_, NSString *)

__attribute__((unused)) static void EduUmassCsProtocoltaskJsonProtocolPacket_Keys_initWithNSString_withInt_(EduUmassCsProtocoltaskJsonProtocolPacket_Keys *self, NSString *__name, jint __ordinal);

@implementation EduUmassCsProtocoltaskJsonProtocolPacket

- (instancetype)initWithId:(id)initiator {
  EduUmassCsProtocoltaskJsonProtocolPacket_initWithId_(self, initiator);
  return self;
}

- (instancetype)initWithEduUmassCsProtocoltaskJsonProtocolPacket:(EduUmassCsProtocoltaskJsonProtocolPacket *)pkt {
  EduUmassCsProtocoltaskJsonProtocolPacket_initWithEduUmassCsProtocoltaskJsonProtocolPacket_(self, pkt);
  return self;
}

- (instancetype)initWithOrgJsonJSONObject:(OrgJsonJSONObject *)json
 withEduUmassCsNioInterfacesStringifiable:(id<EduUmassCsNioInterfacesStringifiable>)unstringer {
  EduUmassCsProtocoltaskJsonProtocolPacket_initWithOrgJsonJSONObject_withEduUmassCsNioInterfacesStringifiable_(self, json, unstringer);
  return self;
}

- (instancetype)initWithOrgJsonJSONObject:(OrgJsonJSONObject *)json {
  EduUmassCsProtocoltaskJsonProtocolPacket_initWithOrgJsonJSONObject_(self, json);
  return self;
}

- (id)getSender {
  return self->sender_;
}

- (void)setSenderWithId:(id)id_ {
  JreStrongAssign(&self->sender_, id_);
}

- (id)getInitiator {
  return self->initiator_;
}

- (id)flipWithId:(id)rcvr {
  id prevSender = self->sender_;
  JreStrongAssign(&self->sender_, rcvr);
  return prevSender;
}

- (id)getType {
  return self->type_;
}

- (void)setTypeWithId:(id)type {
  JreStrongAssign(&self->type_, type);
}

- (OrgJsonJSONObject *)toJSONObjectImpl {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getPacketTypeWithOrgJsonJSONObject:(OrgJsonJSONObject *)json {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)putPacketTypeWithOrgJsonJSONObject:(OrgJsonJSONObject *)json
                                    withId:(id)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (OrgJsonJSONObject *)toJSONObject {
  OrgJsonJSONObject *json = [self toJSONObjectImpl];
  [self putPacketTypeWithOrgJsonJSONObject:json withId:[self getType]];
  [((OrgJsonJSONObject *) nil_chk(json)) putOptWithNSString:[((EduUmassCsProtocoltaskJsonProtocolPacket_Keys *) nil_chk(JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER))) description] withId:self->sender_];
  [json putOptWithNSString:[((EduUmassCsProtocoltaskJsonProtocolPacket_Keys *) nil_chk(JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, INITIATOR))) description] withId:self->initiator_];
  [json putOptWithNSString:[((EduUmassCsProtocoltaskJsonProtocolPacket_Keys *) nil_chk(JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, KEY))) description] withId:self->key_];
  return json;
}

- (NSString *)description {
  @try {
    return [((OrgJsonJSONObject *) nil_chk([self toJSONObject])) description];
  }
  @catch (OrgJsonJSONException *e) {
    [((OrgJsonJSONException *) nil_chk(e)) printStackTrace];
  }
  return [super description];
}

- (NSString *)getKey {
  return key_;
}

- (void)setKeyWithId:(NSString *)key {
  JreStrongAssign(&self->key_, key);
}

- (id)getMessage {
  return self;
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduUmassCsProtocoltaskJsonProtocolPacket_mainWithNSStringArray_(args);
}

- (void)dealloc {
  RELEASE_(type_);
  RELEASE_(sender_);
  RELEASE_(initiator_);
  RELEASE_(key_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, 5, 6, -1, -1 },
    { NULL, NULL, 0x4, -1, 7, 5, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "V", 0x4, 9, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "LNSObject;", 0x4, 10, 0, -1, 11, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 12, -1, -1 },
    { NULL, "V", 0x1, 13, 0, -1, 14, -1, -1 },
    { NULL, "LOrgJsonJSONObject;", 0x401, -1, -1, 5, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 15, 7, 5, 16, -1, -1 },
    { NULL, "V", 0x401, 17, 18, 5, 19, -1, -1 },
    { NULL, "LOrgJsonJSONObject;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 20, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 23, 24, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  methods[1].selector = @selector(initWithEduUmassCsProtocoltaskJsonProtocolPacket:);
  methods[2].selector = @selector(initWithOrgJsonJSONObject:withEduUmassCsNioInterfacesStringifiable:);
  methods[3].selector = @selector(initWithOrgJsonJSONObject:);
  methods[4].selector = @selector(getSender);
  methods[5].selector = @selector(setSenderWithId:);
  methods[6].selector = @selector(getInitiator);
  methods[7].selector = @selector(flipWithId:);
  methods[8].selector = @selector(getType);
  methods[9].selector = @selector(setTypeWithId:);
  methods[10].selector = @selector(toJSONObjectImpl);
  methods[11].selector = @selector(getPacketTypeWithOrgJsonJSONObject:);
  methods[12].selector = @selector(putPacketTypeWithOrgJsonJSONObject:withId:);
  methods[13].selector = @selector(toJSONObject);
  methods[14].selector = @selector(description);
  methods[15].selector = @selector(getKey);
  methods[16].selector = @selector(setKeyWithId:);
  methods[17].selector = @selector(getMessage);
  methods[18].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "type_", "LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, 25, -1 },
    { "sender_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, 26, -1 },
    { "initiator_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, 26, -1 },
    { "key_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "(TNodeIDType;)V", "LEduUmassCsProtocoltaskJsonProtocolPacket;", "(Ledu/umass/cs/protocoltask/json/ProtocolPacket<TNodeIDType;TEventType;>;)V", "LOrgJsonJSONObject;LEduUmassCsNioInterfacesStringifiable;", "LOrgJsonJSONException;", "(Lorg/json/JSONObject;Ledu/umass/cs/nio/interfaces/Stringifiable<TNodeIDType;>;)V", "LOrgJsonJSONObject;", "()TNodeIDType;", "setSender", "flip", "(TNodeIDType;)TNodeIDType;", "()TEventType;", "setType", "(TEventType;)V", "getPacketType", "(Lorg/json/JSONObject;)TEventType;", "putPacketType", "LOrgJsonJSONObject;LNSObject;", "(Lorg/json/JSONObject;TEventType;)V", "toString", "setKey", "LNSString;", "main", "[LNSString;", "TEventType;", "TNodeIDType;", "LEduUmassCsProtocoltaskJsonProtocolPacket_Keys;", "<NodeIDType:Ljava/lang/Object;EventType:Ljava/lang/Object;>Ljava/lang/Object;Ledu/umass/cs/protocoltask/ThresholdProtocolEvent<TNodeIDType;TEventType;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduUmassCsProtocoltaskJsonProtocolPacket = { "ProtocolPacket", "edu.umass.cs.protocoltask.json", ptrTable, methods, fields, 7, 0x401, 19, 4, -1, 27, -1, 28, -1 };
  return &_EduUmassCsProtocoltaskJsonProtocolPacket;
}

@end

void EduUmassCsProtocoltaskJsonProtocolPacket_initWithId_(EduUmassCsProtocoltaskJsonProtocolPacket *self, id initiator) {
  NSObject_init(self);
  JreStrongAssign(&self->sender_, nil);
  JreStrongAssign(&self->initiator_, nil);
  JreStrongAssign(&self->key_, nil);
  JreStrongAssign(&self->sender_, initiator);
  JreStrongAssign(&self->initiator_, initiator);
}

void EduUmassCsProtocoltaskJsonProtocolPacket_initWithEduUmassCsProtocoltaskJsonProtocolPacket_(EduUmassCsProtocoltaskJsonProtocolPacket *self, EduUmassCsProtocoltaskJsonProtocolPacket *pkt) {
  NSObject_init(self);
  JreStrongAssign(&self->sender_, nil);
  JreStrongAssign(&self->initiator_, nil);
  JreStrongAssign(&self->key_, nil);
  JreStrongAssign(&self->sender_, ((EduUmassCsProtocoltaskJsonProtocolPacket *) nil_chk(pkt))->sender_);
  JreStrongAssign(&self->initiator_, pkt->initiator_);
}

void EduUmassCsProtocoltaskJsonProtocolPacket_initWithOrgJsonJSONObject_withEduUmassCsNioInterfacesStringifiable_(EduUmassCsProtocoltaskJsonProtocolPacket *self, OrgJsonJSONObject *json, id<EduUmassCsNioInterfacesStringifiable> unstringer) {
  NSObject_init(self);
  JreStrongAssign(&self->sender_, nil);
  JreStrongAssign(&self->initiator_, nil);
  JreStrongAssign(&self->key_, nil);
  JreStrongAssign(&self->type_, [self getPacketTypeWithOrgJsonJSONObject:json]);
  @try {
    JreAssert(((unstringer != nil)), (@"edu/umass/cs/protocoltask/json/ProtocolPacket.java:38 condition failed: assert(unstringer!=null);"));
    JreAssert(((![((OrgJsonJSONObject *) nil_chk(json)) hasWithNSString:[((EduUmassCsProtocoltaskJsonProtocolPacket_Keys *) nil_chk(JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER))) description]] || ([json getWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER) description]] != nil && [((id<EduUmassCsNioInterfacesStringifiable>) nil_chk(unstringer)) valueOfWithNSString:[json getStringWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER) description]]] != nil))), (@"edu/umass/cs/protocoltask/json/ProtocolPacket.java:39 condition failed: assert(!json.has(Keys.SENDER.toString()) || (json.get(Keys.SENDER.toString())!=null &&\n\t\t\t\tunstringer.valueOf(json.getString(Keys.SENDER.toString()))!=null));"));
  }
  @catch (JavaLangError *e) {
    [((JavaLangError *) nil_chk(e)) printStackTrace];
  }
  if ([json hasWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER) description]]) {
    JreAssert((((([nil_chk([json getWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER) description]]) description])) != nil)), (@"edu/umass/cs/protocoltask/json/ProtocolPacket.java:45 condition failed: assert(\n\t\t\t\t((json.get(Keys.SENDER.toString()).toString())) != null);"));
    JreAssert((([((id<EduUmassCsNioInterfacesStringifiable>) nil_chk(unstringer)) valueOfWithNSString:([nil_chk([json getWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER) description]]) description])] != nil)), (json));
  }
  JreStrongAssign(&self->sender_, ([json hasWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER) description]] ? [((id<EduUmassCsNioInterfacesStringifiable>) nil_chk(unstringer)) valueOfWithNSString:[nil_chk(([json getWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER) description]])) description]] : nil));
  JreStrongAssign(&self->initiator_, ([json hasWithNSString:[((EduUmassCsProtocoltaskJsonProtocolPacket_Keys *) nil_chk(JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, INITIATOR))) description]] ? [((id<EduUmassCsNioInterfacesStringifiable>) nil_chk(unstringer)) valueOfWithNSString:[nil_chk(([json getWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, INITIATOR) description]])) description]] : nil));
  JreStrongAssign(&self->key_, ([json hasWithNSString:[((EduUmassCsProtocoltaskJsonProtocolPacket_Keys *) nil_chk(JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, KEY))) description]] ? [json getStringWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, KEY) description]] : nil));
}

void EduUmassCsProtocoltaskJsonProtocolPacket_initWithOrgJsonJSONObject_(EduUmassCsProtocoltaskJsonProtocolPacket *self, OrgJsonJSONObject *json) {
  NSObject_init(self);
  JreStrongAssign(&self->sender_, nil);
  JreStrongAssign(&self->initiator_, nil);
  JreStrongAssign(&self->key_, nil);
  JreStrongAssign(&self->type_, [self getPacketTypeWithOrgJsonJSONObject:json]);
  JreStrongAssign(&self->sender_, ([((OrgJsonJSONObject *) nil_chk(json)) hasWithNSString:[((EduUmassCsProtocoltaskJsonProtocolPacket_Keys *) nil_chk(JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER))) description]] ? ([json getWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER) description]]) : nil));
  JreStrongAssign(&self->initiator_, ([json hasWithNSString:[((EduUmassCsProtocoltaskJsonProtocolPacket_Keys *) nil_chk(JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, INITIATOR))) description]] ? ([json getWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, INITIATOR) description]]) : nil));
  JreStrongAssign(&self->key_, ([json hasWithNSString:[((EduUmassCsProtocoltaskJsonProtocolPacket_Keys *) nil_chk(JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, KEY))) description]] ? [json getStringWithNSString:[JreLoadEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, KEY) description]] : nil));
}

void EduUmassCsProtocoltaskJsonProtocolPacket_mainWithNSStringArray_(IOSObjectArray *args) {
  EduUmassCsProtocoltaskJsonProtocolPacket_initialize();
  OrgJsonJSONObject *json = create_OrgJsonJSONObject_init();
  JavaLangInteger *id_ = JavaLangInteger_valueOfWithInt_(3);
  NSString *ID = @"ID";
  @try {
    [json putWithNSString:ID withId:id_];
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:(JavaLangInteger *) cast_chk([json getWithNSString:ID], [JavaLangInteger class])];
  }
  @catch (OrgJsonJSONException *je) {
    [((OrgJsonJSONException *) nil_chk(je)) printStackTrace];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsProtocoltaskJsonProtocolPacket)

J2OBJC_INITIALIZED_DEFN(EduUmassCsProtocoltaskJsonProtocolPacket_Keys)

EduUmassCsProtocoltaskJsonProtocolPacket_Keys *EduUmassCsProtocoltaskJsonProtocolPacket_Keys_values_[3];

@implementation EduUmassCsProtocoltaskJsonProtocolPacket_Keys

+ (IOSObjectArray *)values {
  return EduUmassCsProtocoltaskJsonProtocolPacket_Keys_values();
}

+ (EduUmassCsProtocoltaskJsonProtocolPacket_Keys *)valueOfWithNSString:(NSString *)name {
  return EduUmassCsProtocoltaskJsonProtocolPacket_Keys_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LEduUmassCsProtocoltaskJsonProtocolPacket_Keys;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduUmassCsProtocoltaskJsonProtocolPacket_Keys;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SENDER", "LEduUmassCsProtocoltaskJsonProtocolPacket_Keys;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "INITIATOR", "LEduUmassCsProtocoltaskJsonProtocolPacket_Keys;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "KEY", "LEduUmassCsProtocoltaskJsonProtocolPacket_Keys;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, SENDER), &JreEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, INITIATOR), &JreEnum(EduUmassCsProtocoltaskJsonProtocolPacket_Keys, KEY), "LEduUmassCsProtocoltaskJsonProtocolPacket;", "Ljava/lang/Enum<Ledu/umass/cs/protocoltask/json/ProtocolPacket$Keys;>;" };
  static const J2ObjcClassInfo _EduUmassCsProtocoltaskJsonProtocolPacket_Keys = { "Keys", "edu.umass.cs.protocoltask.json", ptrTable, methods, fields, 7, 0x4019, 2, 3, 5, -1, -1, 6, -1 };
  return &_EduUmassCsProtocoltaskJsonProtocolPacket_Keys;
}

+ (void)initialize {
  if (self == [EduUmassCsProtocoltaskJsonProtocolPacket_Keys class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"SENDER", @"INITIATOR", @"KEY",
    };
    for (jint i = 0; i < 3; i++) {
      (EduUmassCsProtocoltaskJsonProtocolPacket_Keys_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      EduUmassCsProtocoltaskJsonProtocolPacket_Keys_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(EduUmassCsProtocoltaskJsonProtocolPacket_Keys)
  }
}

@end

void EduUmassCsProtocoltaskJsonProtocolPacket_Keys_initWithNSString_withInt_(EduUmassCsProtocoltaskJsonProtocolPacket_Keys *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *EduUmassCsProtocoltaskJsonProtocolPacket_Keys_values() {
  EduUmassCsProtocoltaskJsonProtocolPacket_Keys_initialize();
  return [IOSObjectArray arrayWithObjects:EduUmassCsProtocoltaskJsonProtocolPacket_Keys_values_ count:3 type:EduUmassCsProtocoltaskJsonProtocolPacket_Keys_class_()];
}

EduUmassCsProtocoltaskJsonProtocolPacket_Keys *EduUmassCsProtocoltaskJsonProtocolPacket_Keys_valueOfWithNSString_(NSString *name) {
  EduUmassCsProtocoltaskJsonProtocolPacket_Keys_initialize();
  for (int i = 0; i < 3; i++) {
    EduUmassCsProtocoltaskJsonProtocolPacket_Keys *e = EduUmassCsProtocoltaskJsonProtocolPacket_Keys_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EduUmassCsProtocoltaskJsonProtocolPacket_Keys *EduUmassCsProtocoltaskJsonProtocolPacket_Keys_fromOrdinal(NSUInteger ordinal) {
  EduUmassCsProtocoltaskJsonProtocolPacket_Keys_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return EduUmassCsProtocoltaskJsonProtocolPacket_Keys_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsProtocoltaskJsonProtocolPacket_Keys)
