//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/nio/NIOTransport.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduUmassCsNioNIOTransport")
#ifdef RESTRICT_EduUmassCsNioNIOTransport
#define INCLUDE_ALL_EduUmassCsNioNIOTransport 0
#else
#define INCLUDE_ALL_EduUmassCsNioNIOTransport 1
#endif
#undef RESTRICT_EduUmassCsNioNIOTransport

#if !defined (EduUmassCsNioNIOTransport_) && (INCLUDE_ALL_EduUmassCsNioNIOTransport || defined(INCLUDE_EduUmassCsNioNIOTransport))
#define EduUmassCsNioNIOTransport_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

#define RESTRICT_EduUmassCsNioInterfacesHandshakeCallback 1
#define INCLUDE_EduUmassCsNioInterfacesHandshakeCallback 1
#include "edu/umass/cs/nio/interfaces/HandshakeCallback.h"

@class EduUmassCsNioSSLDataProcessingWorker_SSL_MODES;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaNetInetAddress;
@class JavaNetInetSocketAddress;
@class JavaNioByteBuffer;
@class JavaNioChannelsSelectionKey;
@class JavaUtilLoggingLogger;
@protocol EduUmassCsNioInterfacesDataProcessingWorker;
@protocol EduUmassCsNioInterfacesNodeConfig;

@interface EduUmassCsNioNIOTransport : NSObject < JavaLangRunnable, EduUmassCsNioInterfacesHandshakeCallback > {
 @public
  id myID_;
  id<EduUmassCsNioInterfacesDataProcessingWorker> worker_;
  id<EduUmassCsNioInterfacesNodeConfig> nodeConfig_;
}

#pragma mark Public

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                   withInt:(jint)port
withEduUmassCsNioInterfacesDataProcessingWorker:(id<EduUmassCsNioInterfacesDataProcessingWorker>)worker
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode;

- (instancetype)initWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)isa_
           withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nc
 withEduUmassCsNioInterfacesDataProcessingWorker:(id<EduUmassCsNioInterfacesDataProcessingWorker>)worker
                                     withBoolean:(jboolean)start
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode;

- (instancetype)initWithInt:(jint)port
withEduUmassCsNioInterfacesDataProcessingWorker:(id<EduUmassCsNioInterfacesDataProcessingWorker>)worker;

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nc
withEduUmassCsNioInterfacesDataProcessingWorker:(id<EduUmassCsNioInterfacesDataProcessingWorker>)worker;

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nc
withEduUmassCsNioInterfacesDataProcessingWorker:(id<EduUmassCsNioInterfacesDataProcessingWorker>)worker
               withBoolean:(jboolean)start
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode;

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nc
withEduUmassCsNioInterfacesDataProcessingWorker:(id<EduUmassCsNioInterfacesDataProcessingWorker>)worker
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode;

+ (jboolean)getCompression;

+ (jint)getCompressionThreshold;

- (JavaNetInetSocketAddress *)getListeningSocketAddress;

+ (JavaUtilLoggingLogger *)getLogger;

- (EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)getSSLMode;

- (void)handshakeCompleteWithJavaNioChannelsSelectionKey:(JavaNioChannelsSelectionKey *)key;

- (jboolean)isDisconnectedWithId:(id)node;

- (jboolean)isStopped;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (void)run;

- (jint)sendWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)isa_
                           withByteArray:(IOSByteArray *)data;

- (jint)sendWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)isa_
                           withByteArray:(IOSByteArray *)data
                                 withInt:(jint)batchSize;

- (jint)sendWithId:(id)id_
     withByteArray:(IOSByteArray *)data;

+ (void)setCompressionWithBoolean:(jboolean)b;

+ (void)setCompressionThresholdWithInt:(jint)t;

- (void)setMaxQueuedSendsWithInt:(jint)maxQ;

- (void)setMinInterConnectTimeWithInt:(jint)minInterConnectTime;

- (EduUmassCsNioNIOTransport *)setNameWithNSString:(NSString *)name;

+ (void)setUseSenderTaskWithBoolean:(jboolean)b;

- (void)stop;

- (NSString *)description;

#pragma mark Protected

+ (void)cleanupWithJavaNioChannelsSelectionKey:(JavaNioChannelsSelectionKey *)key;

- (JavaNetInetAddress *)getListeningAddress;

- (jint)getListeningPort;

- (JavaNetInetAddress *)getNodeAddress;

- (jint)getNodePort;

+ (jint)getPayloadLengthWithJavaNioByteBuffer:(JavaNioByteBuffer *)buf;

- (jint)getPendingSize;

- (jboolean)isStarted;

+ (jboolean)outOfRangeWithInt:(jint)length;

@end

J2OBJC_STATIC_INIT(EduUmassCsNioNIOTransport)

J2OBJC_FIELD_SETTER(EduUmassCsNioNIOTransport, myID_, id)
J2OBJC_FIELD_SETTER(EduUmassCsNioNIOTransport, worker_, id<EduUmassCsNioInterfacesDataProcessingWorker>)
J2OBJC_FIELD_SETTER(EduUmassCsNioNIOTransport, nodeConfig_, id<EduUmassCsNioInterfacesNodeConfig>)

inline jint EduUmassCsNioNIOTransport_get_MAX_QUEUED_SENDS();
#define EduUmassCsNioNIOTransport_MAX_QUEUED_SENDS 131072
J2OBJC_STATIC_FIELD_CONSTANT(EduUmassCsNioNIOTransport, MAX_QUEUED_SENDS, jint)

inline jint EduUmassCsNioNIOTransport_get_MIN_INTER_CONNECT_TIME();
#define EduUmassCsNioNIOTransport_MIN_INTER_CONNECT_TIME 5000
J2OBJC_STATIC_FIELD_CONSTANT(EduUmassCsNioNIOTransport, MIN_INTER_CONNECT_TIME, jint)

inline jint EduUmassCsNioNIOTransport_get_WRITE_BUFFER_SIZE();
#define EduUmassCsNioNIOTransport_WRITE_BUFFER_SIZE 262144
J2OBJC_STATIC_FIELD_CONSTANT(EduUmassCsNioNIOTransport, WRITE_BUFFER_SIZE, jint)

inline EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *EduUmassCsNioNIOTransport_get_DEFAULT_SSL_MODE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *EduUmassCsNioNIOTransport_DEFAULT_SSL_MODE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsNioNIOTransport, DEFAULT_SSL_MODE, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)

inline jint EduUmassCsNioNIOTransport_get_MAX_PAYLOAD_SIZE();
#define EduUmassCsNioNIOTransport_MAX_PAYLOAD_SIZE 4194304
J2OBJC_STATIC_FIELD_CONSTANT(EduUmassCsNioNIOTransport, MAX_PAYLOAD_SIZE, jint)

FOUNDATION_EXPORT JavaUtilLoggingLogger *EduUmassCsNioNIOTransport_getLogger();

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_(EduUmassCsNioNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker);

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *new_EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *create_EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker);

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *new_EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *create_EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioNIOTransport *self, JavaNetInetSocketAddress *isa_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *new_EduUmassCsNioNIOTransport_initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetSocketAddress *isa_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *create_EduUmassCsNioNIOTransport_initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetSocketAddress *isa_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *new_EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *create_EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nc, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_initWithInt_withEduUmassCsNioInterfacesDataProcessingWorker_(EduUmassCsNioNIOTransport *self, jint port, id<EduUmassCsNioInterfacesDataProcessingWorker> worker);

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *new_EduUmassCsNioNIOTransport_initWithInt_withEduUmassCsNioInterfacesDataProcessingWorker_(jint port, id<EduUmassCsNioInterfacesDataProcessingWorker> worker) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *create_EduUmassCsNioNIOTransport_initWithInt_withEduUmassCsNioInterfacesDataProcessingWorker_(jint port, id<EduUmassCsNioInterfacesDataProcessingWorker> worker);

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_initWithJavaNetInetAddress_withInt_withEduUmassCsNioInterfacesDataProcessingWorker_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioNIOTransport *self, JavaNetInetAddress *address, jint port, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *new_EduUmassCsNioNIOTransport_initWithJavaNetInetAddress_withInt_withEduUmassCsNioInterfacesDataProcessingWorker_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetAddress *address, jint port, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioNIOTransport *create_EduUmassCsNioNIOTransport_initWithJavaNetInetAddress_withInt_withEduUmassCsNioInterfacesDataProcessingWorker_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetAddress *address, jint port, id<EduUmassCsNioInterfacesDataProcessingWorker> worker, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT jint EduUmassCsNioNIOTransport_getPayloadLengthWithJavaNioByteBuffer_(JavaNioByteBuffer *buf);

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_setCompressionWithBoolean_(jboolean b);

FOUNDATION_EXPORT jboolean EduUmassCsNioNIOTransport_getCompression();

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_setCompressionThresholdWithInt_(jint t);

FOUNDATION_EXPORT jint EduUmassCsNioNIOTransport_getCompressionThreshold();

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_setUseSenderTaskWithBoolean_(jboolean b);

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_cleanupWithJavaNioChannelsSelectionKey_(JavaNioChannelsSelectionKey *key);

FOUNDATION_EXPORT jboolean EduUmassCsNioNIOTransport_outOfRangeWithInt_(jint length);

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduUmassCsNioNIOTransport)

#endif

#if !defined (EduUmassCsNioNIOTransport_AlternatingByteBuffer_) && (INCLUDE_ALL_EduUmassCsNioNIOTransport || defined(INCLUDE_EduUmassCsNioNIOTransport_AlternatingByteBuffer))
#define EduUmassCsNioNIOTransport_AlternatingByteBuffer_

@class JavaNioByteBuffer;

@interface EduUmassCsNioNIOTransport_AlternatingByteBuffer : NSObject {
 @public
  JavaNioByteBuffer *headerBuf_;
  JavaNioByteBuffer *bodyBuf_;
}

#pragma mark Package-Private

- (instancetype)init;

- (void)clear;

- (void)readHeaderWithJavaNioByteBuffer:(JavaNioByteBuffer *)incoming;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUmassCsNioNIOTransport_AlternatingByteBuffer)

J2OBJC_FIELD_SETTER(EduUmassCsNioNIOTransport_AlternatingByteBuffer, headerBuf_, JavaNioByteBuffer *)
J2OBJC_FIELD_SETTER(EduUmassCsNioNIOTransport_AlternatingByteBuffer, bodyBuf_, JavaNioByteBuffer *)

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_AlternatingByteBuffer_init(EduUmassCsNioNIOTransport_AlternatingByteBuffer *self);

FOUNDATION_EXPORT EduUmassCsNioNIOTransport_AlternatingByteBuffer *new_EduUmassCsNioNIOTransport_AlternatingByteBuffer_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioNIOTransport_AlternatingByteBuffer *create_EduUmassCsNioNIOTransport_AlternatingByteBuffer_init();

J2OBJC_TYPE_LITERAL_HEADER(EduUmassCsNioNIOTransport_AlternatingByteBuffer)

#endif

#if !defined (EduUmassCsNioNIOTransport_SenderTask_) && (INCLUDE_ALL_EduUmassCsNioNIOTransport || defined(INCLUDE_EduUmassCsNioNIOTransport_SenderTask))
#define EduUmassCsNioNIOTransport_SenderTask_

#define RESTRICT_JavaLangThread 1
#define INCLUDE_JavaLangThread 1
#include "java/lang/Thread.h"

@class EduUmassCsNioNIOTransport;
@class JavaNioChannelsSelectionKey;
@class JavaUtilConcurrentLinkedBlockingQueue;

@interface EduUmassCsNioNIOTransport_SenderTask : JavaLangThread {
 @public
  JavaUtilConcurrentLinkedBlockingQueue *selectedKeys_;
}

#pragma mark Public

- (void)close;

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithEduUmassCsNioNIOTransport:(EduUmassCsNioNIOTransport *)outer$;

- (void)addKeyWithJavaNioChannelsSelectionKey:(JavaNioChannelsSelectionKey *)key;

- (JavaNioChannelsSelectionKey *)pluckHead;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUmassCsNioNIOTransport_SenderTask)

J2OBJC_FIELD_SETTER(EduUmassCsNioNIOTransport_SenderTask, selectedKeys_, JavaUtilConcurrentLinkedBlockingQueue *)

FOUNDATION_EXPORT void EduUmassCsNioNIOTransport_SenderTask_initWithEduUmassCsNioNIOTransport_(EduUmassCsNioNIOTransport_SenderTask *self, EduUmassCsNioNIOTransport *outer$);

FOUNDATION_EXPORT EduUmassCsNioNIOTransport_SenderTask *new_EduUmassCsNioNIOTransport_SenderTask_initWithEduUmassCsNioNIOTransport_(EduUmassCsNioNIOTransport *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioNIOTransport_SenderTask *create_EduUmassCsNioNIOTransport_SenderTask_initWithEduUmassCsNioNIOTransport_(EduUmassCsNioNIOTransport *outer$);

J2OBJC_TYPE_LITERAL_HEADER(EduUmassCsNioNIOTransport_SenderTask)

#endif

#pragma pop_macro("INCLUDE_ALL_EduUmassCsNioNIOTransport")
