//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/nio/MessageNIOTransport.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduUmassCsNioMessageNIOTransport")
#ifdef RESTRICT_EduUmassCsNioMessageNIOTransport
#define INCLUDE_ALL_EduUmassCsNioMessageNIOTransport 0
#else
#define INCLUDE_ALL_EduUmassCsNioMessageNIOTransport 1
#endif
#undef RESTRICT_EduUmassCsNioMessageNIOTransport

#if !defined (EduUmassCsNioMessageNIOTransport_) && (INCLUDE_ALL_EduUmassCsNioMessageNIOTransport || defined(INCLUDE_EduUmassCsNioMessageNIOTransport))
#define EduUmassCsNioMessageNIOTransport_

#define RESTRICT_EduUmassCsNioNIOTransport 1
#define INCLUDE_EduUmassCsNioNIOTransport 1
#include "edu/umass/cs/nio/NIOTransport.h"

#define RESTRICT_EduUmassCsNioInterfacesInterfaceNIOTransport 1
#define INCLUDE_EduUmassCsNioInterfacesInterfaceNIOTransport 1
#include "edu/umass/cs/nio/interfaces/InterfaceNIOTransport.h"

@class EduUmassCsNioAbstractPacketDemultiplexer;
@class EduUmassCsNioSSLDataProcessingWorker_SSL_MODES;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaNetInetAddress;
@class JavaNetInetSocketAddress;
@class NetMinidevJsonJSONObject;
@class OrgJsonJSONObject;
@protocol EduUmassCsNioInterfacesNodeConfig;

@interface EduUmassCsNioMessageNIOTransport : EduUmassCsNioNIOTransport < EduUmassCsNioInterfacesInterfaceNIOTransport >

#pragma mark Public

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                   withInt:(jint)port
withEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode;

- (instancetype)initWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)isa_
           withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode;

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig;

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig
withEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd
               withBoolean:(jboolean)start;

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig
withEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd
               withBoolean:(jboolean)start
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode;

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode;

- (void)addPacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd;

- (id)getMyID;

- (id<EduUmassCsNioInterfacesNodeConfig>)getNodeConfig;

+ (JavaNetInetSocketAddress *)getReceiverAddressWithByteArray:(IOSByteArray *)bytes;

+ (JavaNetInetSocketAddress *)getReceiverAddressWithOrgJsonJSONObject:(OrgJsonJSONObject *)json;

+ (JavaNetInetSocketAddress *)getReceiverAddressJSONSmartWithNetMinidevJsonJSONObject:(NetMinidevJsonJSONObject *)json;

+ (JavaNetInetSocketAddress *)getSenderAddressWithByteArray:(IOSByteArray *)bytes;

+ (JavaNetInetSocketAddress *)getSenderAddressWithOrgJsonJSONObject:(OrgJsonJSONObject *)json;

+ (NSString *)getSenderAddressAsStringWithOrgJsonJSONObject:(OrgJsonJSONObject *)json;

+ (JavaNetInetSocketAddress *)getSenderAddressJSONSmartWithNetMinidevJsonJSONObject:(NetMinidevJsonJSONObject *)json;

+ (JavaNetInetAddress *)getSenderInetAddressWithOrgJsonJSONObject:(OrgJsonJSONObject *)json;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (void)precedePacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd;

- (jint)sendToAddressWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)isa_
                                    withByteArray:(IOSByteArray *)msg;

- (jint)sendToAddressWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)isa_
                                           withId:(id)msg;

- (jint)sendToIDWithId:(id)id_
         withByteArray:(IOSByteArray *)msg;

- (jint)sendToIDWithId:(id)id_
                withId:(id)msg;

- (EduUmassCsNioMessageNIOTransport *)setNameWithNSString:(NSString *)name;

- (void)stop;

#pragma mark Protected

- (jint)sendToIDInternalWithId:(id)destID
                        withId:(id)msg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUmassCsNioMessageNIOTransport)

inline NSString *EduUmassCsNioMessageNIOTransport_get_SNDR_IP_FIELD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduUmassCsNioMessageNIOTransport_SNDR_IP_FIELD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsNioMessageNIOTransport, SNDR_IP_FIELD, NSString *)

inline NSString *EduUmassCsNioMessageNIOTransport_get_SNDR_PORT_FIELD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduUmassCsNioMessageNIOTransport_SNDR_PORT_FIELD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsNioMessageNIOTransport, SNDR_PORT_FIELD, NSString *)

inline NSString *EduUmassCsNioMessageNIOTransport_get_SNDR_ADDRESS_FIELD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsNioMessageNIOTransport, SNDR_ADDRESS_FIELD, NSString *)

inline NSString *EduUmassCsNioMessageNIOTransport_get_RCVR_IP_FIELD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduUmassCsNioMessageNIOTransport_RCVR_IP_FIELD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsNioMessageNIOTransport, RCVR_IP_FIELD, NSString *)

inline NSString *EduUmassCsNioMessageNIOTransport_get_RCVR_PORT_FIELD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduUmassCsNioMessageNIOTransport_RCVR_PORT_FIELD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsNioMessageNIOTransport, RCVR_PORT_FIELD, NSString *)

inline NSString *EduUmassCsNioMessageNIOTransport_get_RCVR_ADDRESS_FIELD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduUmassCsNioMessageNIOTransport_RCVR_ADDRESS_FIELD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsNioMessageNIOTransport, RCVR_ADDRESS_FIELD, NSString *)

inline NSString *EduUmassCsNioMessageNIOTransport_get_NIO_CHARSET_ENCODING();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduUmassCsNioMessageNIOTransport_NIO_CHARSET_ENCODING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsNioMessageNIOTransport, NIO_CHARSET_ENCODING, NSString *)

FOUNDATION_EXPORT void EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_(EduUmassCsNioMessageNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig);

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig);

FOUNDATION_EXPORT void EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioMessageNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT void EduUmassCsNioMessageNIOTransport_initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioMessageNIOTransport *self, JavaNetInetSocketAddress *isa_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetSocketAddress *isa_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetSocketAddress *isa_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT void EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_(EduUmassCsNioMessageNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start);

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start);

FOUNDATION_EXPORT void EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioMessageNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT void EduUmassCsNioMessageNIOTransport_initWithJavaNetInetAddress_withInt_withEduUmassCsNioAbstractPacketDemultiplexer_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioMessageNIOTransport *self, JavaNetInetAddress *address, jint port, EduUmassCsNioAbstractPacketDemultiplexer *pd, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithJavaNetInetAddress_withInt_withEduUmassCsNioAbstractPacketDemultiplexer_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetAddress *address, jint port, EduUmassCsNioAbstractPacketDemultiplexer *pd, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithJavaNetInetAddress_withInt_withEduUmassCsNioAbstractPacketDemultiplexer_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetAddress *address, jint port, EduUmassCsNioAbstractPacketDemultiplexer *pd, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode);

FOUNDATION_EXPORT JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getSenderAddressWithOrgJsonJSONObject_(OrgJsonJSONObject *json);

FOUNDATION_EXPORT NSString *EduUmassCsNioMessageNIOTransport_getSenderAddressAsStringWithOrgJsonJSONObject_(OrgJsonJSONObject *json);

FOUNDATION_EXPORT JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getSenderAddressWithByteArray_(IOSByteArray *bytes);

FOUNDATION_EXPORT JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getReceiverAddressWithByteArray_(IOSByteArray *bytes);

FOUNDATION_EXPORT JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getSenderAddressJSONSmartWithNetMinidevJsonJSONObject_(NetMinidevJsonJSONObject *json);

FOUNDATION_EXPORT JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getReceiverAddressWithOrgJsonJSONObject_(OrgJsonJSONObject *json);

FOUNDATION_EXPORT JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getReceiverAddressJSONSmartWithNetMinidevJsonJSONObject_(NetMinidevJsonJSONObject *json);

FOUNDATION_EXPORT JavaNetInetAddress *EduUmassCsNioMessageNIOTransport_getSenderInetAddressWithOrgJsonJSONObject_(OrgJsonJSONObject *json);

FOUNDATION_EXPORT void EduUmassCsNioMessageNIOTransport_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduUmassCsNioMessageNIOTransport)

#endif

#pragma pop_macro("INCLUDE_ALL_EduUmassCsNioMessageNIOTransport")
