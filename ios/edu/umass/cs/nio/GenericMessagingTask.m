//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/nio/GenericMessagingTask.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/nio/GenericMessagingTask.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"

@implementation EduUmassCsNioGenericMessagingTask

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduUmassCsNioGenericMessagingTask_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithId:(id)destID
                    withId:(id)pkt {
  EduUmassCsNioGenericMessagingTask_initWithId_withId_(self, destID, pkt);
  return self;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)destIDs
                               withId:(id)pkt {
  EduUmassCsNioGenericMessagingTask_initWithNSObjectArray_withId_(self, destIDs, pkt);
  return self;
}

- (instancetype)initWithId:(id)destID
         withNSObjectArray:(IOSObjectArray *)pkts {
  EduUmassCsNioGenericMessagingTask_initWithId_withNSObjectArray_(self, destID, pkts);
  return self;
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)destIDs
                    withNSObjectArray:(IOSObjectArray *)pkts {
  EduUmassCsNioGenericMessagingTask_initWithNSObjectArray_withNSObjectArray_(self, destIDs, pkts);
  return self;
}

- (jboolean)isEmpty {
  return self->msgs_ == nil || self->msgs_->size_ == 0 || self->recipients_ == nil || self->recipients_->size_ == 0;
}

+ (IOSObjectArray *)toArrayWithEduUmassCsNioGenericMessagingTask:(EduUmassCsNioGenericMessagingTask *)mtask1
                           withEduUmassCsNioGenericMessagingTask:(EduUmassCsNioGenericMessagingTask *)mtask2 {
  return EduUmassCsNioGenericMessagingTask_toArrayWithEduUmassCsNioGenericMessagingTask_withEduUmassCsNioGenericMessagingTask_(mtask1, mtask2);
}

- (IOSObjectArray *)toArray {
  IOSObjectArray *mtasks = [IOSObjectArray arrayWithLength:1 type:EduUmassCsNioGenericMessagingTask_class_()];
  IOSObjectArray_Set(mtasks, 0, self);
  return mtasks;
}

+ (jboolean)isEmptyWithEduUmassCsNioGenericMessagingTaskArray:(IOSObjectArray *)mtasks {
  return EduUmassCsNioGenericMessagingTask_isEmptyWithEduUmassCsNioGenericMessagingTaskArray_(mtasks);
}

- (NSString *)description {
  if (((IOSObjectArray *) nil_chk(msgs_))->size_ == 0) return @"NULL";
  NSString *s = @"";
  JreStrAppend(&s, "$", @" to recipients: [");
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->recipients_))->size_; i++) {
    JreStrAppend(&s, "@C", IOSObjectArray_Get(self->recipients_, i), ' ');
  }
  JreStrAppend(&s, "$", @"]; Message");
  JreStrAppend(&s, "$", (msgs_->size_ > 1) ? @"s:\n[" : @": ");
  for (jint i = 0; i < msgs_->size_; i++) {
    JreStrAppend(&s, "$", (msgs_->size_ > 1 ? @"\n    " : @""));
    if (i == 10 && msgs_->size_ > 25) {
      JreStrAppend(&s, "$IC", @".... (skipping ", (msgs_->size_ - 19), ')');
      i = msgs_->size_ - 11;
    }
    else JreStrAppend(&s, "@", IOSObjectArray_Get(msgs_, i));
  }
  if (msgs_->size_ > 1) JreStrAppend(&s, "$", @"\n]");
  return s;
}

- (void)dealloc {
  RELEASE_(recipients_);
  RELEASE_(msgs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LEduUmassCsNioGenericMessagingTask;", 0x9, 7, 8, -1, 9, -1, -1 },
    { NULL, "[LEduUmassCsNioGenericMessagingTask;", 0x1, -1, -1, -1, 10, -1, -1 },
    { NULL, "Z", 0x9, 11, 12, -1, 13, -1, -1 },
    { NULL, "LNSString;", 0x1, 14, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithId:withId:);
  methods[2].selector = @selector(initWithNSObjectArray:withId:);
  methods[3].selector = @selector(initWithId:withNSObjectArray:);
  methods[4].selector = @selector(initWithNSObjectArray:withNSObjectArray:);
  methods[5].selector = @selector(isEmpty);
  methods[6].selector = @selector(toArrayWithEduUmassCsNioGenericMessagingTask:withEduUmassCsNioGenericMessagingTask:);
  methods[7].selector = @selector(toArray);
  methods[8].selector = @selector(isEmptyWithEduUmassCsNioGenericMessagingTaskArray:);
  methods[9].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "recipients_", "[LNSObject;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "msgs_", "[LNSObject;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LNSObject;", "(TNodeIDType;TMessageType;)V", "[LNSObject;LNSObject;", "([Ljava/lang/Object;TMessageType;)V", "LNSObject;[LNSObject;", "(TNodeIDType;[Ljava/lang/Object;)V", "[LNSObject;[LNSObject;", "toArray", "LEduUmassCsNioGenericMessagingTask;LEduUmassCsNioGenericMessagingTask;", "(Ledu/umass/cs/nio/GenericMessagingTask<**>;Ledu/umass/cs/nio/GenericMessagingTask<**>;)[Ledu/umass/cs/nio/GenericMessagingTask<**>;", "()[Ledu/umass/cs/nio/GenericMessagingTask<TNodeIDType;*>;", "isEmpty", "[LEduUmassCsNioGenericMessagingTask;", "([Ledu/umass/cs/nio/GenericMessagingTask<**>;)Z", "toString", "LEduUmassCsNioGenericMessagingTask_Main;", "<NodeIDType:Ljava/lang/Object;MessageType:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _EduUmassCsNioGenericMessagingTask = { "GenericMessagingTask", "edu.umass.cs.nio", ptrTable, methods, fields, 7, 0x1, 10, 2, -1, 15, -1, 16, -1 };
  return &_EduUmassCsNioGenericMessagingTask;
}

@end

void EduUmassCsNioGenericMessagingTask_init(EduUmassCsNioGenericMessagingTask *self) {
  NSObject_init(self);
  JreStrongAssign(&self->recipients_, nil);
  JreStrongAssign(&self->msgs_, nil);
}

EduUmassCsNioGenericMessagingTask *new_EduUmassCsNioGenericMessagingTask_init() {
  J2OBJC_NEW_IMPL(EduUmassCsNioGenericMessagingTask, init)
}

EduUmassCsNioGenericMessagingTask *create_EduUmassCsNioGenericMessagingTask_init() {
  J2OBJC_CREATE_IMPL(EduUmassCsNioGenericMessagingTask, init)
}

void EduUmassCsNioGenericMessagingTask_initWithId_withId_(EduUmassCsNioGenericMessagingTask *self, id destID, id pkt) {
  NSObject_init(self);
  JreAssert(((pkt != nil)), (@"Incorrect usage: InterfaceMessagingTask should not be instantiated with no messages"));
  if (pkt == nil) @throw create_JavaLangRuntimeException_initWithNSString_(@"Incorrect usage: InterfaceMessagingTask should not be instantiated with no messages");
  JreStrongAssignAndConsume(&self->recipients_, [IOSObjectArray newArrayWithLength:1 type:NSObject_class_()]);
  IOSObjectArray_Set(self->recipients_, 0, destID);
  JreStrongAssignAndConsume(&self->msgs_, [IOSObjectArray newArrayWithLength:pkt == nil ? 0 : 1 type:NSObject_class_()]);
  if (pkt != nil) IOSObjectArray_Set(self->msgs_, 0, pkt);
}

EduUmassCsNioGenericMessagingTask *new_EduUmassCsNioGenericMessagingTask_initWithId_withId_(id destID, id pkt) {
  J2OBJC_NEW_IMPL(EduUmassCsNioGenericMessagingTask, initWithId_withId_, destID, pkt)
}

EduUmassCsNioGenericMessagingTask *create_EduUmassCsNioGenericMessagingTask_initWithId_withId_(id destID, id pkt) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioGenericMessagingTask, initWithId_withId_, destID, pkt)
}

void EduUmassCsNioGenericMessagingTask_initWithNSObjectArray_withId_(EduUmassCsNioGenericMessagingTask *self, IOSObjectArray *destIDs, id pkt) {
  NSObject_init(self);
  JreAssert(((pkt != nil && destIDs != nil)), (@"Incorrect usage: InterfaceMessagingTask should not be instantiated with null messages or destinations"));
  if (!(pkt != nil && destIDs != nil)) @throw create_JavaLangRuntimeException_initWithNSString_(@"Incorrect usage: InterfaceMessagingTask should not be instantiated with null messages or destinations");
  JreStrongAssign(&self->recipients_, destIDs);
  JreStrongAssignAndConsume(&self->msgs_, [IOSObjectArray newArrayWithLength:pkt == nil ? 0 : 1 type:NSObject_class_()]);
  if (pkt != nil) IOSObjectArray_Set(self->msgs_, 0, pkt);
}

EduUmassCsNioGenericMessagingTask *new_EduUmassCsNioGenericMessagingTask_initWithNSObjectArray_withId_(IOSObjectArray *destIDs, id pkt) {
  J2OBJC_NEW_IMPL(EduUmassCsNioGenericMessagingTask, initWithNSObjectArray_withId_, destIDs, pkt)
}

EduUmassCsNioGenericMessagingTask *create_EduUmassCsNioGenericMessagingTask_initWithNSObjectArray_withId_(IOSObjectArray *destIDs, id pkt) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioGenericMessagingTask, initWithNSObjectArray_withId_, destIDs, pkt)
}

void EduUmassCsNioGenericMessagingTask_initWithId_withNSObjectArray_(EduUmassCsNioGenericMessagingTask *self, id destID, IOSObjectArray *pkts) {
  NSObject_init(self);
  JreAssert(((pkts != nil && pkts->size_ > 0 && IOSObjectArray_Get(pkts, 0) != nil)), (@"Incorrect usage: InterfaceMessagingTask should not be instantiated with no messages"));
  if (!(pkts != nil && pkts->size_ > 0 && IOSObjectArray_Get(pkts, 0) != nil)) @throw create_JavaLangRuntimeException_initWithNSString_(@"Incorrect usage: InterfaceMessagingTask should not be instantiated with no messages");
  JreStrongAssignAndConsume(&self->recipients_, [IOSObjectArray newArrayWithLength:1 type:NSObject_class_()]);
  IOSObjectArray_Set(self->recipients_, 0, destID);
  JreStrongAssign(&self->msgs_, pkts == nil ? [IOSObjectArray arrayWithLength:0 type:NSObject_class_()] : pkts);
}

EduUmassCsNioGenericMessagingTask *new_EduUmassCsNioGenericMessagingTask_initWithId_withNSObjectArray_(id destID, IOSObjectArray *pkts) {
  J2OBJC_NEW_IMPL(EduUmassCsNioGenericMessagingTask, initWithId_withNSObjectArray_, destID, pkts)
}

EduUmassCsNioGenericMessagingTask *create_EduUmassCsNioGenericMessagingTask_initWithId_withNSObjectArray_(id destID, IOSObjectArray *pkts) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioGenericMessagingTask, initWithId_withNSObjectArray_, destID, pkts)
}

void EduUmassCsNioGenericMessagingTask_initWithNSObjectArray_withNSObjectArray_(EduUmassCsNioGenericMessagingTask *self, IOSObjectArray *destIDs, IOSObjectArray *pkts) {
  NSObject_init(self);
  JreAssert(((pkts != nil && destIDs != nil)), (@"Incorrect usage: InterfaceMessagingTask should not be instantiated with null messages or destinations"));
  if (!(pkts != nil && destIDs != nil)) @throw create_JavaLangRuntimeException_initWithNSString_(@"Incorrect usage: InterfaceMessagingTask should not be instantiated with null messages or destinations");
  {
    IOSObjectArray *a__ = pkts;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id obj = *b__++;
      JreAssert(((obj != nil)), (@"Incorrect usage: InterfaceMessagingTask should not be instantiated with null messages"));
    }
  }
  JreStrongAssign(&self->recipients_, (destIDs == nil ? [IOSObjectArray arrayWithLength:0 type:NSObject_class_()] : destIDs));
  JreStrongAssign(&self->msgs_, pkts == nil ? [IOSObjectArray arrayWithLength:0 type:NSObject_class_()] : pkts);
}

EduUmassCsNioGenericMessagingTask *new_EduUmassCsNioGenericMessagingTask_initWithNSObjectArray_withNSObjectArray_(IOSObjectArray *destIDs, IOSObjectArray *pkts) {
  J2OBJC_NEW_IMPL(EduUmassCsNioGenericMessagingTask, initWithNSObjectArray_withNSObjectArray_, destIDs, pkts)
}

EduUmassCsNioGenericMessagingTask *create_EduUmassCsNioGenericMessagingTask_initWithNSObjectArray_withNSObjectArray_(IOSObjectArray *destIDs, IOSObjectArray *pkts) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioGenericMessagingTask, initWithNSObjectArray_withNSObjectArray_, destIDs, pkts)
}

IOSObjectArray *EduUmassCsNioGenericMessagingTask_toArrayWithEduUmassCsNioGenericMessagingTask_withEduUmassCsNioGenericMessagingTask_(EduUmassCsNioGenericMessagingTask *mtask1, EduUmassCsNioGenericMessagingTask *mtask2) {
  EduUmassCsNioGenericMessagingTask_initialize();
  IOSObjectArray *mtasks = [IOSObjectArray arrayWithLength:2 type:EduUmassCsNioGenericMessagingTask_class_()];
  IOSObjectArray_Set(mtasks, 0, mtask1);
  IOSObjectArray_Set(mtasks, 1, mtask2);
  return mtasks;
}

jboolean EduUmassCsNioGenericMessagingTask_isEmptyWithEduUmassCsNioGenericMessagingTaskArray_(IOSObjectArray *mtasks) {
  EduUmassCsNioGenericMessagingTask_initialize();
  if (mtasks == nil || mtasks->size_ == 0) return true;
  jboolean empty = true;
  {
    IOSObjectArray *a__ = mtasks;
    EduUmassCsNioGenericMessagingTask * const *b__ = a__->buffer_;
    EduUmassCsNioGenericMessagingTask * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduUmassCsNioGenericMessagingTask *mtask = *b__++;
      empty = (empty && [((EduUmassCsNioGenericMessagingTask *) nil_chk(mtask)) isEmpty]);
    }
  }
  return empty;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsNioGenericMessagingTask)

@implementation EduUmassCsNioGenericMessagingTask_Main

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduUmassCsNioGenericMessagingTask_Main_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduUmassCsNioGenericMessagingTask_Main_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "main", "[LNSString;", "LEduUmassCsNioGenericMessagingTask;" };
  static const J2ObjcClassInfo _EduUmassCsNioGenericMessagingTask_Main = { "Main", "edu.umass.cs.nio", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_EduUmassCsNioGenericMessagingTask_Main;
}

@end

void EduUmassCsNioGenericMessagingTask_Main_init(EduUmassCsNioGenericMessagingTask_Main *self) {
  NSObject_init(self);
}

EduUmassCsNioGenericMessagingTask_Main *new_EduUmassCsNioGenericMessagingTask_Main_init() {
  J2OBJC_NEW_IMPL(EduUmassCsNioGenericMessagingTask_Main, init)
}

EduUmassCsNioGenericMessagingTask_Main *create_EduUmassCsNioGenericMessagingTask_Main_init() {
  J2OBJC_CREATE_IMPL(EduUmassCsNioGenericMessagingTask_Main, init)
}

void EduUmassCsNioGenericMessagingTask_Main_mainWithNSStringArray_(IOSObjectArray *args) {
  EduUmassCsNioGenericMessagingTask_Main_initialize();
  EduUmassCsNioGenericMessagingTask *mtask = create_EduUmassCsNioGenericMessagingTask_initWithId_withId_(JavaLangInteger_valueOfWithInt_(23), @"Hello");
  JreAssert(((((IOSObjectArray *) nil_chk(mtask->msgs_))->size_ == 1 && [nil_chk(IOSObjectArray_Get(mtask->msgs_, 0)) isEqual:@"Hello"])), (@"edu/umass/cs/nio/GenericMessagingTask.java:131 condition failed: assert (mtask.msgs.length == 1 && mtask.msgs[0].equals(\"Hello\"));"));
  IOSObjectArray *nodes = [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(23), JavaLangInteger_valueOfWithInt_(45), JavaLangInteger_valueOfWithInt_(66) } count:3 type:JavaLangInteger_class_()];
  EduUmassCsNioGenericMessagingTask *mtask1 = create_EduUmassCsNioGenericMessagingTask_initWithNSObjectArray_withId_(nodes, @"World");
  JreAssert(((mtask1->msgs_->size_ == 1 && [nil_chk(IOSObjectArray_Get(mtask1->msgs_, 0)) isEqual:@"World"])), (@"edu/umass/cs/nio/GenericMessagingTask.java:135 condition failed: assert (mtask1.msgs.length == 1 && mtask1.msgs[0].equals(\"World\"));"));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsNioGenericMessagingTask_Main)
