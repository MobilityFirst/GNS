//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/nio/AbstractNIOSSL.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduUmassCsNioAbstractNIOSSL")
#ifdef RESTRICT_EduUmassCsNioAbstractNIOSSL
#define INCLUDE_ALL_EduUmassCsNioAbstractNIOSSL 0
#else
#define INCLUDE_ALL_EduUmassCsNioAbstractNIOSSL 1
#endif
#undef RESTRICT_EduUmassCsNioAbstractNIOSSL

#if !defined (EduUmassCsNioAbstractNIOSSL_) && (INCLUDE_ALL_EduUmassCsNioAbstractNIOSSL || defined(INCLUDE_EduUmassCsNioAbstractNIOSSL))
#define EduUmassCsNioAbstractNIOSSL_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class JavaLangException;
@class JavaNioByteBuffer;
@class JavaNioChannelsSelectionKey;
@class JavaxNetSslSSLEngine;
@protocol JavaUtilConcurrentExecutor;

@interface EduUmassCsNioAbstractNIOSSL : NSObject < JavaLangRunnable > {
 @public
  JavaNioByteBuffer *wrapSrc_, *unwrapSrc_;
  JavaNioByteBuffer *wrapDst_, *unwrapDst_;
  JavaxNetSslSSLEngine *engine_;
  id<JavaUtilConcurrentExecutor> taskWorkers_;
  NSString *myID_;
  JavaNioChannelsSelectionKey *key_;
}

#pragma mark Public

- (instancetype)initWithJavaNioChannelsSelectionKey:(JavaNioChannelsSelectionKey *)key
                           withJavaxNetSslSSLEngine:(JavaxNetSslSSLEngine *)engine
                     withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)taskWorkers
                                       withNSString:(NSString *)myID;

- (void)nioSendWithJavaNioByteBuffer:(JavaNioByteBuffer *)unencrypted;

- (void)notifyReceivedWithJavaNioByteBuffer:(JavaNioByteBuffer *)encrypted;

- (void)onClosed;

- (void)onHandshakeFailureWithJavaLangException:(JavaLangException *)cause;

- (void)onHandshakeSuccess;

- (void)onInboundDataWithJavaNioByteBuffer:(JavaNioByteBuffer *)decrypted;

- (void)onOutboundDataWithJavaNioByteBuffer:(JavaNioByteBuffer *)encrypted;

- (void)poke;

- (void)run;

- (NSString *)description;

#pragma mark Protected

- (void)clean;

@end

J2OBJC_STATIC_INIT(EduUmassCsNioAbstractNIOSSL)

J2OBJC_FIELD_SETTER(EduUmassCsNioAbstractNIOSSL, wrapSrc_, JavaNioByteBuffer *)
J2OBJC_FIELD_SETTER(EduUmassCsNioAbstractNIOSSL, unwrapSrc_, JavaNioByteBuffer *)
J2OBJC_FIELD_SETTER(EduUmassCsNioAbstractNIOSSL, wrapDst_, JavaNioByteBuffer *)
J2OBJC_FIELD_SETTER(EduUmassCsNioAbstractNIOSSL, unwrapDst_, JavaNioByteBuffer *)
J2OBJC_FIELD_SETTER(EduUmassCsNioAbstractNIOSSL, engine_, JavaxNetSslSSLEngine *)
J2OBJC_FIELD_SETTER(EduUmassCsNioAbstractNIOSSL, taskWorkers_, id<JavaUtilConcurrentExecutor>)
J2OBJC_FIELD_SETTER(EduUmassCsNioAbstractNIOSSL, myID_, NSString *)
J2OBJC_FIELD_SETTER(EduUmassCsNioAbstractNIOSSL, key_, JavaNioChannelsSelectionKey *)

FOUNDATION_EXPORT void EduUmassCsNioAbstractNIOSSL_initWithJavaNioChannelsSelectionKey_withJavaxNetSslSSLEngine_withJavaUtilConcurrentExecutor_withNSString_(EduUmassCsNioAbstractNIOSSL *self, JavaNioChannelsSelectionKey *key, JavaxNetSslSSLEngine *engine, id<JavaUtilConcurrentExecutor> taskWorkers, NSString *myID);

J2OBJC_TYPE_LITERAL_HEADER(EduUmassCsNioAbstractNIOSSL)

#endif

#pragma pop_macro("INCLUDE_ALL_EduUmassCsNioAbstractNIOSSL")
