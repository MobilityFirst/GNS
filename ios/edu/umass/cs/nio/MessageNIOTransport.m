//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/nio/MessageNIOTransport.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/nio/AbstractPacketDemultiplexer.h"
#include "edu/umass/cs/nio/JSONDelayEmulator.h"
#include "edu/umass/cs/nio/JSONMessenger.h"
#include "edu/umass/cs/nio/MessageExtractor.h"
#include "edu/umass/cs/nio/MessageNIOTransport.h"
#include "edu/umass/cs/nio/NIOTransport.h"
#include "edu/umass/cs/nio/SSLDataProcessingWorker.h"
#include "edu/umass/cs/nio/interfaces/Byteable.h"
#include "edu/umass/cs/nio/interfaces/DataProcessingWorker.h"
#include "edu/umass/cs/nio/interfaces/InterfaceMessageExtractor.h"
#include "edu/umass/cs/nio/interfaces/NodeConfig.h"
#include "edu/umass/cs/nio/nioutils/NIOHeader.h"
#include "edu/umass/cs/nio/nioutils/NIOInstrumenter.h"
#include "edu/umass/cs/nio/nioutils/PacketDemultiplexerDefault.h"
#include "edu/umass/cs/nio/nioutils/SampleNodeConfig.h"
#include "edu/umass/cs/utils/Util.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/Short.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/net/InetAddress.h"
#include "java/net/InetSocketAddress.h"
#include "java/net/UnknownHostException.h"
#include "java/nio/ByteBuffer.h"
#include "java/util/TimerTask.h"
#include "java/util/concurrent/Executors.h"
#include "java/util/concurrent/ScheduledExecutorService.h"
#include "java/util/concurrent/ScheduledFuture.h"
#include "java/util/concurrent/TimeUnit.h"
#include "net/minidev/json/JSONObject.h"
#include "org/json/JSONException.h"
#include "org/json/JSONObject.h"

@interface EduUmassCsNioMessageNIOTransport ()

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig
withEduUmassCsNioMessageExtractor:(EduUmassCsNioMessageExtractor *)worker;

- (id)putEmulatedDelaysWithId:(id)id_
                       withId:(id)msg;

- (jint)sendLocalWithId:(id)message;

- (jint)sendUnderlyingWithId:(id)id_
               withByteArray:(IOSByteArray *)data;

- (jint)sendUnderlyingWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)isa_
                                     withByteArray:(IOSByteArray *)data;

+ (OrgJsonJSONObject *)JSONifyWithInt:(jint)msgNum
                         withNSString:(NSString *)s;

@end

__attribute__((unused)) static void EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_(EduUmassCsNioMessageNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioMessageExtractor *worker);

__attribute__((unused)) static EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioMessageExtractor *worker) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioMessageExtractor *worker);

__attribute__((unused)) static id EduUmassCsNioMessageNIOTransport_putEmulatedDelaysWithId_withId_(EduUmassCsNioMessageNIOTransport *self, id id_, id msg);

__attribute__((unused)) static jint EduUmassCsNioMessageNIOTransport_sendLocalWithId_(EduUmassCsNioMessageNIOTransport *self, id message);

__attribute__((unused)) static jint EduUmassCsNioMessageNIOTransport_sendUnderlyingWithId_withByteArray_(EduUmassCsNioMessageNIOTransport *self, id id_, IOSByteArray *data);

__attribute__((unused)) static jint EduUmassCsNioMessageNIOTransport_sendUnderlyingWithJavaNetInetSocketAddress_withByteArray_(EduUmassCsNioMessageNIOTransport *self, JavaNetInetSocketAddress *isa_, IOSByteArray *data);

__attribute__((unused)) static OrgJsonJSONObject *EduUmassCsNioMessageNIOTransport_JSONifyWithInt_withNSString_(jint msgNum, NSString *s);

__attribute__((unused)) static IOSObjectArray *EduUmassCsNioMessageNIOTransport__Annotations$0();

__attribute__((unused)) static IOSObjectArray *EduUmassCsNioMessageNIOTransport__Annotations$1();

__attribute__((unused)) static IOSObjectArray *EduUmassCsNioMessageNIOTransport__Annotations$2();

__attribute__((unused)) static IOSObjectArray *EduUmassCsNioMessageNIOTransport__Annotations$3();

@interface EduUmassCsNioMessageNIOTransport_1TX : JavaUtilTimerTask {
 @public
  EduUmassCsNioMessageNIOTransport *sndr_;
  jint rcvr_;
  jint msgNum_;
}

- (instancetype)initWithInt:(jint)i
                    withInt:(jint)id_
withEduUmassCsNioMessageNIOTransportArray:(IOSObjectArray *)n
                    withInt:(jint)m;

- (instancetype)initWithEduUmassCsNioMessageNIOTransport:(EduUmassCsNioMessageNIOTransport *)niot
                                                 withInt:(jint)id_
                                                 withInt:(jint)m;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUmassCsNioMessageNIOTransport_1TX)

J2OBJC_FIELD_SETTER(EduUmassCsNioMessageNIOTransport_1TX, sndr_, EduUmassCsNioMessageNIOTransport *)

__attribute__((unused)) static void EduUmassCsNioMessageNIOTransport_1TX_initWithInt_withInt_withEduUmassCsNioMessageNIOTransportArray_withInt_(EduUmassCsNioMessageNIOTransport_1TX *self, jint i, jint id_, IOSObjectArray *n, jint m);

__attribute__((unused)) static EduUmassCsNioMessageNIOTransport_1TX *new_EduUmassCsNioMessageNIOTransport_1TX_initWithInt_withInt_withEduUmassCsNioMessageNIOTransportArray_withInt_(jint i, jint id_, IOSObjectArray *n, jint m) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduUmassCsNioMessageNIOTransport_1TX *create_EduUmassCsNioMessageNIOTransport_1TX_initWithInt_withInt_withEduUmassCsNioMessageNIOTransportArray_withInt_(jint i, jint id_, IOSObjectArray *n, jint m);

__attribute__((unused)) static void EduUmassCsNioMessageNIOTransport_1TX_initWithEduUmassCsNioMessageNIOTransport_withInt_withInt_(EduUmassCsNioMessageNIOTransport_1TX *self, EduUmassCsNioMessageNIOTransport *niot, jint id_, jint m);

__attribute__((unused)) static EduUmassCsNioMessageNIOTransport_1TX *new_EduUmassCsNioMessageNIOTransport_1TX_initWithEduUmassCsNioMessageNIOTransport_withInt_withInt_(EduUmassCsNioMessageNIOTransport *niot, jint id_, jint m) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduUmassCsNioMessageNIOTransport_1TX *create_EduUmassCsNioMessageNIOTransport_1TX_initWithEduUmassCsNioMessageNIOTransport_withInt_withInt_(EduUmassCsNioMessageNIOTransport *niot, jint id_, jint m);

J2OBJC_TYPE_LITERAL_HEADER(EduUmassCsNioMessageNIOTransport_1TX)

NSString *EduUmassCsNioMessageNIOTransport_SNDR_IP_FIELD = @"_SIP";
NSString *EduUmassCsNioMessageNIOTransport_SNDR_PORT_FIELD = @"_SPORT";
NSString *EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD = @"_SNDR_ADDRESS";
NSString *EduUmassCsNioMessageNIOTransport_RCVR_IP_FIELD = @"_RCVR_IP_ADDRESS";
NSString *EduUmassCsNioMessageNIOTransport_RCVR_PORT_FIELD = @"_RCVR_TCP_PORT";
NSString *EduUmassCsNioMessageNIOTransport_RCVR_ADDRESS_FIELD = @"_RCVR_ADDRESS";
NSString *EduUmassCsNioMessageNIOTransport_NIO_CHARSET_ENCODING = @"ISO-8859-1";

@implementation EduUmassCsNioMessageNIOTransport

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig {
  EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_(self, id_, nodeConfig);
  return self;
}

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode {
  EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(self, id_, nodeConfig, sslMode);
  return self;
}

- (instancetype)initWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)isa_
           withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode {
  EduUmassCsNioMessageNIOTransport_initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(self, isa_, nodeConfig, sslMode);
  return self;
}

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig
withEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd
               withBoolean:(jboolean)start {
  EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_(self, id_, nodeConfig, pd, start);
  return self;
}

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig
withEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd
               withBoolean:(jboolean)start
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode {
  EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(self, id_, nodeConfig, pd, start, sslMode);
  return self;
}

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                   withInt:(jint)port
withEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd
withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:(EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *)sslMode {
  EduUmassCsNioMessageNIOTransport_initWithJavaNetInetAddress_withInt_withEduUmassCsNioAbstractPacketDemultiplexer_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(self, address, port, pd, sslMode);
  return self;
}

- (instancetype)initWithId:(id)id_
withEduUmassCsNioInterfacesNodeConfig:(id<EduUmassCsNioInterfacesNodeConfig>)nodeConfig
withEduUmassCsNioMessageExtractor:(EduUmassCsNioMessageExtractor *)worker {
  EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_(self, id_, nodeConfig, worker);
  return self;
}

- (void)addPacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd {
  [((id<EduUmassCsNioInterfacesInterfaceMessageExtractor>) nil_chk(((id<EduUmassCsNioInterfacesInterfaceMessageExtractor>) cast_check(self->worker_, EduUmassCsNioInterfacesInterfaceMessageExtractor_class_())))) addPacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:pd];
}

- (void)precedePacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd {
  [((id<EduUmassCsNioInterfacesInterfaceMessageExtractor>) nil_chk(((id<EduUmassCsNioInterfacesInterfaceMessageExtractor>) cast_check(self->worker_, EduUmassCsNioInterfacesInterfaceMessageExtractor_class_())))) precedePacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:pd];
}

- (id)getMyID {
  return self->myID_;
}

- (void)stop {
  [super stop];
  [((id<EduUmassCsNioInterfacesInterfaceMessageExtractor>) nil_chk(((id<EduUmassCsNioInterfacesInterfaceMessageExtractor>) cast_check(self->worker_, EduUmassCsNioInterfacesInterfaceMessageExtractor_class_())))) stop];
  EduUmassCsNioJSONDelayEmulator_stop();
}

- (id)putEmulatedDelaysWithId:(id)id_
                       withId:(id)msg {
  return EduUmassCsNioMessageNIOTransport_putEmulatedDelaysWithId_withId_(self, id_, msg);
}

- (jint)sendToIDWithId:(id)id_
                withId:(id)msg {
  return [self sendToIDInternalWithId:id_ withId:EduUmassCsNioMessageNIOTransport_putEmulatedDelaysWithId_withId_(self, id_, msg)];
}

- (jint)sendToAddressWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)isa_
                                           withId:(id)msg {
  msg = EduUmassCsNioMessageNIOTransport_putEmulatedDelaysWithId_withId_(self, nil, msg);
  if ([msg isKindOfClass:[IOSByteArray class]]) return EduUmassCsNioMessageNIOTransport_sendUnderlyingWithJavaNetInetSocketAddress_withByteArray_(self, isa_, (IOSByteArray *) cast_chk(msg, [IOSByteArray class]));
  else if ([EduUmassCsNioInterfacesByteable_class_() isInstance:msg]) return EduUmassCsNioMessageNIOTransport_sendUnderlyingWithJavaNetInetSocketAddress_withByteArray_(self, isa_, [((id<EduUmassCsNioInterfacesByteable>) nil_chk(((id<EduUmassCsNioInterfacesByteable>) cast_check(msg, EduUmassCsNioInterfacesByteable_class_())))) toBytes]);
  return EduUmassCsNioMessageNIOTransport_sendUnderlyingWithJavaNetInetSocketAddress_withByteArray_(self, isa_, [((NSString *) nil_chk([nil_chk(msg) description])) java_getBytesWithCharsetName:EduUmassCsNioMessageNIOTransport_NIO_CHARSET_ENCODING]);
}

+ (JavaNetInetSocketAddress *)getSenderAddressWithOrgJsonJSONObject:(OrgJsonJSONObject *)json {
  return EduUmassCsNioMessageNIOTransport_getSenderAddressWithOrgJsonJSONObject_(json);
}

+ (NSString *)getSenderAddressAsStringWithOrgJsonJSONObject:(OrgJsonJSONObject *)json {
  return EduUmassCsNioMessageNIOTransport_getSenderAddressAsStringWithOrgJsonJSONObject_(json);
}

+ (JavaNetInetSocketAddress *)getSenderAddressWithByteArray:(IOSByteArray *)bytes {
  return EduUmassCsNioMessageNIOTransport_getSenderAddressWithByteArray_(bytes);
}

+ (JavaNetInetSocketAddress *)getReceiverAddressWithByteArray:(IOSByteArray *)bytes {
  return EduUmassCsNioMessageNIOTransport_getReceiverAddressWithByteArray_(bytes);
}

+ (JavaNetInetSocketAddress *)getSenderAddressJSONSmartWithNetMinidevJsonJSONObject:(NetMinidevJsonJSONObject *)json {
  return EduUmassCsNioMessageNIOTransport_getSenderAddressJSONSmartWithNetMinidevJsonJSONObject_(json);
}

+ (JavaNetInetSocketAddress *)getReceiverAddressWithOrgJsonJSONObject:(OrgJsonJSONObject *)json {
  return EduUmassCsNioMessageNIOTransport_getReceiverAddressWithOrgJsonJSONObject_(json);
}

+ (JavaNetInetSocketAddress *)getReceiverAddressJSONSmartWithNetMinidevJsonJSONObject:(NetMinidevJsonJSONObject *)json {
  return EduUmassCsNioMessageNIOTransport_getReceiverAddressJSONSmartWithNetMinidevJsonJSONObject_(json);
}

+ (JavaNetInetAddress *)getSenderInetAddressWithOrgJsonJSONObject:(OrgJsonJSONObject *)json {
  return EduUmassCsNioMessageNIOTransport_getSenderInetAddressWithOrgJsonJSONObject_(json);
}

- (jint)sendToIDInternalWithId:(id)destID
                        withId:(id)msg {
  if ([nil_chk(destID) isEqual:self->myID_]) return EduUmassCsNioMessageNIOTransport_sendLocalWithId_(self, msg);
  if ([msg isKindOfClass:[IOSByteArray class]]) return EduUmassCsNioMessageNIOTransport_sendUnderlyingWithId_withByteArray_(self, destID, (IOSByteArray *) cast_chk(msg, [IOSByteArray class]));
  else if ([EduUmassCsNioInterfacesByteable_class_() isInstance:msg]) return EduUmassCsNioMessageNIOTransport_sendUnderlyingWithId_withByteArray_(self, destID, [((id<EduUmassCsNioInterfacesByteable>) nil_chk(((id<EduUmassCsNioInterfacesByteable>) cast_check(msg, EduUmassCsNioInterfacesByteable_class_())))) toBytes]);
  return EduUmassCsNioMessageNIOTransport_sendUnderlyingWithId_withByteArray_(self, destID, [((NSString *) nil_chk([nil_chk(msg) description])) java_getBytesWithCharsetName:EduUmassCsNioMessageNIOTransport_NIO_CHARSET_ENCODING]);
}

- (jint)sendLocalWithId:(id)message {
  return EduUmassCsNioMessageNIOTransport_sendLocalWithId_(self, message);
}

- (jint)sendUnderlyingWithId:(id)id_
               withByteArray:(IOSByteArray *)data {
  return EduUmassCsNioMessageNIOTransport_sendUnderlyingWithId_withByteArray_(self, id_, data);
}

- (jint)sendUnderlyingWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)isa_
                                     withByteArray:(IOSByteArray *)data {
  return EduUmassCsNioMessageNIOTransport_sendUnderlyingWithJavaNetInetSocketAddress_withByteArray_(self, isa_, data);
}

+ (OrgJsonJSONObject *)JSONifyWithInt:(jint)msgNum
                         withNSString:(NSString *)s {
  return EduUmassCsNioMessageNIOTransport_JSONifyWithInt_withNSString_(msgNum, s);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduUmassCsNioMessageNIOTransport_mainWithNSStringArray_(args);
}

- (id<EduUmassCsNioInterfacesNodeConfig>)getNodeConfig {
  return self->nodeConfig_;
}

- (jint)sendToIDWithId:(id)id_
         withByteArray:(IOSByteArray *)msg {
  return ![nil_chk(id_) isEqual:myID_] ? EduUmassCsNioMessageNIOTransport_sendUnderlyingWithId_withByteArray_(self, id_, msg) : EduUmassCsNioMessageNIOTransport_sendLocalWithId_(self, msg);
}

- (jint)sendToAddressWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)isa_
                                    withByteArray:(IOSByteArray *)msg {
  return EduUmassCsNioMessageNIOTransport_sendUnderlyingWithJavaNetInetSocketAddress_withByteArray_(self, isa_, msg);
}

- (EduUmassCsNioMessageNIOTransport *)setNameWithNSString:(NSString *)name {
  [super setNameWithNSString:name];
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, 2, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 1, 4, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, 1, 6, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, 1, 8, -1, -1 },
    { NULL, NULL, 0x1, -1, 9, 1, 10, -1, -1 },
    { NULL, NULL, 0x1, -1, 11, 1, 12, -1, -1 },
    { NULL, NULL, 0x2, -1, 13, 1, 14, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, 17, -1, -1 },
    { NULL, "V", 0x1, 18, 16, -1, 17, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 19, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 20, 21, -1, 22, -1, -1 },
    { NULL, "I", 0x1, 23, 21, 1, 24, -1, -1 },
    { NULL, "I", 0x1, 25, 26, 1, 27, -1, -1 },
    { NULL, "LJavaNetInetSocketAddress;", 0x19, 28, 29, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x19, 30, 29, -1, -1, -1, -1 },
    { NULL, "LJavaNetInetSocketAddress;", 0x19, 28, 31, 32, -1, -1, -1 },
    { NULL, "LJavaNetInetSocketAddress;", 0x19, 33, 31, 32, -1, -1, -1 },
    { NULL, "LJavaNetInetSocketAddress;", 0x19, 34, 35, -1, -1, -1, -1 },
    { NULL, "LJavaNetInetSocketAddress;", 0x19, 33, 29, -1, -1, -1, -1 },
    { NULL, "LJavaNetInetSocketAddress;", 0x19, 36, 35, -1, -1, -1, -1 },
    { NULL, "LJavaNetInetAddress;", 0x19, 37, 29, 38, -1, -1, -1 },
    { NULL, "I", 0x4, 39, 21, 1, 24, -1, -1 },
    { NULL, "I", 0x2, 40, 41, 42, -1, -1, -1 },
    { NULL, "I", 0x2, 43, 44, 1, 45, -1, -1 },
    { NULL, "I", 0x2, 43, 46, 1, -1, -1, -1 },
    { NULL, "LOrgJsonJSONObject;", 0xa, 47, 48, 38, -1, -1, -1 },
    { NULL, "V", 0x9, 49, 50, -1, -1, -1, -1 },
    { NULL, "LEduUmassCsNioInterfacesNodeConfig;", 0x1, -1, -1, -1, 51, -1, -1 },
    { NULL, "I", 0x1, 23, 44, 1, 45, -1, -1 },
    { NULL, "I", 0x1, 25, 46, 1, -1, -1, -1 },
    { NULL, "LEduUmassCsNioMessageNIOTransport;", 0x1, 52, 53, -1, 54, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withEduUmassCsNioInterfacesNodeConfig:);
  methods[1].selector = @selector(initWithId:withEduUmassCsNioInterfacesNodeConfig:withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:);
  methods[2].selector = @selector(initWithJavaNetInetSocketAddress:withEduUmassCsNioInterfacesNodeConfig:withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:);
  methods[3].selector = @selector(initWithId:withEduUmassCsNioInterfacesNodeConfig:withEduUmassCsNioAbstractPacketDemultiplexer:withBoolean:);
  methods[4].selector = @selector(initWithId:withEduUmassCsNioInterfacesNodeConfig:withEduUmassCsNioAbstractPacketDemultiplexer:withBoolean:withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:);
  methods[5].selector = @selector(initWithJavaNetInetAddress:withInt:withEduUmassCsNioAbstractPacketDemultiplexer:withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES:);
  methods[6].selector = @selector(initWithId:withEduUmassCsNioInterfacesNodeConfig:withEduUmassCsNioMessageExtractor:);
  methods[7].selector = @selector(addPacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:);
  methods[8].selector = @selector(precedePacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:);
  methods[9].selector = @selector(getMyID);
  methods[10].selector = @selector(stop);
  methods[11].selector = @selector(putEmulatedDelaysWithId:withId:);
  methods[12].selector = @selector(sendToIDWithId:withId:);
  methods[13].selector = @selector(sendToAddressWithJavaNetInetSocketAddress:withId:);
  methods[14].selector = @selector(getSenderAddressWithOrgJsonJSONObject:);
  methods[15].selector = @selector(getSenderAddressAsStringWithOrgJsonJSONObject:);
  methods[16].selector = @selector(getSenderAddressWithByteArray:);
  methods[17].selector = @selector(getReceiverAddressWithByteArray:);
  methods[18].selector = @selector(getSenderAddressJSONSmartWithNetMinidevJsonJSONObject:);
  methods[19].selector = @selector(getReceiverAddressWithOrgJsonJSONObject:);
  methods[20].selector = @selector(getReceiverAddressJSONSmartWithNetMinidevJsonJSONObject:);
  methods[21].selector = @selector(getSenderInetAddressWithOrgJsonJSONObject:);
  methods[22].selector = @selector(sendToIDInternalWithId:withId:);
  methods[23].selector = @selector(sendLocalWithId:);
  methods[24].selector = @selector(sendUnderlyingWithId:withByteArray:);
  methods[25].selector = @selector(sendUnderlyingWithJavaNetInetSocketAddress:withByteArray:);
  methods[26].selector = @selector(JSONifyWithInt:withNSString:);
  methods[27].selector = @selector(mainWithNSStringArray:);
  methods[28].selector = @selector(getNodeConfig);
  methods[29].selector = @selector(sendToIDWithId:withByteArray:);
  methods[30].selector = @selector(sendToAddressWithJavaNetInetSocketAddress:withByteArray:);
  methods[31].selector = @selector(setNameWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SNDR_IP_FIELD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 55, -1, 56 },
    { "SNDR_PORT_FIELD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 57, -1, 58 },
    { "SNDR_ADDRESS_FIELD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 59, -1, -1 },
    { "RCVR_IP_FIELD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 60, -1, 61 },
    { "RCVR_PORT_FIELD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 62, -1, 63 },
    { "RCVR_ADDRESS_FIELD", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 64, -1, -1 },
    { "NIO_CHARSET_ENCODING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 65, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LEduUmassCsNioInterfacesNodeConfig;", "LJavaIoIOException;", "(TNodeIDType;Ledu/umass/cs/nio/interfaces/NodeConfig<TNodeIDType;>;)V", "LNSObject;LEduUmassCsNioInterfacesNodeConfig;LEduUmassCsNioSSLDataProcessingWorker_SSL_MODES;", "(TNodeIDType;Ledu/umass/cs/nio/interfaces/NodeConfig<TNodeIDType;>;Ledu/umass/cs/nio/SSLDataProcessingWorker$SSL_MODES;)V", "LJavaNetInetSocketAddress;LEduUmassCsNioInterfacesNodeConfig;LEduUmassCsNioSSLDataProcessingWorker_SSL_MODES;", "(Ljava/net/InetSocketAddress;Ledu/umass/cs/nio/interfaces/NodeConfig<TNodeIDType;>;Ledu/umass/cs/nio/SSLDataProcessingWorker$SSL_MODES;)V", "LNSObject;LEduUmassCsNioInterfacesNodeConfig;LEduUmassCsNioAbstractPacketDemultiplexer;Z", "(TNodeIDType;Ledu/umass/cs/nio/interfaces/NodeConfig<TNodeIDType;>;Ledu/umass/cs/nio/AbstractPacketDemultiplexer<*>;Z)V", "LNSObject;LEduUmassCsNioInterfacesNodeConfig;LEduUmassCsNioAbstractPacketDemultiplexer;ZLEduUmassCsNioSSLDataProcessingWorker_SSL_MODES;", "(TNodeIDType;Ledu/umass/cs/nio/interfaces/NodeConfig<TNodeIDType;>;Ledu/umass/cs/nio/AbstractPacketDemultiplexer<*>;ZLedu/umass/cs/nio/SSLDataProcessingWorker$SSL_MODES;)V", "LJavaNetInetAddress;ILEduUmassCsNioAbstractPacketDemultiplexer;LEduUmassCsNioSSLDataProcessingWorker_SSL_MODES;", "(Ljava/net/InetAddress;ILedu/umass/cs/nio/AbstractPacketDemultiplexer<*>;Ledu/umass/cs/nio/SSLDataProcessingWorker$SSL_MODES;)V", "LNSObject;LEduUmassCsNioInterfacesNodeConfig;LEduUmassCsNioMessageExtractor;", "(TNodeIDType;Ledu/umass/cs/nio/interfaces/NodeConfig<TNodeIDType;>;Ledu/umass/cs/nio/MessageExtractor;)V", "addPacketDemultiplexer", "LEduUmassCsNioAbstractPacketDemultiplexer;", "(Ledu/umass/cs/nio/AbstractPacketDemultiplexer<*>;)V", "precedePacketDemultiplexer", "()TNodeIDType;", "putEmulatedDelays", "LNSObject;LNSObject;", "(TNodeIDType;TMessageType;)TMessageType;", "sendToID", "(TNodeIDType;TMessageType;)I", "sendToAddress", "LJavaNetInetSocketAddress;LNSObject;", "(Ljava/net/InetSocketAddress;TMessageType;)I", "getSenderAddress", "LOrgJsonJSONObject;", "getSenderAddressAsString", "[B", "LJavaNetUnknownHostException;", "getReceiverAddress", "getSenderAddressJSONSmart", "LNetMinidevJsonJSONObject;", "getReceiverAddressJSONSmart", "getSenderInetAddress", "LOrgJsonJSONException;", "sendToIDInternal", "sendLocal", "LNSObject;", "LJavaIoUnsupportedEncodingException;", "sendUnderlying", "LNSObject;[B", "(TNodeIDType;[B)I", "LJavaNetInetSocketAddress;[B", "JSONify", "ILNSString;", "main", "[LNSString;", "()Ledu/umass/cs/nio/interfaces/NodeConfig<TNodeIDType;>;", "setName", "LNSString;", "(Ljava/lang/String;)Ledu/umass/cs/nio/MessageNIOTransport<TNodeIDType;TMessageType;>;", &EduUmassCsNioMessageNIOTransport_SNDR_IP_FIELD, (void *)&EduUmassCsNioMessageNIOTransport__Annotations$0, &EduUmassCsNioMessageNIOTransport_SNDR_PORT_FIELD, (void *)&EduUmassCsNioMessageNIOTransport__Annotations$1, &EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD, &EduUmassCsNioMessageNIOTransport_RCVR_IP_FIELD, (void *)&EduUmassCsNioMessageNIOTransport__Annotations$2, &EduUmassCsNioMessageNIOTransport_RCVR_PORT_FIELD, (void *)&EduUmassCsNioMessageNIOTransport__Annotations$3, &EduUmassCsNioMessageNIOTransport_RCVR_ADDRESS_FIELD, &EduUmassCsNioMessageNIOTransport_NIO_CHARSET_ENCODING, "<NodeIDType:Ljava/lang/Object;MessageType:Ljava/lang/Object;>Ledu/umass/cs/nio/NIOTransport<TNodeIDType;>;Ledu/umass/cs/nio/interfaces/InterfaceNIOTransport<TNodeIDType;TMessageType;>;" };
  static const J2ObjcClassInfo _EduUmassCsNioMessageNIOTransport = { "MessageNIOTransport", "edu.umass.cs.nio", ptrTable, methods, fields, 7, 0x1, 32, 7, -1, -1, -1, 66, -1 };
  return &_EduUmassCsNioMessageNIOTransport;
}

@end

void EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_(EduUmassCsNioMessageNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig) {
  EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_(self, id_, nodeConfig, create_EduUmassCsNioMessageExtractor_init());
}

EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig) {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageNIOTransport, initWithId_withEduUmassCsNioInterfacesNodeConfig_, id_, nodeConfig)
}

EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageNIOTransport, initWithId_withEduUmassCsNioInterfacesNodeConfig_, id_, nodeConfig)
}

void EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioMessageNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(self, id_, nodeConfig, create_EduUmassCsNioMessageExtractor_init(), true, sslMode);
}

EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageNIOTransport, initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_, id_, nodeConfig, sslMode)
}

EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageNIOTransport, initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_, id_, nodeConfig, sslMode)
}

void EduUmassCsNioMessageNIOTransport_initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioMessageNIOTransport *self, JavaNetInetSocketAddress *isa_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  EduUmassCsNioNIOTransport_initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(self, isa_, nodeConfig, create_EduUmassCsNioMessageExtractor_init(), true, sslMode);
}

EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetSocketAddress *isa_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageNIOTransport, initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_, isa_, nodeConfig, sslMode)
}

EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetSocketAddress *isa_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageNIOTransport, initWithJavaNetInetSocketAddress_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_, isa_, nodeConfig, sslMode)
}

void EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_(EduUmassCsNioMessageNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start) {
  EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_(self, id_, nodeConfig, create_EduUmassCsNioMessageExtractor_initWithEduUmassCsNioAbstractPacketDemultiplexer_(pd));
  if (start && ![self isStarted]) {
    [(create_JavaLangThread_initWithJavaLangRunnable_(self)) start];
  }
}

EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start) {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageNIOTransport, initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_, id_, nodeConfig, pd, start)
}

EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageNIOTransport, initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_, id_, nodeConfig, pd, start)
}

void EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioMessageNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(self, id_, nodeConfig, create_EduUmassCsNioMessageExtractor_initWithEduUmassCsNioAbstractPacketDemultiplexer_(pd), start, sslMode);
}

EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageNIOTransport, initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_, id_, nodeConfig, pd, start, sslMode)
}

EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioAbstractPacketDemultiplexer *pd, jboolean start, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageNIOTransport, initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioAbstractPacketDemultiplexer_withBoolean_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_, id_, nodeConfig, pd, start, sslMode)
}

void EduUmassCsNioMessageNIOTransport_initWithJavaNetInetAddress_withInt_withEduUmassCsNioAbstractPacketDemultiplexer_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(EduUmassCsNioMessageNIOTransport *self, JavaNetInetAddress *address, jint port, EduUmassCsNioAbstractPacketDemultiplexer *pd, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  EduUmassCsNioNIOTransport_initWithJavaNetInetAddress_withInt_withEduUmassCsNioInterfacesDataProcessingWorker_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(self, address, port, create_EduUmassCsNioMessageExtractor_initWithEduUmassCsNioAbstractPacketDemultiplexer_(pd), sslMode);
}

EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithJavaNetInetAddress_withInt_withEduUmassCsNioAbstractPacketDemultiplexer_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetAddress *address, jint port, EduUmassCsNioAbstractPacketDemultiplexer *pd, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageNIOTransport, initWithJavaNetInetAddress_withInt_withEduUmassCsNioAbstractPacketDemultiplexer_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_, address, port, pd, sslMode)
}

EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithJavaNetInetAddress_withInt_withEduUmassCsNioAbstractPacketDemultiplexer_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_(JavaNetInetAddress *address, jint port, EduUmassCsNioAbstractPacketDemultiplexer *pd, EduUmassCsNioSSLDataProcessingWorker_SSL_MODES *sslMode) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageNIOTransport, initWithJavaNetInetAddress_withInt_withEduUmassCsNioAbstractPacketDemultiplexer_withEduUmassCsNioSSLDataProcessingWorker_SSL_MODES_, address, port, pd, sslMode)
}

void EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_(EduUmassCsNioMessageNIOTransport *self, id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioMessageExtractor *worker) {
  EduUmassCsNioNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioInterfacesDataProcessingWorker_(self, id_, nodeConfig, worker);
}

EduUmassCsNioMessageNIOTransport *new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioMessageExtractor *worker) {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageNIOTransport, initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_, id_, nodeConfig, worker)
}

EduUmassCsNioMessageNIOTransport *create_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_(id id_, id<EduUmassCsNioInterfacesNodeConfig> nodeConfig, EduUmassCsNioMessageExtractor *worker) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageNIOTransport, initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_, id_, nodeConfig, worker)
}

id EduUmassCsNioMessageNIOTransport_putEmulatedDelaysWithId_withId_(EduUmassCsNioMessageNIOTransport *self, id id_, id msg) {
  if (EduUmassCsNioJSONDelayEmulator_isDelayEmulated() && [msg isKindOfClass:[OrgJsonJSONObject class]]) EduUmassCsNioJSONDelayEmulator_putEmulatedDelayWithId_withOrgJsonJSONObject_(id_, (OrgJsonJSONObject *) cast_chk(msg, [OrgJsonJSONObject class]));
  return msg;
}

JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getSenderAddressWithOrgJsonJSONObject_(OrgJsonJSONObject *json) {
  EduUmassCsNioMessageNIOTransport_initialize();
  if ([json isKindOfClass:[EduUmassCsNioJSONMessenger_JSONObjectWrapper class]]) @try {
    return EduUmassCsNioMessageNIOTransport_getSenderAddressWithByteArray_((IOSByteArray *) cast_chk(((EduUmassCsNioJSONMessenger_JSONObjectWrapper *) nil_chk(((EduUmassCsNioJSONMessenger_JSONObjectWrapper *) cast_chk(json, [EduUmassCsNioJSONMessenger_JSONObjectWrapper class]))))->obj_, [IOSByteArray class]));
  }
  @catch (JavaNetUnknownHostException *e1) {
    [((JavaNetUnknownHostException *) nil_chk(e1)) printStackTrace];
  }
  @try {
    JavaNetInetSocketAddress *isa_ = [((OrgJsonJSONObject *) nil_chk(json)) hasWithNSString:EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD] ? EduUmassCsUtilsUtil_getInetSocketAddressFromStringStrictWithNSString_([json getStringWithNSString:EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD]) : nil;
    return isa_;
  }
  @catch (OrgJsonJSONException *e) {
    [((OrgJsonJSONException *) nil_chk(e)) printStackTrace];
  }
  return nil;
}

NSString *EduUmassCsNioMessageNIOTransport_getSenderAddressAsStringWithOrgJsonJSONObject_(OrgJsonJSONObject *json) {
  EduUmassCsNioMessageNIOTransport_initialize();
  if ([json isKindOfClass:[EduUmassCsNioJSONMessenger_JSONObjectWrapper class]]) @try {
    return [((JavaNetInetSocketAddress *) nil_chk(EduUmassCsNioMessageNIOTransport_getSenderAddressWithByteArray_((IOSByteArray *) cast_chk(((EduUmassCsNioJSONMessenger_JSONObjectWrapper *) nil_chk(((EduUmassCsNioJSONMessenger_JSONObjectWrapper *) cast_chk(json, [EduUmassCsNioJSONMessenger_JSONObjectWrapper class]))))->obj_, [IOSByteArray class])))) description];
  }
  @catch (JavaNetUnknownHostException *e1) {
    [((JavaNetUnknownHostException *) nil_chk(e1)) printStackTrace];
  }
  @try {
    return [((OrgJsonJSONObject *) nil_chk(json)) hasWithNSString:EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD] ? ([json getStringWithNSString:EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD]) : nil;
  }
  @catch (OrgJsonJSONException *e) {
    [((OrgJsonJSONException *) nil_chk(e)) printStackTrace];
  }
  return nil;
}

JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getSenderAddressWithByteArray_(IOSByteArray *bytes) {
  EduUmassCsNioMessageNIOTransport_initialize();
  JavaNioByteBuffer *bbuf = JavaNioByteBuffer_wrapWithByteArray_withInt_withInt_(bytes, 0, EduUmassCsNioNioutilsNIOHeader_BYTES);
  IOSByteArray *addressBytes = [IOSByteArray arrayWithLength:4];
  [((JavaNioByteBuffer *) nil_chk(bbuf)) getWithByteArray:addressBytes];
  JavaNetInetAddress *address = JavaNetInetAddress_getByAddressWithByteArray_(addressBytes);
  jint port = (jint) [bbuf getShort];
  if (port < 0) port += 2 * (JavaLangShort_MAX_VALUE + 1);
  return create_JavaNetInetSocketAddress_initWithJavaNetInetAddress_withInt_(address, port);
}

JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getReceiverAddressWithByteArray_(IOSByteArray *bytes) {
  EduUmassCsNioMessageNIOTransport_initialize();
  JavaNioByteBuffer *bbuf = JavaNioByteBuffer_wrapWithByteArray_withInt_withInt_(bytes, 6, EduUmassCsNioNioutilsNIOHeader_BYTES);
  IOSByteArray *addressBytes = [IOSByteArray arrayWithLength:4];
  [((JavaNioByteBuffer *) nil_chk(bbuf)) getWithByteArray:addressBytes];
  JavaNetInetAddress *address = JavaNetInetAddress_getByAddressWithByteArray_(addressBytes);
  jint port = (jint) [bbuf getShort];
  if (port < 0) port += 2 * (JavaLangShort_MAX_VALUE + 1);
  return create_JavaNetInetSocketAddress_initWithJavaNetInetAddress_withInt_(address, port);
}

JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getSenderAddressJSONSmartWithNetMinidevJsonJSONObject_(NetMinidevJsonJSONObject *json) {
  EduUmassCsNioMessageNIOTransport_initialize();
  JavaNetInetSocketAddress *isa_ = [((NetMinidevJsonJSONObject *) nil_chk(json)) containsKeyWithId:EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD] ? EduUmassCsUtilsUtil_getInetSocketAddressFromStringWithNSString_((NSString *) cast_chk([json getWithId:EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD], [NSString class])) : nil;
  return isa_;
}

JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getReceiverAddressWithOrgJsonJSONObject_(OrgJsonJSONObject *json) {
  EduUmassCsNioMessageNIOTransport_initialize();
  if ([json isKindOfClass:[EduUmassCsNioJSONMessenger_JSONObjectWrapper class]]) @try {
    return EduUmassCsNioMessageNIOTransport_getReceiverAddressWithByteArray_((IOSByteArray *) cast_chk(((EduUmassCsNioJSONMessenger_JSONObjectWrapper *) nil_chk(((EduUmassCsNioJSONMessenger_JSONObjectWrapper *) cast_chk(json, [EduUmassCsNioJSONMessenger_JSONObjectWrapper class]))))->obj_, [IOSByteArray class]));
  }
  @catch (JavaNetUnknownHostException *e1) {
    [((JavaNetUnknownHostException *) nil_chk(e1)) printStackTrace];
  }
  JavaNetInetSocketAddress *isa_ = nil;
  @try {
    isa_ = [((OrgJsonJSONObject *) nil_chk(json)) hasWithNSString:EduUmassCsNioMessageNIOTransport_RCVR_ADDRESS_FIELD] ? EduUmassCsUtilsUtil_getInetSocketAddressFromStringStrictWithNSString_([json getStringWithNSString:EduUmassCsNioMessageNIOTransport_RCVR_ADDRESS_FIELD]) : nil;
  }
  @catch (OrgJsonJSONException *e) {
    [((OrgJsonJSONException *) nil_chk(e)) printStackTrace];
  }
  return isa_;
}

JavaNetInetSocketAddress *EduUmassCsNioMessageNIOTransport_getReceiverAddressJSONSmartWithNetMinidevJsonJSONObject_(NetMinidevJsonJSONObject *json) {
  EduUmassCsNioMessageNIOTransport_initialize();
  JavaNetInetSocketAddress *isa_ = [((NetMinidevJsonJSONObject *) nil_chk(json)) containsKeyWithId:EduUmassCsNioMessageNIOTransport_RCVR_ADDRESS_FIELD] ? EduUmassCsUtilsUtil_getInetSocketAddressFromStringWithNSString_((NSString *) cast_chk([json getWithId:EduUmassCsNioMessageNIOTransport_RCVR_ADDRESS_FIELD], [NSString class])) : nil;
  return isa_;
}

JavaNetInetAddress *EduUmassCsNioMessageNIOTransport_getSenderInetAddressWithOrgJsonJSONObject_(OrgJsonJSONObject *json) {
  EduUmassCsNioMessageNIOTransport_initialize();
  JavaNetInetSocketAddress *isa_ = EduUmassCsNioMessageNIOTransport_getSenderAddressWithOrgJsonJSONObject_(json);
  return isa_ != nil ? [isa_ getAddress] : nil;
}

jint EduUmassCsNioMessageNIOTransport_sendLocalWithId_(EduUmassCsNioMessageNIOTransport *self, id message) {
  IOSByteArray *msg = ([message isKindOfClass:[IOSByteArray class]] ? ((IOSByteArray *) cast_chk(message, [IOSByteArray class])) : [((NSString *) nil_chk([nil_chk(message) description])) java_getBytesWithCharsetName:EduUmassCsNioMessageNIOTransport_NIO_CHARSET_ENCODING]);
  jint length = msg->size_;
  [((id<EduUmassCsNioInterfacesInterfaceMessageExtractor>) nil_chk(((id<EduUmassCsNioInterfacesInterfaceMessageExtractor>) cast_check(self->worker_, EduUmassCsNioInterfacesInterfaceMessageExtractor_class_())))) processLocalMessageWithJavaNetInetSocketAddress:create_JavaNetInetSocketAddress_initWithJavaNetInetAddress_withInt_([self getNodeAddress], [self getNodePort]) withByteArray:msg];
  return length;
}

jint EduUmassCsNioMessageNIOTransport_sendUnderlyingWithId_withByteArray_(EduUmassCsNioMessageNIOTransport *self, id id_, IOSByteArray *data) {
  return [self sendWithId:id_ withByteArray:data];
}

jint EduUmassCsNioMessageNIOTransport_sendUnderlyingWithJavaNetInetSocketAddress_withByteArray_(EduUmassCsNioMessageNIOTransport *self, JavaNetInetSocketAddress *isa_, IOSByteArray *data) {
  return [self sendWithJavaNetInetSocketAddress:isa_ withByteArray:data];
}

OrgJsonJSONObject *EduUmassCsNioMessageNIOTransport_JSONifyWithInt_withNSString_(jint msgNum, NSString *s) {
  EduUmassCsNioMessageNIOTransport_initialize();
  return create_OrgJsonJSONObject_initWithNSString_(JreStrcat("$$$IC", @"{\"msg\" : \"", s, @"\" , \"msgNum\" : ", msgNum, '}'));
}

void EduUmassCsNioMessageNIOTransport_mainWithNSStringArray_(IOSObjectArray *args) {
  EduUmassCsNioMessageNIOTransport_initialize();
  jint msgNum = 0;
  jint port = 2000;
  jint nNodes = 100;
  EduUmassCsNioNioutilsSampleNodeConfig *snc = create_EduUmassCsNioNioutilsSampleNodeConfig_initWithInt_(port);
  [snc localSetupWithInt:nNodes + 2];
  IOSObjectArray *workers = [IOSObjectArray arrayWithLength:nNodes + 1 type:EduUmassCsNioMessageExtractor_class_()];
  for (jint i = 0; i < nNodes + 1; i++) {
    IOSObjectArray_SetAndConsume(workers, i, new_EduUmassCsNioMessageExtractor_initWithEduUmassCsNioAbstractPacketDemultiplexer_(create_EduUmassCsNioNioutilsPacketDemultiplexerDefault_init()));
  }
  IOSObjectArray *niots = [IOSObjectArray arrayWithLength:nNodes type:EduUmassCsNioMessageNIOTransport_class_()];
  @try {
    jint smallNNodes = 2;
    for (jint i = 0; i < smallNNodes; i++) {
      IOSObjectArray_SetAndConsume(niots, i, new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_(JavaLangInteger_valueOfWithInt_(i), snc, IOSObjectArray_Get(workers, i)));
      [create_JavaLangThread_initWithJavaLangRunnable_(IOSObjectArray_Get(niots, i)) start];
    }
    [((EduUmassCsNioMessageNIOTransport *) nil_chk((IOSObjectArray_Get(niots, 1)))) sendToIDInternalWithId:JavaLangInteger_valueOfWithInt_(0) withId:EduUmassCsNioMessageNIOTransport_JSONifyWithInt_withNSString_(msgNum++, @"Hello from 1 to 0")];
    [((EduUmassCsNioMessageNIOTransport *) nil_chk((IOSObjectArray_Get(niots, 0)))) sendToIDInternalWithId:JavaLangInteger_valueOfWithInt_(1) withId:EduUmassCsNioMessageNIOTransport_JSONifyWithInt_withNSString_(msgNum++, @"Hello back from 0 to 1")];
    [((EduUmassCsNioMessageNIOTransport *) nil_chk((IOSObjectArray_Get(niots, 0)))) sendToIDInternalWithId:JavaLangInteger_valueOfWithInt_(1) withId:EduUmassCsNioMessageNIOTransport_JSONifyWithInt_withNSString_(msgNum++, @"Second hello back from 0 to 1")];
    @try {
      JavaLangThread_sleepWithLong_(1000);
    }
    @catch (JavaLangException *e) {
      [((JavaLangException *) nil_chk(e)) printStackTrace];
    }
    [((EduUmassCsNioMessageNIOTransport *) nil_chk((IOSObjectArray_Get(niots, 0)))) sendToIDInternalWithId:JavaLangInteger_valueOfWithInt_(1) withId:EduUmassCsNioMessageNIOTransport_JSONifyWithInt_withNSString_(msgNum++, @"Third hello back from 0 to 1")];
    [((EduUmassCsNioMessageNIOTransport *) nil_chk((IOSObjectArray_Get(niots, 1)))) sendToIDInternalWithId:JavaLangInteger_valueOfWithInt_(0) withId:EduUmassCsNioMessageNIOTransport_JSONifyWithInt_withNSString_(msgNum++, @"Thank you for all the hellos back from 1 to 0")];
    jint seqTestNum = 1;
    JavaLangThread_sleepWithLong_(2000);
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$I$", @"\n\n\nBeginning test of ", seqTestNum, @" random, sequential messages")];
    JavaLangThread_sleepWithLong_(1000);
    for (jint i = smallNNodes; i < nNodes; i++) {
      IOSObjectArray_SetAndConsume(niots, i, new_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_(JavaLangInteger_valueOfWithInt_(i), snc, IOSObjectArray_Get(workers, i)));
      [create_JavaLangThread_initWithJavaLangRunnable_(IOSObjectArray_Get(niots, i)) start];
    }
    for (jint i = 0; i < nNodes * seqTestNum; i++) {
      jint k = JreFpToInt((JavaLangMath_random() * nNodes));
      jint j = JreFpToInt((JavaLangMath_random() * nNodes));
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$I$I", @"Message ", i, @" with msgNum ", msgNum)];
      [((EduUmassCsNioMessageNIOTransport *) nil_chk((IOSObjectArray_Get(niots, k)))) sendToIDInternalWithId:JavaLangInteger_valueOfWithInt_(j) withId:EduUmassCsNioMessageNIOTransport_JSONifyWithInt_withNSString_(msgNum++, JreStrcat("$I$I", @"Hello from ", k, @" to ", j))];
    }
    jint oneToOneTestNum = 1;
    JavaLangThread_sleepWithLong_(1000);
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$I$", @"\n\n\nBeginning test of ", oneToOneTestNum * nNodes, @" random, concurrent, 1-to-1 messages with emulated delays")];
    JavaLangThread_sleepWithLong_(1000);
    id<JavaUtilConcurrentScheduledExecutorService> execpool = JavaUtilConcurrentExecutors_newScheduledThreadPoolWithInt_(5);
    EduUmassCsNioJSONDelayEmulator_emulateDelays();
    EduUmassCsNioMessageNIOTransport *concurrentSender = create_EduUmassCsNioMessageNIOTransport_initWithId_withEduUmassCsNioInterfacesNodeConfig_withEduUmassCsNioMessageExtractor_(JavaLangInteger_valueOfWithInt_(nNodes), snc, IOSObjectArray_Get(workers, nNodes));
    [create_JavaLangThread_initWithJavaLangRunnable_(concurrentSender) start];
    IOSObjectArray *futuresRandom = [IOSObjectArray arrayWithLength:nNodes * oneToOneTestNum type:JavaUtilConcurrentScheduledFuture_class_()];
    for (jint i = 0; i < nNodes * oneToOneTestNum; i++) {
      EduUmassCsNioMessageNIOTransport_1TX *task = create_EduUmassCsNioMessageNIOTransport_1TX_initWithEduUmassCsNioMessageNIOTransport_withInt_withInt_(concurrentSender, 0, msgNum++);
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$I$I", @"Scheduling random message ", i, @" with msgNum ", msgNum)];
      IOSObjectArray_Set(futuresRandom, i, [((id<JavaUtilConcurrentScheduledExecutorService>) nil_chk(execpool)) scheduleWithJavaLangRunnable:task withLong:0 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)]);
    }
    for (jint i = 0; i < nNodes * oneToOneTestNum; i++) {
      @try {
        [((id<JavaUtilConcurrentScheduledFuture>) nil_chk(IOSObjectArray_Get(futuresRandom, i))) get];
      }
      @catch (JavaLangException *e) {
        [((JavaLangException *) nil_chk(e)) printStackTrace];
      }
    }
    JavaLangThread_sleepWithLong_(1000);
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"\n\n\nBeginning test of random, concurrent,  any-to-any messages with emulated delays"];
    JavaLangThread_sleepWithLong_(1000);
    jint load_ = nNodes * 25;
    jint msgsToFailed = 0;
    IOSObjectArray *futures = [IOSObjectArray arrayWithLength:load_ type:JavaUtilConcurrentScheduledFuture_class_()];
    for (jint i = 0; i < load_; i++) {
      jint k = JreFpToInt((JavaLangMath_random() * nNodes));
      jint j = JreFpToInt((JavaLangMath_random() * nNodes));
      if (i % 100 == 0) {
        j = nNodes + 1;
        msgsToFailed++;
      }
      EduUmassCsNioMessageNIOTransport_1TX *task = create_EduUmassCsNioMessageNIOTransport_1TX_initWithInt_withInt_withEduUmassCsNioMessageNIOTransportArray_withInt_(k, j, niots, msgNum++);
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$I$I", @"Scheduling random message ", i, @" with msgNum ", msgNum)];
      IOSObjectArray_Set(futures, i, [((id<JavaUtilConcurrentScheduledExecutorService>) nil_chk(execpool)) scheduleWithJavaLangRunnable:task withLong:0 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)]);
    }
    jint numExceptions = 0;
    for (jint i = 0; i < load_; i++) {
      @try {
        [((id<JavaUtilConcurrentScheduledFuture>) nil_chk(IOSObjectArray_Get(futures, i))) get];
      }
      @catch (JavaLangException *e) {
        numExceptions++;
      }
    }
    JavaLangThread_sleepWithLong_(2000);
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$I", @"\n\n\nPrinting overall stats. Number of exceptions =  ", numExceptions)];
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:(JreStrcat("@C", create_EduUmassCsNioNioutilsNIOInstrumenter_init(), 0x000a))];
    jboolean pending = false;
    for (jint i = 0; i < nNodes; i++) {
      if ([((EduUmassCsNioMessageNIOTransport *) nil_chk(IOSObjectArray_Get(niots, i))) getPendingSize] > 0) {
        [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$I$I", @"Pending messages at node ", i, @" : ", [((EduUmassCsNioMessageNIOTransport *) nil_chk(IOSObjectArray_Get(niots, i))) getPendingSize])];
        pending = true;
      }
    }
    jint missing = EduUmassCsNioNioutilsNIOInstrumenter_getMissing();
    JreAssert(((pending == false || missing == msgsToFailed)), (@"Unsent pending messages in NIO"));
    {
      IOSObjectArray *a__ = niots;
      EduUmassCsNioMessageNIOTransport * const *b__ = a__->buffer_;
      EduUmassCsNioMessageNIOTransport * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        EduUmassCsNioNIOTransport *niot = *b__++;
        [((EduUmassCsNioNIOTransport *) nil_chk(niot)) stop];
      }
    }
    [concurrentSender stop];
    [((id<JavaUtilConcurrentScheduledExecutorService>) nil_chk(execpool)) shutdown];
    if (!pending || missing == msgsToFailed) {
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"\nSUCCESS: no pending messages to non-failed nodes!"];
    }
  }
  @catch (JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
}

IOSObjectArray *EduUmassCsNioMessageNIOTransport__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *EduUmassCsNioMessageNIOTransport__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *EduUmassCsNioMessageNIOTransport__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *EduUmassCsNioMessageNIOTransport__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsNioMessageNIOTransport)

@implementation EduUmassCsNioMessageNIOTransport_1TX

- (instancetype)initWithInt:(jint)i
                    withInt:(jint)id_
withEduUmassCsNioMessageNIOTransportArray:(IOSObjectArray *)n
                    withInt:(jint)m {
  EduUmassCsNioMessageNIOTransport_1TX_initWithInt_withInt_withEduUmassCsNioMessageNIOTransportArray_withInt_(self, i, id_, n, m);
  return self;
}

- (instancetype)initWithEduUmassCsNioMessageNIOTransport:(EduUmassCsNioMessageNIOTransport *)niot
                                                 withInt:(jint)id_
                                                 withInt:(jint)m {
  EduUmassCsNioMessageNIOTransport_1TX_initWithEduUmassCsNioMessageNIOTransport_withInt_withInt_(self, niot, id_, m);
  return self;
}

- (void)run {
  @try {
    [((EduUmassCsNioMessageNIOTransport *) nil_chk(sndr_)) sendToIDInternalWithId:JavaLangInteger_valueOfWithInt_(rcvr_) withId:EduUmassCsNioMessageNIOTransport_JSONifyWithInt_withNSString_(msgNum_, JreStrcat("$@$I", @"Hello from ", sndr_->myID_, @" to ", rcvr_))];
  }
  @catch (JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
  }
  @catch (OrgJsonJSONException *e) {
    [((OrgJsonJSONException *) nil_chk(e)) printStackTrace];
  }
}

- (void)dealloc {
  RELEASE_(sndr_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withInt:withEduUmassCsNioMessageNIOTransportArray:withInt:);
  methods[1].selector = @selector(initWithEduUmassCsNioMessageNIOTransport:withInt:withInt:);
  methods[2].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sndr_", "LEduUmassCsNioMessageNIOTransport;", .constantValue.asLong = 0, 0x0, -1, -1, 4, -1 },
    { "rcvr_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "msgNum_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II[LEduUmassCsNioMessageNIOTransport;I", "(II[Ledu/umass/cs/nio/MessageNIOTransport<**>;I)V", "LEduUmassCsNioMessageNIOTransport;II", "(Ledu/umass/cs/nio/MessageNIOTransport<Ljava/lang/Integer;Lorg/json/JSONObject;>;II)V", "Ledu/umass/cs/nio/MessageNIOTransport<Ljava/lang/Integer;Lorg/json/JSONObject;>;", "LEduUmassCsNioMessageNIOTransport;", "mainWithNSStringArray:" };
  static const J2ObjcClassInfo _EduUmassCsNioMessageNIOTransport_1TX = { "TX", "edu.umass.cs.nio", ptrTable, methods, fields, 7, 0x0, 3, 3, 5, -1, 6, -1, -1 };
  return &_EduUmassCsNioMessageNIOTransport_1TX;
}

@end

void EduUmassCsNioMessageNIOTransport_1TX_initWithInt_withInt_withEduUmassCsNioMessageNIOTransportArray_withInt_(EduUmassCsNioMessageNIOTransport_1TX *self, jint i, jint id_, IOSObjectArray *n, jint m) {
  JavaUtilTimerTask_init(self);
  JreStrongAssign(&self->sndr_, nil);
  self->rcvr_ = -1;
  self->msgNum_ = -1;
  JreStrongAssign(&self->sndr_, IOSObjectArray_Get(nil_chk(n), i));
  self->rcvr_ = id_;
  self->msgNum_ = m;
}

EduUmassCsNioMessageNIOTransport_1TX *new_EduUmassCsNioMessageNIOTransport_1TX_initWithInt_withInt_withEduUmassCsNioMessageNIOTransportArray_withInt_(jint i, jint id_, IOSObjectArray *n, jint m) {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageNIOTransport_1TX, initWithInt_withInt_withEduUmassCsNioMessageNIOTransportArray_withInt_, i, id_, n, m)
}

EduUmassCsNioMessageNIOTransport_1TX *create_EduUmassCsNioMessageNIOTransport_1TX_initWithInt_withInt_withEduUmassCsNioMessageNIOTransportArray_withInt_(jint i, jint id_, IOSObjectArray *n, jint m) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageNIOTransport_1TX, initWithInt_withInt_withEduUmassCsNioMessageNIOTransportArray_withInt_, i, id_, n, m)
}

void EduUmassCsNioMessageNIOTransport_1TX_initWithEduUmassCsNioMessageNIOTransport_withInt_withInt_(EduUmassCsNioMessageNIOTransport_1TX *self, EduUmassCsNioMessageNIOTransport *niot, jint id_, jint m) {
  JavaUtilTimerTask_init(self);
  JreStrongAssign(&self->sndr_, nil);
  self->rcvr_ = -1;
  self->msgNum_ = -1;
  JreStrongAssign(&self->sndr_, niot);
  self->rcvr_ = id_;
  self->msgNum_ = m;
}

EduUmassCsNioMessageNIOTransport_1TX *new_EduUmassCsNioMessageNIOTransport_1TX_initWithEduUmassCsNioMessageNIOTransport_withInt_withInt_(EduUmassCsNioMessageNIOTransport *niot, jint id_, jint m) {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageNIOTransport_1TX, initWithEduUmassCsNioMessageNIOTransport_withInt_withInt_, niot, id_, m)
}

EduUmassCsNioMessageNIOTransport_1TX *create_EduUmassCsNioMessageNIOTransport_1TX_initWithEduUmassCsNioMessageNIOTransport_withInt_withInt_(EduUmassCsNioMessageNIOTransport *niot, jint id_, jint m) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageNIOTransport_1TX, initWithEduUmassCsNioMessageNIOTransport_withInt_withInt_, niot, id_, m)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsNioMessageNIOTransport_1TX)
