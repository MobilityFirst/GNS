//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/nio/MessageExtractor.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/nio/AbstractPacketDemultiplexer.h"
#include "edu/umass/cs/nio/JSONDelayEmulator.h"
#include "edu/umass/cs/nio/JSONPacket.h"
#include "edu/umass/cs/nio/MessageExtractor.h"
#include "edu/umass/cs/nio/MessageNIOTransport.h"
#include "edu/umass/cs/nio/NIOTransport.h"
#include "edu/umass/cs/nio/nioutils/NIOHeader.h"
#include "edu/umass/cs/nio/nioutils/NIOInstrumenter.h"
#include "edu/umass/cs/nio/nioutils/PacketDemultiplexerDefault.h"
#include "edu/umass/cs/utils/Stringer.h"
#include "edu/umass/cs/utils/Util.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/net/InetAddress.h"
#include "java/net/InetSocketAddress.h"
#include "java/net/SocketAddress.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/channels/SocketChannel.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/TimerTask.h"
#include "java/util/concurrent/Executors.h"
#include "java/util/concurrent/ScheduledExecutorService.h"
#include "java/util/concurrent/ScheduledFuture.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "net/minidev/json/JSONObject.h"
#include "net/minidev/json/JSONValue.h"
#include "org/json/JSONException.h"
#include "org/json/JSONObject.h"

@interface EduUmassCsNioMessageExtractor () {
 @public
  JavaUtilArrayList *packetDemuxes_;
  id<JavaUtilConcurrentScheduledExecutorService> executor_;
}

- (void)processMessageInternalWithJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)socket
                                         withJavaNioByteBuffer:(JavaNioByteBuffer *)incoming;

- (void)demultiplexMessageWithEduUmassCsNioNioutilsNIOHeader:(EduUmassCsNioNioutilsNIOHeader *)header
                                       withJavaNioByteBuffer:(JavaNioByteBuffer *)incoming;

- (void)demultiplexLocalMessageWithEduUmassCsNioNioutilsNIOHeader:(EduUmassCsNioNioutilsNIOHeader *)header
                                                    withByteArray:(IOSByteArray *)message;

- (jboolean)callDemultiplexerHandlerWithEduUmassCsNioNioutilsNIOHeader:(EduUmassCsNioNioutilsNIOHeader *)header
                                                         withByteArray:(IOSByteArray *)message
                          withEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd;

@end

J2OBJC_FIELD_SETTER(EduUmassCsNioMessageExtractor, packetDemuxes_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(EduUmassCsNioMessageExtractor, executor_, id<JavaUtilConcurrentScheduledExecutorService>)

inline JavaUtilLoggingLogger *EduUmassCsNioMessageExtractor_get_log();
static JavaUtilLoggingLogger *EduUmassCsNioMessageExtractor_log;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduUmassCsNioMessageExtractor, log, JavaUtilLoggingLogger *)

__attribute__((unused)) static void EduUmassCsNioMessageExtractor_processMessageInternalWithJavaNioChannelsSocketChannel_withJavaNioByteBuffer_(EduUmassCsNioMessageExtractor *self, JavaNioChannelsSocketChannel *socket, JavaNioByteBuffer *incoming);

__attribute__((unused)) static void EduUmassCsNioMessageExtractor_demultiplexMessageWithEduUmassCsNioNioutilsNIOHeader_withJavaNioByteBuffer_(EduUmassCsNioMessageExtractor *self, EduUmassCsNioNioutilsNIOHeader *header, JavaNioByteBuffer *incoming);

__attribute__((unused)) static void EduUmassCsNioMessageExtractor_demultiplexLocalMessageWithEduUmassCsNioNioutilsNIOHeader_withByteArray_(EduUmassCsNioMessageExtractor *self, EduUmassCsNioNioutilsNIOHeader *header, IOSByteArray *message);

__attribute__((unused)) static jboolean EduUmassCsNioMessageExtractor_callDemultiplexerHandlerWithEduUmassCsNioNioutilsNIOHeader_withByteArray_withEduUmassCsNioAbstractPacketDemultiplexer_(EduUmassCsNioMessageExtractor *self, EduUmassCsNioNioutilsNIOHeader *header, IOSByteArray *message, EduUmassCsNioAbstractPacketDemultiplexer *pd);

@interface EduUmassCsNioMessageExtractor_MessageWorker : JavaUtilTimerTask {
 @public
  EduUmassCsNioMessageExtractor *this$0_;
  JavaNioChannelsSocketChannel *socket_;
  IOSByteArray *msg_;
}

- (instancetype)initWithEduUmassCsNioMessageExtractor:(EduUmassCsNioMessageExtractor *)outer$
                     withJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)socket
                                        withByteArray:(IOSByteArray *)msg
                                withJavaUtilArrayList:(JavaUtilArrayList *)pdemuxes;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(EduUmassCsNioMessageExtractor_MessageWorker)

J2OBJC_FIELD_SETTER(EduUmassCsNioMessageExtractor_MessageWorker, socket_, JavaNioChannelsSocketChannel *)
J2OBJC_FIELD_SETTER(EduUmassCsNioMessageExtractor_MessageWorker, msg_, IOSByteArray *)

__attribute__((unused)) static void EduUmassCsNioMessageExtractor_MessageWorker_initWithEduUmassCsNioMessageExtractor_withJavaNioChannelsSocketChannel_withByteArray_withJavaUtilArrayList_(EduUmassCsNioMessageExtractor_MessageWorker *self, EduUmassCsNioMessageExtractor *outer$, JavaNioChannelsSocketChannel *socket, IOSByteArray *msg, JavaUtilArrayList *pdemuxes);

__attribute__((unused)) static EduUmassCsNioMessageExtractor_MessageWorker *new_EduUmassCsNioMessageExtractor_MessageWorker_initWithEduUmassCsNioMessageExtractor_withJavaNioChannelsSocketChannel_withByteArray_withJavaUtilArrayList_(EduUmassCsNioMessageExtractor *outer$, JavaNioChannelsSocketChannel *socket, IOSByteArray *msg, JavaUtilArrayList *pdemuxes) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduUmassCsNioMessageExtractor_MessageWorker *create_EduUmassCsNioMessageExtractor_MessageWorker_initWithEduUmassCsNioMessageExtractor_withJavaNioChannelsSocketChannel_withByteArray_withJavaUtilArrayList_(EduUmassCsNioMessageExtractor *outer$, JavaNioChannelsSocketChannel *socket, IOSByteArray *msg, JavaUtilArrayList *pdemuxes);

J2OBJC_TYPE_LITERAL_HEADER(EduUmassCsNioMessageExtractor_MessageWorker)

J2OBJC_INITIALIZED_DEFN(EduUmassCsNioMessageExtractor)

NSString *EduUmassCsNioMessageExtractor_STRINGIFIED = @"_STRINGIFIED_";

@implementation EduUmassCsNioMessageExtractor

- (instancetype)initWithEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd {
  EduUmassCsNioMessageExtractor_initWithEduUmassCsNioAbstractPacketDemultiplexer_(self, pd);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduUmassCsNioMessageExtractor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addPacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd {
  @synchronized(self) {
    JavaUtilArrayList *tmp = create_JavaUtilArrayList_initWithJavaUtilCollection_(self->packetDemuxes_);
    [tmp addWithId:pd];
    JreStrongAssign(&self->packetDemuxes_, tmp);
  }
}

- (void)precedePacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd {
  @synchronized(self) {
    JavaUtilArrayList *tmp = create_JavaUtilArrayList_init();
    [tmp addWithId:pd];
    [tmp addAllWithJavaUtilCollection:packetDemuxes_];
    JreStrongAssign(&self->packetDemuxes_, tmp);
  }
}

- (void)processDataWithJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)socket
                              withJavaNioByteBuffer:(JavaNioByteBuffer *)incoming {
  @try {
    EduUmassCsNioMessageExtractor_processMessageInternalWithJavaNioChannelsSocketChannel_withJavaNioByteBuffer_(self, socket, incoming);
  }
  @catch (JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
  }
}

- (void)stop {
  for (EduUmassCsNioAbstractPacketDemultiplexer * __strong pd in nil_chk(self->packetDemuxes_)) if (pd != nil) [pd stop];
  [((id<JavaUtilConcurrentScheduledExecutorService>) nil_chk(self->executor_)) shutdownNow];
}

- (void)processLocalMessageWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)sockAddr
                                          withByteArray:(IOSByteArray *)msg {
  @try {
    EduUmassCsNioMessageExtractor_demultiplexLocalMessageWithEduUmassCsNioNioutilsNIOHeader_withByteArray_(self, create_EduUmassCsNioNioutilsNIOHeader_initWithJavaNetInetSocketAddress_withJavaNetInetSocketAddress_(sockAddr, sockAddr), msg);
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    EduUmassCsNioMessageExtractor_fatalExitWithJavaIoUnsupportedEncodingException_(e);
  }
  @catch (JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
  }
}

+ (OrgJsonJSONObject *)parseJSONWithNSString:(NSString *)msg
                                 withBoolean:(jboolean)cacheStringified {
  return EduUmassCsNioMessageExtractor_parseJSONWithNSString_withBoolean_(msg, cacheStringified);
}

+ (OrgJsonJSONObject *)parseJSONWithNSString:(NSString *)msg {
  return EduUmassCsNioMessageExtractor_parseJSONWithNSString_(msg);
}

+ (NetMinidevJsonJSONObject *)parseJSONSmartWithNSString:(NSString *)msg {
  return EduUmassCsNioMessageExtractor_parseJSONSmartWithNSString_(msg);
}

+ (void)fatalExitWithJavaIoUnsupportedEncodingException:(JavaIoUnsupportedEncodingException *)e {
  EduUmassCsNioMessageExtractor_fatalExitWithJavaIoUnsupportedEncodingException_(e);
}

- (void)processMessageInternalWithJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)socket
                                         withJavaNioByteBuffer:(JavaNioByteBuffer *)incoming {
  EduUmassCsNioMessageExtractor_processMessageInternalWithJavaNioChannelsSocketChannel_withJavaNioByteBuffer_(self, socket, incoming);
}

+ (NSString *)decodeWithByteArray:(IOSByteArray *)bytes {
  return EduUmassCsNioMessageExtractor_decodeWithByteArray_(bytes);
}

+ (NSString *)decodeWithByteArray:(IOSByteArray *)bytes
                          withInt:(jint)offset
                          withInt:(jint)length {
  return EduUmassCsNioMessageExtractor_decodeWithByteArray_withInt_withInt_(bytes, offset, length);
}

- (void)demultiplexMessageWithEduUmassCsNioNioutilsNIOHeader:(EduUmassCsNioNioutilsNIOHeader *)header
                                       withJavaNioByteBuffer:(JavaNioByteBuffer *)incoming {
  EduUmassCsNioMessageExtractor_demultiplexMessageWithEduUmassCsNioNioutilsNIOHeader_withJavaNioByteBuffer_(self, header, incoming);
}

- (void)demultiplexLocalMessageWithEduUmassCsNioNioutilsNIOHeader:(EduUmassCsNioNioutilsNIOHeader *)header
                                                    withByteArray:(IOSByteArray *)message {
  EduUmassCsNioMessageExtractor_demultiplexLocalMessageWithEduUmassCsNioNioutilsNIOHeader_withByteArray_(self, header, message);
}

- (jboolean)callDemultiplexerHandlerWithEduUmassCsNioNioutilsNIOHeader:(EduUmassCsNioNioutilsNIOHeader *)header
                                                         withByteArray:(IOSByteArray *)message
                          withEduUmassCsNioAbstractPacketDemultiplexer:(EduUmassCsNioAbstractPacketDemultiplexer *)pd {
  return EduUmassCsNioMessageExtractor_callDemultiplexerHandlerWithEduUmassCsNioNioutilsNIOHeader_withByteArray_withEduUmassCsNioAbstractPacketDemultiplexer_(self, header, message, pd);
}

- (NSString *)description {
  return [[self java_getClass] getSimpleName];
}

- (void)demultiplexMessageWithId:(id)message {
  for (EduUmassCsNioAbstractPacketDemultiplexer * __strong pd in nil_chk(self->packetDemuxes_)) {
    if ([((EduUmassCsNioAbstractPacketDemultiplexer *) nil_chk(pd)) loopbackWithId:message]) break;
  }
}

+ (OrgJsonJSONObject *)stampAddressIntoJSONObjectWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)sndrAddress
                                                 withJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)rcvrAddress
                                                        withOrgJsonJSONObject:(OrgJsonJSONObject *)json {
  return EduUmassCsNioMessageExtractor_stampAddressIntoJSONObjectWithJavaNetInetSocketAddress_withJavaNetInetSocketAddress_withOrgJsonJSONObject_(sndrAddress, rcvrAddress, json);
}

+ (NetMinidevJsonJSONObject *)stampAddressIntoJSONObjectWithJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)sndrAddress
                                                        withJavaNetInetSocketAddress:(JavaNetInetSocketAddress *)rcvrAddress
                                                        withNetMinidevJsonJSONObject:(NetMinidevJsonJSONObject *)json {
  return EduUmassCsNioMessageExtractor_stampAddressIntoJSONObjectWithJavaNetInetSocketAddress_withJavaNetInetSocketAddress_withNetMinidevJsonJSONObject_(sndrAddress, rcvrAddress, json);
}

- (void)dealloc {
  RELEASE_(packetDemuxes_);
  RELEASE_(executor_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, 2, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x21, 3, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgJsonJSONObject;", 0x1c, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgJsonJSONObject;", 0x1c, 8, 10, -1, -1, -1, -1 },
    { NULL, "LNetMinidevJsonJSONObject;", 0x19, 11, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1c, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 5, 15, -1, -1, -1 },
    { NULL, "LNSString;", 0x19, 16, 17, 13, -1, -1, -1 },
    { NULL, "LNSString;", 0x19, 16, 18, 13, -1, -1, -1 },
    { NULL, "V", 0x2, 19, 20, 15, -1, -1, -1 },
    { NULL, "V", 0x2, 21, 22, 15, -1, -1, -1 },
    { NULL, "Z", 0x2, 23, 24, -1, 25, -1, -1 },
    { NULL, "LNSString;", 0x1, 26, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 27, -1, -1, -1, -1 },
    { NULL, "LOrgJsonJSONObject;", 0x19, 28, 29, -1, -1, -1, -1 },
    { NULL, "LNetMinidevJsonJSONObject;", 0x19, 28, 30, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduUmassCsNioAbstractPacketDemultiplexer:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(addPacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:);
  methods[3].selector = @selector(precedePacketDemultiplexerWithEduUmassCsNioAbstractPacketDemultiplexer:);
  methods[4].selector = @selector(processDataWithJavaNioChannelsSocketChannel:withJavaNioByteBuffer:);
  methods[5].selector = @selector(stop);
  methods[6].selector = @selector(processLocalMessageWithJavaNetInetSocketAddress:withByteArray:);
  methods[7].selector = @selector(parseJSONWithNSString:withBoolean:);
  methods[8].selector = @selector(parseJSONWithNSString:);
  methods[9].selector = @selector(parseJSONSmartWithNSString:);
  methods[10].selector = @selector(fatalExitWithJavaIoUnsupportedEncodingException:);
  methods[11].selector = @selector(processMessageInternalWithJavaNioChannelsSocketChannel:withJavaNioByteBuffer:);
  methods[12].selector = @selector(decodeWithByteArray:);
  methods[13].selector = @selector(decodeWithByteArray:withInt:withInt:);
  methods[14].selector = @selector(demultiplexMessageWithEduUmassCsNioNioutilsNIOHeader:withJavaNioByteBuffer:);
  methods[15].selector = @selector(demultiplexLocalMessageWithEduUmassCsNioNioutilsNIOHeader:withByteArray:);
  methods[16].selector = @selector(callDemultiplexerHandlerWithEduUmassCsNioNioutilsNIOHeader:withByteArray:withEduUmassCsNioAbstractPacketDemultiplexer:);
  methods[17].selector = @selector(description);
  methods[18].selector = @selector(demultiplexMessageWithId:);
  methods[19].selector = @selector(stampAddressIntoJSONObjectWithJavaNetInetSocketAddress:withJavaNetInetSocketAddress:withOrgJsonJSONObject:);
  methods[20].selector = @selector(stampAddressIntoJSONObjectWithJavaNetInetSocketAddress:withJavaNetInetSocketAddress:withNetMinidevJsonJSONObject:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "STRINGIFIED", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 31, -1, -1 },
    { "packetDemuxes_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x2, -1, -1, 32, -1 },
    { "executor_", "LJavaUtilConcurrentScheduledExecutorService;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "log", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduUmassCsNioAbstractPacketDemultiplexer;", "(Ledu/umass/cs/nio/AbstractPacketDemultiplexer<*>;)V", "addPacketDemultiplexer", "precedePacketDemultiplexer", "processData", "LJavaNioChannelsSocketChannel;LJavaNioByteBuffer;", "processLocalMessage", "LJavaNetInetSocketAddress;[B", "parseJSON", "LNSString;Z", "LNSString;", "parseJSONSmart", "fatalExit", "LJavaIoUnsupportedEncodingException;", "processMessageInternal", "LJavaIoIOException;", "decode", "[B", "[BII", "demultiplexMessage", "LEduUmassCsNioNioutilsNIOHeader;LJavaNioByteBuffer;", "demultiplexLocalMessage", "LEduUmassCsNioNioutilsNIOHeader;[B", "callDemultiplexerHandler", "LEduUmassCsNioNioutilsNIOHeader;[BLEduUmassCsNioAbstractPacketDemultiplexer;", "(Ledu/umass/cs/nio/nioutils/NIOHeader;[BLedu/umass/cs/nio/AbstractPacketDemultiplexer<*>;)Z", "toString", "LNSObject;", "stampAddressIntoJSONObject", "LJavaNetInetSocketAddress;LJavaNetInetSocketAddress;LOrgJsonJSONObject;", "LJavaNetInetSocketAddress;LJavaNetInetSocketAddress;LNetMinidevJsonJSONObject;", &EduUmassCsNioMessageExtractor_STRINGIFIED, "Ljava/util/ArrayList<Ledu/umass/cs/nio/AbstractPacketDemultiplexer<*>;>;", &EduUmassCsNioMessageExtractor_log, "LEduUmassCsNioMessageExtractor_MessageWorker;" };
  static const J2ObjcClassInfo _EduUmassCsNioMessageExtractor = { "MessageExtractor", "edu.umass.cs.nio", ptrTable, methods, fields, 7, 0x1, 21, 4, -1, 34, -1, -1, -1 };
  return &_EduUmassCsNioMessageExtractor;
}

+ (void)initialize {
  if (self == [EduUmassCsNioMessageExtractor class]) {
    JreStrongAssign(&EduUmassCsNioMessageExtractor_log, EduUmassCsNioNIOTransport_getLogger());
    J2OBJC_SET_INITIALIZED(EduUmassCsNioMessageExtractor)
  }
}

@end

void EduUmassCsNioMessageExtractor_initWithEduUmassCsNioAbstractPacketDemultiplexer_(EduUmassCsNioMessageExtractor *self, EduUmassCsNioAbstractPacketDemultiplexer *pd) {
  NSObject_init(self);
  JreStrongAssign(&self->executor_, JavaUtilConcurrentExecutors_newScheduledThreadPoolWithInt_(1));
  JreStrongAssignAndConsume(&self->packetDemuxes_, new_JavaUtilArrayList_init());
  [self->packetDemuxes_ addWithId:pd];
}

EduUmassCsNioMessageExtractor *new_EduUmassCsNioMessageExtractor_initWithEduUmassCsNioAbstractPacketDemultiplexer_(EduUmassCsNioAbstractPacketDemultiplexer *pd) {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageExtractor, initWithEduUmassCsNioAbstractPacketDemultiplexer_, pd)
}

EduUmassCsNioMessageExtractor *create_EduUmassCsNioMessageExtractor_initWithEduUmassCsNioAbstractPacketDemultiplexer_(EduUmassCsNioAbstractPacketDemultiplexer *pd) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageExtractor, initWithEduUmassCsNioAbstractPacketDemultiplexer_, pd)
}

void EduUmassCsNioMessageExtractor_init(EduUmassCsNioMessageExtractor *self) {
  EduUmassCsNioMessageExtractor_initWithEduUmassCsNioAbstractPacketDemultiplexer_(self, create_EduUmassCsNioNioutilsPacketDemultiplexerDefault_init());
}

EduUmassCsNioMessageExtractor *new_EduUmassCsNioMessageExtractor_init() {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageExtractor, init)
}

EduUmassCsNioMessageExtractor *create_EduUmassCsNioMessageExtractor_init() {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageExtractor, init)
}

OrgJsonJSONObject *EduUmassCsNioMessageExtractor_parseJSONWithNSString_withBoolean_(NSString *msg, jboolean cacheStringified) {
  EduUmassCsNioMessageExtractor_initialize();
  OrgJsonJSONObject *jsonData = nil;
  @try {
    if (((jint) [((NSString *) nil_chk(msg)) length]) > 0 && EduUmassCsNioJSONPacket_couldBeJSONWithNSString_(msg)) jsonData = create_OrgJsonJSONObject_initWithNSString_(msg);
    if (cacheStringified) [((OrgJsonJSONObject *) nil_chk(jsonData)) putWithNSString:EduUmassCsNioMessageExtractor_STRINGIFIED withId:msg];
  }
  @catch (OrgJsonJSONException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EduUmassCsNioMessageExtractor_log)) severeWithNSString:JreStrcat("$$", @"Received incorrectly formatted JSON message: ", msg)];
    [((OrgJsonJSONException *) nil_chk(e)) printStackTrace];
  }
  return jsonData;
}

OrgJsonJSONObject *EduUmassCsNioMessageExtractor_parseJSONWithNSString_(NSString *msg) {
  EduUmassCsNioMessageExtractor_initialize();
  return EduUmassCsNioMessageExtractor_parseJSONWithNSString_(msg);
}

NetMinidevJsonJSONObject *EduUmassCsNioMessageExtractor_parseJSONSmartWithNSString_(NSString *msg) {
  EduUmassCsNioMessageExtractor_initialize();
  NetMinidevJsonJSONObject *jsonData = nil;
  @try {
    if (((jint) [((NSString *) nil_chk(msg)) length]) > 0) jsonData = (NetMinidevJsonJSONObject *) cast_chk(NetMinidevJsonJSONValue_parseWithNSString_(msg), [NetMinidevJsonJSONObject class]);
  }
  @catch (JavaLangException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EduUmassCsNioMessageExtractor_log)) severeWithNSString:JreStrcat("$$", @"Received incorrectly formatted JSON message: ", msg)];
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
  return jsonData;
}

void EduUmassCsNioMessageExtractor_fatalExitWithJavaIoUnsupportedEncodingException_(JavaIoUnsupportedEncodingException *e) {
  EduUmassCsNioMessageExtractor_initialize();
  [((JavaIoUnsupportedEncodingException *) nil_chk(e)) printStackTrace];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$", @"NIO failed because the charset encoding ", EduUmassCsNioMessageNIOTransport_NIO_CHARSET_ENCODING, @" is not supported; exiting")];
  JavaLangSystem_exitWithInt_(1);
}

void EduUmassCsNioMessageExtractor_processMessageInternalWithJavaNioChannelsSocketChannel_withJavaNioByteBuffer_(EduUmassCsNioMessageExtractor *self, JavaNioChannelsSocketChannel *socket, JavaNioByteBuffer *incoming) {
  jlong delay = -1;
  if (EduUmassCsNioJSONDelayEmulator_isDelayEmulated()) {
    IOSByteArray *msg = [IOSByteArray arrayWithLength:[((JavaNioByteBuffer *) nil_chk(incoming)) remaining]];
    [incoming getWithByteArray:msg];
    NSString *message = [NSString java_stringWithBytes:msg charsetName:EduUmassCsNioMessageNIOTransport_NIO_CHARSET_ENCODING];
    if ((delay = JavaLangMath_maxWithLong_withLong_(0, EduUmassCsNioJSONDelayEmulator_getEmulatedDelayWithNSString_(message))) >= 0) [((id<JavaUtilConcurrentScheduledExecutorService>) nil_chk(self->executor_)) scheduleWithJavaLangRunnable:create_EduUmassCsNioMessageExtractor_MessageWorker_initWithEduUmassCsNioMessageExtractor_withJavaNioChannelsSocketChannel_withByteArray_withJavaUtilArrayList_(self, socket, msg, self->packetDemuxes_) withLong:delay withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  }
  else EduUmassCsNioMessageExtractor_demultiplexMessageWithEduUmassCsNioNioutilsNIOHeader_withJavaNioByteBuffer_(self, create_EduUmassCsNioNioutilsNIOHeader_initWithJavaNetInetSocketAddress_withJavaNetInetSocketAddress_((JavaNetInetSocketAddress *) cast_chk([((JavaNioChannelsSocketChannel *) nil_chk(socket)) getRemoteAddress], [JavaNetInetSocketAddress class]), (JavaNetInetSocketAddress *) cast_chk([socket getLocalAddress], [JavaNetInetSocketAddress class])), incoming);
}

NSString *EduUmassCsNioMessageExtractor_decodeWithByteArray_(IOSByteArray *bytes) {
  EduUmassCsNioMessageExtractor_initialize();
  return [NSString java_stringWithBytes:bytes charsetName:EduUmassCsNioMessageNIOTransport_NIO_CHARSET_ENCODING];
}

NSString *EduUmassCsNioMessageExtractor_decodeWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length) {
  EduUmassCsNioMessageExtractor_initialize();
  return [NSString java_stringWithBytes:bytes offset:offset length:length charsetName:EduUmassCsNioMessageNIOTransport_NIO_CHARSET_ENCODING];
}

void EduUmassCsNioMessageExtractor_demultiplexMessageWithEduUmassCsNioNioutilsNIOHeader_withJavaNioByteBuffer_(EduUmassCsNioMessageExtractor *self, EduUmassCsNioNioutilsNIOHeader *header, JavaNioByteBuffer *incoming) {
  jboolean extracted = false;
  IOSByteArray *msg = nil;
  {
    for (EduUmassCsNioAbstractPacketDemultiplexer * __strong pd in nil_chk(self->packetDemuxes_)) {
      if ([pd isKindOfClass:[EduUmassCsNioNioutilsPacketDemultiplexerDefault class]] || [((EduUmassCsNioAbstractPacketDemultiplexer *) nil_chk(pd)) isCongestedWithEduUmassCsNioNioutilsNIOHeader:header]) continue;
      if (!extracted) {
        msg = [IOSByteArray arrayWithLength:[((JavaNioByteBuffer *) nil_chk(incoming)) remaining]];
        [incoming getWithByteArray:msg];
        extracted = true;
        EduUmassCsNioNioutilsNIOInstrumenter_incrBytesRcvdWithInt_(msg->size_ + 8);
      }
      if (EduUmassCsNioMessageExtractor_callDemultiplexerHandlerWithEduUmassCsNioNioutilsNIOHeader_withByteArray_withEduUmassCsNioAbstractPacketDemultiplexer_(self, header, msg, pd)) return;
    }
  }
}

void EduUmassCsNioMessageExtractor_demultiplexLocalMessageWithEduUmassCsNioNioutilsNIOHeader_withByteArray_(EduUmassCsNioMessageExtractor *self, EduUmassCsNioNioutilsNIOHeader *header, IOSByteArray *message) {
  {
    for (EduUmassCsNioAbstractPacketDemultiplexer * __strong pd in nil_chk(self->packetDemuxes_)) {
      if ([pd isKindOfClass:[EduUmassCsNioNioutilsPacketDemultiplexerDefault class]]) continue;
      if (EduUmassCsNioMessageExtractor_callDemultiplexerHandlerWithEduUmassCsNioNioutilsNIOHeader_withByteArray_withEduUmassCsNioAbstractPacketDemultiplexer_(self, header, message, pd)) return;
    }
  }
}

jboolean EduUmassCsNioMessageExtractor_callDemultiplexerHandlerWithEduUmassCsNioNioutilsNIOHeader_withByteArray_withEduUmassCsNioAbstractPacketDemultiplexer_(EduUmassCsNioMessageExtractor *self, EduUmassCsNioNioutilsNIOHeader *header, IOSByteArray *message, EduUmassCsNioAbstractPacketDemultiplexer *pd) {
  @try {
    JavaUtilLoggingLevel *level = JreLoadStatic(JavaUtilLoggingLevel, FINEST);
    [((JavaUtilLoggingLogger *) nil_chk(EduUmassCsNioMessageExtractor_log)) logWithJavaUtilLoggingLevel:level withNSString:@"{0} calling {1}.handleMessageSuper({2}:{3})" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ self, pd, header, [EduUmassCsNioMessageExtractor_log isLoggableWithJavaUtilLoggingLevel:level] ? EduUmassCsUtilsUtil_truncateWithId_withInt_withInt_(create_EduUmassCsUtilsStringer_initWithByteArray_(message), 32, 32) : message } count:4 type:NSObject_class_()]];
    if ([((EduUmassCsNioAbstractPacketDemultiplexer *) nil_chk(pd)) handleMessageSuperWithByteArray:message withEduUmassCsNioNioutilsNIOHeader:header]) return true;
  }
  @catch (OrgJsonJSONException *je) {
    [((OrgJsonJSONException *) nil_chk(je)) printStackTrace];
  }
  return false;
}

OrgJsonJSONObject *EduUmassCsNioMessageExtractor_stampAddressIntoJSONObjectWithJavaNetInetSocketAddress_withJavaNetInetSocketAddress_withOrgJsonJSONObject_(JavaNetInetSocketAddress *sndrAddress, JavaNetInetSocketAddress *rcvrAddress, OrgJsonJSONObject *json) {
  EduUmassCsNioMessageExtractor_initialize();
  @try {
    if (![((OrgJsonJSONObject *) nil_chk(json)) hasWithNSString:EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD]) [json putWithNSString:EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD withId:JreStrcat("$CI", [((JavaNetInetAddress *) nil_chk([((JavaNetInetSocketAddress *) nil_chk(sndrAddress)) getAddress])) getHostAddress], ':', [sndrAddress getPort])];
    if (![json hasWithNSString:EduUmassCsNioMessageNIOTransport_SNDR_IP_FIELD]) [json putWithNSString:EduUmassCsNioMessageNIOTransport_SNDR_IP_FIELD withId:[((JavaNetInetAddress *) nil_chk([((JavaNetInetSocketAddress *) nil_chk(sndrAddress)) getAddress])) getHostAddress]];
    if (![json hasWithNSString:EduUmassCsNioMessageNIOTransport_SNDR_PORT_FIELD]) [json putWithNSString:EduUmassCsNioMessageNIOTransport_SNDR_PORT_FIELD withInt:[((JavaNetInetSocketAddress *) nil_chk(sndrAddress)) getPort]];
    if (![json hasWithNSString:EduUmassCsNioMessageNIOTransport_RCVR_ADDRESS_FIELD]) [json putWithNSString:EduUmassCsNioMessageNIOTransport_RCVR_ADDRESS_FIELD withId:JreStrcat("$CI", [((JavaNetInetAddress *) nil_chk([((JavaNetInetSocketAddress *) nil_chk(rcvrAddress)) getAddress])) getHostAddress], ':', [rcvrAddress getPort])];
  }
  @catch (OrgJsonJSONException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EduUmassCsNioMessageExtractor_log)) severeWithNSString:@"Encountered JSONException while stamping sender address and port at receiver: "];
    [((OrgJsonJSONException *) nil_chk(e)) printStackTrace];
  }
  return json;
}

NetMinidevJsonJSONObject *EduUmassCsNioMessageExtractor_stampAddressIntoJSONObjectWithJavaNetInetSocketAddress_withJavaNetInetSocketAddress_withNetMinidevJsonJSONObject_(JavaNetInetSocketAddress *sndrAddress, JavaNetInetSocketAddress *rcvrAddress, NetMinidevJsonJSONObject *json) {
  EduUmassCsNioMessageExtractor_initialize();
  @try {
    if (![((NetMinidevJsonJSONObject *) nil_chk(json)) containsKeyWithId:EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD]) [json putWithId:EduUmassCsNioMessageNIOTransport_SNDR_ADDRESS_FIELD withId:[((JavaNetInetSocketAddress *) nil_chk(sndrAddress)) description]];
    if (![json containsKeyWithId:EduUmassCsNioMessageNIOTransport_RCVR_ADDRESS_FIELD]) [json putWithId:EduUmassCsNioMessageNIOTransport_RCVR_ADDRESS_FIELD withId:[((JavaNetInetSocketAddress *) nil_chk(rcvrAddress)) description]];
  }
  @catch (JavaLangException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EduUmassCsNioMessageExtractor_log)) severeWithNSString:@"Encountered JSONException while stamping sender address and port at receiver: "];
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
  return json;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsNioMessageExtractor)

@implementation EduUmassCsNioMessageExtractor_MessageWorker

- (instancetype)initWithEduUmassCsNioMessageExtractor:(EduUmassCsNioMessageExtractor *)outer$
                     withJavaNioChannelsSocketChannel:(JavaNioChannelsSocketChannel *)socket
                                        withByteArray:(IOSByteArray *)msg
                                withJavaUtilArrayList:(JavaUtilArrayList *)pdemuxes {
  EduUmassCsNioMessageExtractor_MessageWorker_initWithEduUmassCsNioMessageExtractor_withJavaNioChannelsSocketChannel_withByteArray_withJavaUtilArrayList_(self, outer$, socket, msg, pdemuxes);
  return self;
}

- (void)run {
  @try {
    EduUmassCsNioMessageExtractor_demultiplexLocalMessageWithEduUmassCsNioNioutilsNIOHeader_withByteArray_(this$0_, create_EduUmassCsNioNioutilsNIOHeader_initWithJavaNetInetSocketAddress_withJavaNetInetSocketAddress_((JavaNetInetSocketAddress *) cast_chk([((JavaNioChannelsSocketChannel *) nil_chk(socket_)) getRemoteAddress], [JavaNetInetSocketAddress class]), (JavaNetInetSocketAddress *) cast_chk([socket_ getLocalAddress], [JavaNetInetSocketAddress class])), msg_);
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    EduUmassCsNioMessageExtractor_fatalExitWithJavaIoUnsupportedEncodingException_(e);
  }
  @catch (JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(socket_);
  RELEASE_(msg_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduUmassCsNioMessageExtractor:withJavaNioChannelsSocketChannel:withByteArray:withJavaUtilArrayList:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduUmassCsNioMessageExtractor;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "socket_", "LJavaNioChannelsSocketChannel;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "msg_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaNioChannelsSocketChannel;[BLJavaUtilArrayList;", "(Ljava/nio/channels/SocketChannel;[BLjava/util/ArrayList<Ledu/umass/cs/nio/AbstractPacketDemultiplexer<*>;>;)V", "LEduUmassCsNioMessageExtractor;" };
  static const J2ObjcClassInfo _EduUmassCsNioMessageExtractor_MessageWorker = { "MessageWorker", "edu.umass.cs.nio", ptrTable, methods, fields, 7, 0x2, 2, 3, 2, -1, -1, -1, -1 };
  return &_EduUmassCsNioMessageExtractor_MessageWorker;
}

@end

void EduUmassCsNioMessageExtractor_MessageWorker_initWithEduUmassCsNioMessageExtractor_withJavaNioChannelsSocketChannel_withByteArray_withJavaUtilArrayList_(EduUmassCsNioMessageExtractor_MessageWorker *self, EduUmassCsNioMessageExtractor *outer$, JavaNioChannelsSocketChannel *socket, IOSByteArray *msg, JavaUtilArrayList *pdemuxes) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaUtilTimerTask_init(self);
  JreStrongAssign(&self->msg_, msg);
  JreStrongAssign(&self->socket_, socket);
}

EduUmassCsNioMessageExtractor_MessageWorker *new_EduUmassCsNioMessageExtractor_MessageWorker_initWithEduUmassCsNioMessageExtractor_withJavaNioChannelsSocketChannel_withByteArray_withJavaUtilArrayList_(EduUmassCsNioMessageExtractor *outer$, JavaNioChannelsSocketChannel *socket, IOSByteArray *msg, JavaUtilArrayList *pdemuxes) {
  J2OBJC_NEW_IMPL(EduUmassCsNioMessageExtractor_MessageWorker, initWithEduUmassCsNioMessageExtractor_withJavaNioChannelsSocketChannel_withByteArray_withJavaUtilArrayList_, outer$, socket, msg, pdemuxes)
}

EduUmassCsNioMessageExtractor_MessageWorker *create_EduUmassCsNioMessageExtractor_MessageWorker_initWithEduUmassCsNioMessageExtractor_withJavaNioChannelsSocketChannel_withByteArray_withJavaUtilArrayList_(EduUmassCsNioMessageExtractor *outer$, JavaNioChannelsSocketChannel *socket, IOSByteArray *msg, JavaUtilArrayList *pdemuxes) {
  J2OBJC_CREATE_IMPL(EduUmassCsNioMessageExtractor_MessageWorker, initWithEduUmassCsNioMessageExtractor_withJavaNioChannelsSocketChannel_withByteArray_withJavaUtilArrayList_, outer$, socket, msg, pdemuxes)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsNioMessageExtractor_MessageWorker)
