//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/nio/JSONPacket.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/umass/cs/nio/JSONPacket.h"
#include "edu/umass/cs/nio/MessageExtractor.h"
#include "edu/umass/cs/nio/interfaces/IntegerPacketType.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Integer.h"
#include "java/util/Arrays.h"
#include "org/json/JSONException.h"
#include "org/json/JSONObject.h"

NSString *EduUmassCsNioJSONPacket_PACKET_TYPE = @"type";

@implementation EduUmassCsNioJSONPacket

- (instancetype)initWithEduUmassCsNioInterfacesIntegerPacketType:(id<EduUmassCsNioInterfacesIntegerPacketType>)t {
  EduUmassCsNioJSONPacket_initWithEduUmassCsNioInterfacesIntegerPacketType_(self, t);
  return self;
}

- (instancetype)initWithOrgJsonJSONObject:(OrgJsonJSONObject *)json {
  EduUmassCsNioJSONPacket_initWithOrgJsonJSONObject_(self, json);
  return self;
}

- (OrgJsonJSONObject *)toJSONObjectImpl {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgJsonJSONObject *)toJSONObject {
  OrgJsonJSONObject *json = [self toJSONObjectImpl];
  [((OrgJsonJSONObject *) nil_chk(json)) putWithNSString:EduUmassCsNioJSONPacket_PACKET_TYPE withInt:type_];
  return json;
}

- (NSString *)description {
  @try {
    return [((OrgJsonJSONObject *) nil_chk([self toJSONObject])) description];
  }
  @catch (OrgJsonJSONException *je) {
    [((OrgJsonJSONException *) nil_chk(je)) printStackTrace];
  }
  return nil;
}

+ (JavaLangInteger *)getPacketTypeWithOrgJsonJSONObject:(OrgJsonJSONObject *)json {
  return EduUmassCsNioJSONPacket_getPacketTypeWithOrgJsonJSONObject_(json);
}

+ (void)putPacketTypeWithOrgJsonJSONObject:(OrgJsonJSONObject *)json
                                   withInt:(jint)type {
  EduUmassCsNioJSONPacket_putPacketTypeWithOrgJsonJSONObject_withInt_(json, type);
}

+ (void)putPacketTypeWithOrgJsonJSONObject:(OrgJsonJSONObject *)json
withEduUmassCsNioInterfacesIntegerPacketType:(id<EduUmassCsNioInterfacesIntegerPacketType>)type {
  EduUmassCsNioJSONPacket_putPacketTypeWithOrgJsonJSONObject_withEduUmassCsNioInterfacesIntegerPacketType_(json, type);
}

+ (jboolean)couldBeJSONWithNSString:(NSString *)str {
  return EduUmassCsNioJSONPacket_couldBeJSONWithNSString_(str);
}

+ (jboolean)couldBeJSONObjectWithNSString:(NSString *)str {
  return EduUmassCsNioJSONPacket_couldBeJSONObjectWithNSString_(str);
}

+ (jboolean)couldBeJSONArrayWithNSString:(NSString *)str {
  return EduUmassCsNioJSONPacket_couldBeJSONArrayWithNSString_(str);
}

+ (jboolean)couldBeJSONWithByteArray:(IOSByteArray *)bytes {
  return EduUmassCsNioJSONPacket_couldBeJSONWithByteArray_(bytes);
}

+ (jboolean)couldBeJSONWithByteArray:(IOSByteArray *)bytes
                             withInt:(jint)offset {
  return EduUmassCsNioJSONPacket_couldBeJSONWithByteArray_withInt_(bytes, offset);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "LOrgJsonJSONObject;", 0x404, -1, -1, 2, -1, -1, -1 },
    { NULL, "LOrgJsonJSONObject;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x19, 4, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x19, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x19, 5, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 8, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 10, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 11, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 8, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x19, 8, 13, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduUmassCsNioInterfacesIntegerPacketType:);
  methods[1].selector = @selector(initWithOrgJsonJSONObject:);
  methods[2].selector = @selector(toJSONObjectImpl);
  methods[3].selector = @selector(toJSONObject);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(getPacketTypeWithOrgJsonJSONObject:);
  methods[6].selector = @selector(putPacketTypeWithOrgJsonJSONObject:withInt:);
  methods[7].selector = @selector(putPacketTypeWithOrgJsonJSONObject:withEduUmassCsNioInterfacesIntegerPacketType:);
  methods[8].selector = @selector(couldBeJSONWithNSString:);
  methods[9].selector = @selector(couldBeJSONObjectWithNSString:);
  methods[10].selector = @selector(couldBeJSONArrayWithNSString:);
  methods[11].selector = @selector(couldBeJSONWithByteArray:);
  methods[12].selector = @selector(couldBeJSONWithByteArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PACKET_TYPE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "type_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduUmassCsNioInterfacesIntegerPacketType;", "LOrgJsonJSONObject;", "LOrgJsonJSONException;", "toString", "getPacketType", "putPacketType", "LOrgJsonJSONObject;I", "LOrgJsonJSONObject;LEduUmassCsNioInterfacesIntegerPacketType;", "couldBeJSON", "LNSString;", "couldBeJSONObject", "couldBeJSONArray", "[B", "[BI", &EduUmassCsNioJSONPacket_PACKET_TYPE };
  static const J2ObjcClassInfo _EduUmassCsNioJSONPacket = { "JSONPacket", "edu.umass.cs.nio", ptrTable, methods, fields, 7, 0x401, 13, 2, -1, -1, -1, -1, -1 };
  return &_EduUmassCsNioJSONPacket;
}

@end

void EduUmassCsNioJSONPacket_initWithEduUmassCsNioInterfacesIntegerPacketType_(EduUmassCsNioJSONPacket *self, id<EduUmassCsNioInterfacesIntegerPacketType> t) {
  NSObject_init(self);
  self->type_ = [((id<EduUmassCsNioInterfacesIntegerPacketType>) nil_chk(t)) getInt];
}

void EduUmassCsNioJSONPacket_initWithOrgJsonJSONObject_(EduUmassCsNioJSONPacket *self, OrgJsonJSONObject *json) {
  NSObject_init(self);
  self->type_ = [((JavaLangInteger *) nil_chk(EduUmassCsNioJSONPacket_getPacketTypeWithOrgJsonJSONObject_(json))) intValue];
}

JavaLangInteger *EduUmassCsNioJSONPacket_getPacketTypeWithOrgJsonJSONObject_(OrgJsonJSONObject *json) {
  EduUmassCsNioJSONPacket_initialize();
  if ([((OrgJsonJSONObject *) nil_chk(json)) hasWithNSString:EduUmassCsNioJSONPacket_PACKET_TYPE]) return JavaLangInteger_valueOfWithInt_([json getIntWithNSString:EduUmassCsNioJSONPacket_PACKET_TYPE]);
  else return nil;
}

void EduUmassCsNioJSONPacket_putPacketTypeWithOrgJsonJSONObject_withInt_(OrgJsonJSONObject *json, jint type) {
  EduUmassCsNioJSONPacket_initialize();
  @try {
    [((OrgJsonJSONObject *) nil_chk(json)) putWithNSString:EduUmassCsNioJSONPacket_PACKET_TYPE withInt:type];
  }
  @catch (OrgJsonJSONException *e) {
    [((OrgJsonJSONException *) nil_chk(e)) printStackTrace];
  }
}

void EduUmassCsNioJSONPacket_putPacketTypeWithOrgJsonJSONObject_withEduUmassCsNioInterfacesIntegerPacketType_(OrgJsonJSONObject *json, id<EduUmassCsNioInterfacesIntegerPacketType> type) {
  EduUmassCsNioJSONPacket_initialize();
  @try {
    [((OrgJsonJSONObject *) nil_chk(json)) putWithNSString:EduUmassCsNioJSONPacket_PACKET_TYPE withInt:[((id<EduUmassCsNioInterfacesIntegerPacketType>) nil_chk(type)) getInt]];
  }
  @catch (OrgJsonJSONException *e) {
    [((OrgJsonJSONException *) nil_chk(e)) printStackTrace];
  }
}

jboolean EduUmassCsNioJSONPacket_couldBeJSONWithNSString_(NSString *str) {
  EduUmassCsNioJSONPacket_initialize();
  return [((NSString *) nil_chk(str)) hasPrefix:@"{"] || [str hasPrefix:@"["];
}

jboolean EduUmassCsNioJSONPacket_couldBeJSONObjectWithNSString_(NSString *str) {
  EduUmassCsNioJSONPacket_initialize();
  return [((NSString *) nil_chk(str)) hasPrefix:@"{"];
}

jboolean EduUmassCsNioJSONPacket_couldBeJSONArrayWithNSString_(NSString *str) {
  EduUmassCsNioJSONPacket_initialize();
  return [((NSString *) nil_chk(str)) hasPrefix:@"["];
}

jboolean EduUmassCsNioJSONPacket_couldBeJSONWithByteArray_(IOSByteArray *bytes) {
  EduUmassCsNioJSONPacket_initialize();
  NSString *str;
  @try {
    str = EduUmassCsNioMessageExtractor_decodeWithByteArray_(JavaUtilArrays_copyOfWithByteArray_withInt_(bytes, 4));
    return [((NSString *) nil_chk(str)) hasPrefix:@"{"] || [str hasPrefix:@"["];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    [((JavaIoUnsupportedEncodingException *) nil_chk(e)) printStackTrace];
  }
  return IOSByteArray_Get(nil_chk(bytes), 0) == '{' || IOSByteArray_Get(bytes, 0) == '[';
}

jboolean EduUmassCsNioJSONPacket_couldBeJSONWithByteArray_withInt_(IOSByteArray *bytes, jint offset) {
  EduUmassCsNioJSONPacket_initialize();
  NSString *str;
  @try {
    str = EduUmassCsNioMessageExtractor_decodeWithByteArray_(JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(bytes, offset, offset + 4));
    return [((NSString *) nil_chk(str)) hasPrefix:@"{"] || [str hasPrefix:@"["];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    [((JavaIoUnsupportedEncodingException *) nil_chk(e)) printStackTrace];
  }
  return IOSByteArray_Get(nil_chk(bytes), offset) == '{' || IOSByteArray_Get(bytes, offset) == '[';
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduUmassCsNioJSONPacket)
