//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/edu/umass/cs/nio/interfaces/NodeConfig.java
//

#include "J2ObjC_source.h"
#include "edu/umass/cs/nio/interfaces/NodeConfig.h"

@interface EduUmassCsNioInterfacesNodeConfig : NSObject

@end

@implementation EduUmassCsNioInterfacesNodeConfig

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaNetInetAddress;", 0x401, 3, 1, -1, 4, -1, -1 },
    { NULL, "LJavaNetInetAddress;", 0x401, 5, 1, -1, 4, -1, -1 },
    { NULL, "I", 0x401, 6, 1, -1, 7, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x401, -1, -1, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(nodeExistsWithId:);
  methods[1].selector = @selector(getNodeAddressWithId:);
  methods[2].selector = @selector(getBindAddressWithId:);
  methods[3].selector = @selector(getNodePortWithId:);
  methods[4].selector = @selector(getNodeIDs);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "nodeExists", "LNSObject;", "(TNodeIDType;)Z", "getNodeAddress", "(TNodeIDType;)Ljava/net/InetAddress;", "getBindAddress", "getNodePort", "(TNodeIDType;)I", "()Ljava/util/Set<TNodeIDType;>;", "<NodeIDType:Ljava/lang/Object;>Ljava/lang/Object;Ledu/umass/cs/nio/interfaces/Stringifiable<TNodeIDType;>;" };
  static const J2ObjcClassInfo _EduUmassCsNioInterfacesNodeConfig = { "NodeConfig", "edu.umass.cs.nio.interfaces", ptrTable, methods, NULL, 7, 0x609, 5, 0, -1, -1, -1, 9, -1 };
  return &_EduUmassCsNioInterfacesNodeConfig;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduUmassCsNioInterfacesNodeConfig)
