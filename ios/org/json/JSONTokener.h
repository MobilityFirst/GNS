//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../gig_ios/src/org/json/JSONTokener.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJsonJSONTokener")
#ifdef RESTRICT_OrgJsonJSONTokener
#define INCLUDE_ALL_OrgJsonJSONTokener 0
#else
#define INCLUDE_ALL_OrgJsonJSONTokener 1
#endif
#undef RESTRICT_OrgJsonJSONTokener

#if !defined (OrgJsonJSONTokener_) && (INCLUDE_ALL_OrgJsonJSONTokener || defined(INCLUDE_OrgJsonJSONTokener))
#define OrgJsonJSONTokener_

@class JavaIoInputStream;
@class JavaIoReader;
@class OrgJsonJSONException;

@interface OrgJsonJSONTokener : NSObject

#pragma mark Public

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inputStream;

- (instancetype)initWithJavaIoReader:(JavaIoReader *)reader;

- (instancetype)initWithNSString:(NSString *)s;

- (void)back;

+ (jint)dehexcharWithChar:(jchar)c;

- (jboolean)end;

- (jboolean)more;

- (jchar)next;

- (jchar)nextWithChar:(jchar)c;

- (NSString *)nextWithInt:(jint)n;

- (jchar)nextClean;

- (NSString *)nextStringWithChar:(jchar)quote;

- (NSString *)nextToWithChar:(jchar)delimiter;

- (NSString *)nextToWithNSString:(NSString *)delimiters;

- (id)nextValue;

- (jchar)skipToWithChar:(jchar)to;

- (OrgJsonJSONException *)syntaxErrorWithNSString:(NSString *)message;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJsonJSONTokener)

FOUNDATION_EXPORT void OrgJsonJSONTokener_initWithJavaIoReader_(OrgJsonJSONTokener *self, JavaIoReader *reader);

FOUNDATION_EXPORT OrgJsonJSONTokener *new_OrgJsonJSONTokener_initWithJavaIoReader_(JavaIoReader *reader) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJsonJSONTokener *create_OrgJsonJSONTokener_initWithJavaIoReader_(JavaIoReader *reader);

FOUNDATION_EXPORT void OrgJsonJSONTokener_initWithJavaIoInputStream_(OrgJsonJSONTokener *self, JavaIoInputStream *inputStream);

FOUNDATION_EXPORT OrgJsonJSONTokener *new_OrgJsonJSONTokener_initWithJavaIoInputStream_(JavaIoInputStream *inputStream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJsonJSONTokener *create_OrgJsonJSONTokener_initWithJavaIoInputStream_(JavaIoInputStream *inputStream);

FOUNDATION_EXPORT void OrgJsonJSONTokener_initWithNSString_(OrgJsonJSONTokener *self, NSString *s);

FOUNDATION_EXPORT OrgJsonJSONTokener *new_OrgJsonJSONTokener_initWithNSString_(NSString *s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJsonJSONTokener *create_OrgJsonJSONTokener_initWithNSString_(NSString *s);

FOUNDATION_EXPORT jint OrgJsonJSONTokener_dehexcharWithChar_(jchar c);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsonJSONTokener)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJsonJSONTokener")
