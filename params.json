{"name":"J2ObjC","tagline":"A Java to iOS Objective-C translation tool and runtime.","body":"# J2ObjC: Java to Objective-C Translator and Runtime #\r\n\r\n**Project site:** <http://j2objc.org><br>\r\n**J2ObjC blog:** <http://j2objc.blogspot.com><br>\r\n**Questions and discussion:** <http://groups.google.com/group/j2objc-discuss>\r\n\r\n### What J2ObjC Is ###\r\nJ2ObjC is an open-source command-line tool from Google that translates\r\nJava code to Objective-C for the iOS (iPhone/iPad) platform. This tool\r\nenables Java code to be part of an iOS application's build, as no editing\r\nof the generated files is necessary. The goal is to write an app's non-UI\r\ncode (such as data access, or application logic) in Java, which is then\r\nshared by web apps (using GWT), Android apps, and iOS apps.\r\n\r\nJ2ObjC supports most Java language and runtime features required by\r\nclient-side application developers, including exceptions, inner and\r\nanonymous classes, generic types, threads and reflection. JUnit test\r\ntranslation and execution is also supported.\r\n\r\nJ2ObjC is currently between alpha and beta quality. Several Google projects\r\nrely on it, but when new projects first start working with it, they usually\r\nfind new bugs to be fixed.\r\n\r\n### What J2ObjC isn't ###\r\nJ2ObjC does not provide any sort of platform-independent UI toolkit, nor are\r\nthere any plans to do so in the future. We believe that iOS UI code needs to\r\nbe written in Objective-C or Objective-C++ using Apple's iOS SDK (Android UIs\r\nusing Android's API, web app UIs using GWT, etc.).\r\n\r\n## Requirements ##\r\n\r\n* JDK 1.6 or higher\r\n* Xcode 4 or higher\r\n* Mac OS X 10.7 or higher\r\n\r\n## License ##\r\n\r\nThis library is distributed under the Apache 2.0 license found in the\r\n[LICENSE](./LICENSE) file.","google":"UA-34671662-2","note":"Don't delete this file! It's used internally to help with page regeneration."}