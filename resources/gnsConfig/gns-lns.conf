#####
# This is a sample GNS config file for a local name server.
# you can a GNS local name server as follows:
# java -cp GNS.jar edu.umass.cs.gns.main.StartLocalNameServer -configFile gns-lns.conf
# 
# if you want to override an option using command line, do it as follows:
# e.g. use id = 7
# java -cp GNS.jar edu.umass.cs.gns.main.StartLocalNameServer -configFile gns-lns.conf -id 7
#
# if a parameter has boolean value, then do it as follows:
# if you want to set parameter to true, then omit the value 'true' from command line
# e.g. to set 'location' to true.
# java -cp GNS.jar edu.umass.cs.gns.main.StartLocalNameServer -configFile gns-lns.conf -id 7  -location
# 
# if you want to set parameter to false, then it is not possible to do it using command line
# you will have to set it in config file.
# 
#####

# node ID of the local name server.
id = 3

# config file specifying list of name servers, local name servers and their IP, ports.
nsfile = /Users/abhigyan/Documents/gns_output/local/local_config

# size of the local name server cache used to store cached copies of name records 
cacheSize = 10000

# number of primaries (replica controllers), must be more than 3. This parameter must be same for LNS and NS.
primary = 3

# Whether to run http server at local name server or not. http server will on port 80, or else 8080
runHttpServer = true


################################################
# Options related to replication used in system
################################################

# Local name server needs to be notified if we are using locality-based replication or beehive replication. 
# the default a local name server is static replication.

# use locality-based replication.
location = true

# if locality-based replication is used, what is the interval (in seconds) at which local name server sends votes
vInterval = 4000

# use beehive replication
beehive = false

# if beehive replication is used, base of DHT used by beehive
beehiveBase = 16

# if beehive replication is used, size of leafset
leafSet = 8

# [not used] options to emulate optimal replication
#optimal = false
#optimalTrace = 
#rInterval = 4000


################################################
# Options related to replica selection 
################################################

# if true, then choose closest replica using (ping latency + server load)
# if false, then choose closest replica using only ping latency
loadDependentRedirection = false

# if loadDependentRedirection, then monitor each ns load at this interval (seconds)
nsLoadMonitorIntervalSeconds = 300


################################################
# Options related to retransmission
################################################

# maximum time (in milliseconds) that a local name server waits for a query to complete. after this time, a query is declared failed.
maxQueryWaitTime = 10000

# [parameter not used, remove from GNS]
#numberOfTransmissions = 3

# timeout interval after which a request is retried.
queryTimeout = 2000

# whether timeout interval is fixed or decided adaptively
adaptiveTimeout = false

# if adaptiveTimeout = True, then these options delta, mu, phi are used. 

# only if adaptiveTimeout=True, weight assigned to latest sample in calculating moving average.
delta = 0.05

# only if adaptiveTimeout=True, co-efficient of estimated RTT in calculating timeout.
mu = 1.0

# only if adaptiveTimeout=True, co-efficient of deviation in calculating timeout.
phi = 6.0


################################################
# Options related to file logging
################################################

fileLoggingLevel = FINE

consoleOutputLevel = FINE

statFileLoggingLevel = FINE

statConsoleOutputLevel = FINE

# if debug mode is true, more verbose log messages are printed
debugMode = true





################################################
## These parameters specific to running experiment. They are not needed to by GNS system. 
################################################

# whether system is being used for running experiments
experimentMode = false


## WORKLOAD related parameters: there are two options to genrate workload, generate a zipf workload or use a trace of lookups and updates


# Workload Option 1: if true, we generate a zipf workload for experiments
zipf = false

# if zipf = true, zipf-exponent of workload
alpha = 0.91

# if zipf = true, number of regular names
rworkload = 1000

# if zipf = true, number of mobile names
mworkload = 1000

#wfile = 

# number of lookups to be generated
numQuery = 0

# number of updates to be generated 
numUpdate = 0

#name = 

# average interval (in ms) at which successive lookup requests are sent (combined for regular + mobile names)
lookupRate = 1.0

# average interval (in ms) at which successive  update requests are sent for regular names
updateRateRegular = 4.5

# average interval (in ms) at which successive  update requests are sent for mobile names
updateRateMobile = 0.4



# Workload Option 2;  specify a trace of lookup and update requests

# trace file of lookup requests, lookup requests are sent at a rate ‘lookupRate’ parameter
lookupTrace = /Users/abhigyan/Documents/gns_output/local/trace/lookupLocal/3

# trace file of update requests, update requests are sent at a rate ‘updateRateRegular’ parameter
updateTrace = /Users/abhigyan/Documents/gns_output/local/trace/updateLocal/3

# if we want to log latency statistics only for a fraction f of requests, where 0 < f <= 1,
# set outputSampleRate to f. we added this option to reduce overhead of logging at local name server
outputSampleRate = 1.0


# other options

tinyQuery = false




