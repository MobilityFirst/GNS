#####
# This is a config file for a name server. Currently used by the EC2 Installer.

# Example command for running the name server:
#
# java -cp dist/GNS.jar edu.umass.cs.gns.nsdesign.StartNameServer -id 0
#

# config file specifying list of name servers, local name servers and their IP, ports.
# a sample config file is found in this folder, with name sample_nsfile
nsfile = name-server-info

# number of primaries (replica controllers), must be more than 3. This parameter must be same for LNS and NS.
primary = 3

# number of worker threads used in system
workerThreadCount = 5


################################################
# Options related to replication used in system
################################################

# if you use location or beehive replication, also specify it in LNS conf file

# Type of replications
# you can set only one of following parameters to be true: location, static, random, beehive. by default, location = true.

# use locality-based replication
location = true

# use static replication, in this case number of replicas = primary
static = false

# use random replication, in this case number of replicas same as location-based replication but they are selected randomly
random = false

# use beehive replication
beehive = false

# type of replication, not implemented anymore
kmediods = false

# type of replication, not implemented anymore
optimal = false


## parameters related to location-based replication

# interval (in seconds) at which system recomputes replicas of each name. Keep rInterval comparable to parameter ‘vInterval’ for LNS
rInterval = 4000

# [not used] interval (in seconds) at which active replica sends read/write stats
aInterval = 4000

# number of replicas for a name = (min_replica + read_rate/write_rate/nconsant). smaller nconstant increases number of replicas
nconstant = 1

# read and write rate are computed using a moving window of (read/write) rates measured in previous x intervals
movingAverageWindowSize = 20

# number of replicas selected in a locality-aware manner
nsVoteSize = 5


## parameters related to beehive replication. these must match with parameters in LNS conf file

# if beehive = true, average hop-count values to be achieved
C = 0.5

# if beehive = true, DHT base parameter
base = 16

# if beehive = true, zipf exponent of workload
alpha = 0.91


# minimum number of replicas of a record, must be >= 3
minReplica = 3

# maximum number of replicas of a record, if maximum replicas > number of name servers, maximum replicas = number of name servers is used
maxReplica = 100


################################################
# Options related to data store used in system
################################################

# which datastore to use. currently only mongo is functional.
dataStore = edu.umass.cs.gns.nameserver.recordmap.MongoRecordMap

# at which port, is mongod process running
mongoPort = 27017

# [not used]
simpleDiskStore = false

# [not used]
dataFolder = false


################################################
# Options related to paxos 
################################################

# paxos logs are stored in this folder
paxosLogFolder = paxoslog

# failure detection send ping message once every failureDetectionMsgInterval seconds
failureDetectionMsgInterval = 10

# failure detection declares a node as failed, if no reply is received until failureDetectionTimeoutInterval seconds
failureDetectionTimeoutInterval = 30


################################################
# Options related to logging
################################################

fileLoggingLevel = INFO
consoleOutputLevel = INFO
statFileLoggingLevel = INFO
statConsoleOutputLevel = WARNING

debugMode = true


################################################
# Options related to emulating ping latencies while running the system 
################################################

# if true, we emulate the latency between NS to NS based on latency given in ‘nsfile’
emulatePingLatencies = false

# we add this fraction of variation in emulated latencies
variation = 0.1


